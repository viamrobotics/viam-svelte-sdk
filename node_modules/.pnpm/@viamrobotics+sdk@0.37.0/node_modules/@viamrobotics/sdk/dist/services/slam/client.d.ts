import type { JsonValue, Struct } from '@bufbuild/protobuf';
import type { CallOptions } from '@connectrpc/connect';
import { RobotClient } from '../../robot';
import type { Options } from '../../types';
import type { Slam } from './slam';
/**
 * A gRPC-web client for a SLAM service.
 *
 * @group Clients
 */
export declare class SlamClient implements Slam {
    private client;
    readonly name: string;
    private readonly options;
    callOptions: CallOptions;
    constructor(client: RobotClient, name: string, options?: Options);
    getPosition(callOptions?: CallOptions): Promise<import("../../gen/service/slam/v1/slam_pb").GetPositionResponse>;
    getPointCloudMap: (returnEditedMap?: boolean, callOptions?: CallOptions) => Promise<Uint8Array>;
    getInternalState: (callOptions?: CallOptions) => Promise<Uint8Array>;
    getProperties(callOptions?: CallOptions): Promise<import("../../gen/service/slam/v1/slam_pb").GetPropertiesResponse>;
    doCommand(command: Struct, callOptions?: CallOptions): Promise<JsonValue>;
}
