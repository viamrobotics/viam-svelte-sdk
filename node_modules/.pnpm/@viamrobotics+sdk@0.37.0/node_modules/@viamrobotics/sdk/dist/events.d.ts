type Callback = (args: unknown) => void;
/**
 * MachineConnectionEvent events are emitted by a Client's EventDispatcher when
 * connection events occur.
 */
export declare enum MachineConnectionEvent {
    CONNECTING = "connecting",
    CONNECTED = "connected",
    DISCONNECTING = "disconnecting",
    DISCONNECTED = "disconnected"
}
export declare class EventDispatcher {
    listeners: Partial<Record<string, Set<Callback>>>;
    on(type: string, listener: Callback): void;
    once(type: string, listener: Callback): void;
    has(type: string, listener: Callback): boolean | undefined;
    off(type: string, listener: Callback): void;
    emit(type: string, args: unknown): void;
}
export {};
