// @generated by protoc-gen-connect-es v1.5.0
// @generated from file component/gripper/v1/gripper.proto (package viam.component.gripper.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GrabRequest, GrabResponse, IsMovingRequest, IsMovingResponse, OpenRequest, OpenResponse, StopRequest, StopResponse } from "./gripper_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse, GetGeometriesRequest, GetGeometriesResponse } from "../../../common/v1/common_pb.js";

/**
 * An GripperService services all grippers associated with a robot
 *
 * @generated from service viam.component.gripper.v1.GripperService
 */
export declare const GripperService: {
  readonly typeName: "viam.component.gripper.v1.GripperService",
  readonly methods: {
    /**
     * Open opens a gripper of the underlying robot.
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.Open
     */
    readonly open: {
      readonly name: "Open",
      readonly I: typeof OpenRequest,
      readonly O: typeof OpenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Grab requests a gripper of the underlying robot to grab.
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.Grab
     */
    readonly grab: {
      readonly name: "Grab",
      readonly I: typeof GrabRequest,
      readonly O: typeof GrabResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stop stops a robot's gripper
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.Stop
     */
    readonly stop: {
      readonly name: "Stop",
      readonly I: typeof StopRequest,
      readonly O: typeof StopResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * IsMoving reports if a component is in motion
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.IsMoving
     */
    readonly isMoving: {
      readonly name: "IsMoving",
      readonly I: typeof IsMovingRequest,
      readonly O: typeof IsMovingResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetGeometries returns the geometries of the component in their current configuration
     *
     * @generated from rpc viam.component.gripper.v1.GripperService.GetGeometries
     */
    readonly getGeometries: {
      readonly name: "GetGeometries",
      readonly I: typeof GetGeometriesRequest,
      readonly O: typeof GetGeometriesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

