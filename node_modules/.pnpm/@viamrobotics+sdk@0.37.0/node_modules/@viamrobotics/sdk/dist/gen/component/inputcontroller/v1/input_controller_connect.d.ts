// @generated by protoc-gen-connect-es v1.5.0
// @generated from file component/inputcontroller/v1/input_controller.proto (package viam.component.inputcontroller.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetControlsRequest, GetControlsResponse, GetEventsRequest, GetEventsResponse, StreamEventsRequest, StreamEventsResponse, TriggerEventRequest, TriggerEventResponse } from "./input_controller_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse, GetGeometriesRequest, GetGeometriesResponse } from "../../../common/v1/common_pb.js";

/**
 * InputControllerService servicestains all input controller associated with a robot
 *
 * @generated from service viam.component.inputcontroller.v1.InputControllerService
 */
export declare const InputControllerService: {
  readonly typeName: "viam.component.inputcontroller.v1.InputControllerService",
  readonly methods: {
    /**
     * GetControls returns a list of GetControls provided by the Controller
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetControls
     */
    readonly getControls: {
      readonly name: "GetControls",
      readonly I: typeof GetControlsRequest,
      readonly O: typeof GetControlsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEvents returns a list of events representing the last event on each control of a give Input Controller
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetEvents
     */
    readonly getEvents: {
      readonly name: "GetEvents",
      readonly I: typeof GetEventsRequest,
      readonly O: typeof GetEventsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * StreamEvents starts a stream of InputControllerEvents for the given controls (buttons/axes) on a robot's input controller
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.StreamEvents
     */
    readonly streamEvents: {
      readonly name: "StreamEvents",
      readonly I: typeof StreamEventsRequest,
      readonly O: typeof StreamEventsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * TriggerEvent, where supported, injects an InputControllerEvent into an input controller to (virtually) generate events
     * like button presses or axis movements
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.TriggerEvent
     */
    readonly triggerEvent: {
      readonly name: "TriggerEvent",
      readonly I: typeof TriggerEventRequest,
      readonly O: typeof TriggerEventResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetGeometries returns the geometries of the component in their current configuration
     *
     * @generated from rpc viam.component.inputcontroller.v1.InputControllerService.GetGeometries
     */
    readonly getGeometries: {
      readonly name: "GetGeometries",
      readonly I: typeof GetGeometriesRequest,
      readonly O: typeof GetGeometriesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

