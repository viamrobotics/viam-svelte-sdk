// @generated by protoc-gen-es v1.10.0
// @generated from file app/agent/v1/agent.proto (package viam.app.agent.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum viam.app.agent.v1.PackageFormat
 */
export declare enum PackageFormat {
  /**
   * unknown/unset (autodetection may be attempted)
   *
   * @generated from enum value: PACKAGE_FORMAT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * do nothing
   *
   * @generated from enum value: PACKAGE_FORMAT_RAW = 1;
   */
  RAW = 1,

  /**
   * decompress .xz file
   *
   * @generated from enum value: PACKAGE_FORMAT_XZ = 2;
   */
  XZ = 2,

  /**
   * set executable permissions
   *
   * @generated from enum value: PACKAGE_FORMAT_EXECUTABLE = 3;
   */
  EXECUTABLE = 3,

  /**
   * decompress and set executable
   *
   * @generated from enum value: PACKAGE_FORMAT_XZ_EXECUTABLE = 4;
   */
  XZ_EXECUTABLE = 4,
}

/**
 * Device side
 *
 * @generated from message viam.app.agent.v1.DeviceAgentConfigRequest
 */
export declare class DeviceAgentConfigRequest extends Message<DeviceAgentConfigRequest> {
  /**
   * robot partID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * info about the host system
   *
   * @generated from field: viam.app.agent.v1.HostInfo host_info = 2;
   */
  hostInfo?: HostInfo;

  /**
   * current subsystems and versions
   * DEPRECATED in favor of version_info
   *
   * @generated from field: map<string, string> subsystem_versions = 3 [deprecated = true];
   * @deprecated
   */
  subsystemVersions: { [key: string]: string };

  /**
   * Currently installed versions for agent and viam-server
   *
   * @generated from field: viam.app.agent.v1.VersionInfo version_info = 4;
   */
  versionInfo?: VersionInfo;

  constructor(data?: PartialMessage<DeviceAgentConfigRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.DeviceAgentConfigRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceAgentConfigRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceAgentConfigRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceAgentConfigRequest;

  static equals(a: DeviceAgentConfigRequest | PlainMessage<DeviceAgentConfigRequest> | undefined, b: DeviceAgentConfigRequest | PlainMessage<DeviceAgentConfigRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.agent.v1.DeviceAgentConfigResponse
 */
export declare class DeviceAgentConfigResponse extends Message<DeviceAgentConfigResponse> {
  /**
   * subsystems to be installed/configured/updated
   * note: previously installed subsystems will be removed from the system if removed from this list
   * DEPRECATED in favor of indidivual update_info and settings fields
   *
   * @generated from field: map<string, viam.app.agent.v1.DeviceSubsystemConfig> subsystem_configs = 1 [deprecated = true];
   * @deprecated
   */
  subsystemConfigs: { [key: string]: DeviceSubsystemConfig };

  /**
   * how often this request should be repeated
   *
   * @generated from field: google.protobuf.Duration check_interval = 2;
   */
  checkInterval?: Duration;

  /**
   * update info for agent and viam-server, parsed/processed in App
   *
   * @generated from field: viam.app.agent.v1.UpdateInfo agent_update_info = 3;
   */
  agentUpdateInfo?: UpdateInfo;

  /**
   * @generated from field: viam.app.agent.v1.UpdateInfo viam_server_update_info = 4;
   */
  viamServerUpdateInfo?: UpdateInfo;

  /**
   * various settings that are passed directly to device Agent
   *
   * @generated from field: google.protobuf.Struct advanced_settings = 5;
   */
  advancedSettings?: Struct;

  /**
   * @generated from field: google.protobuf.Struct network_configuration = 6;
   */
  networkConfiguration?: Struct;

  /**
   * @generated from field: google.protobuf.Struct additional_networks = 7;
   */
  additionalNetworks?: Struct;

  /**
   * @generated from field: google.protobuf.Struct system_configuration = 8;
   */
  systemConfiguration?: Struct;

  constructor(data?: PartialMessage<DeviceAgentConfigResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.DeviceAgentConfigResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceAgentConfigResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceAgentConfigResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceAgentConfigResponse;

  static equals(a: DeviceAgentConfigResponse | PlainMessage<DeviceAgentConfigResponse> | undefined, b: DeviceAgentConfigResponse | PlainMessage<DeviceAgentConfigResponse> | undefined): boolean;
}

/**
 * DEPRECATED as of January 2025
 *
 * @generated from message viam.app.agent.v1.DeviceSubsystemConfig
 * @deprecated
 */
export declare class DeviceSubsystemConfig extends Message<DeviceSubsystemConfig> {
  /**
   * data needed to download/validate the subsystem
   *
   * @generated from field: viam.app.agent.v1.UpdateInfo update_info = 1;
   */
  updateInfo?: UpdateInfo;

  /**
   * if this subsystem is disabled and should not be started by the agent
   *
   * @generated from field: bool disable = 2;
   */
  disable: boolean;

  /**
   * force_restart will restart the subsystem, even if no updates are available
   *
   * @generated from field: bool force_restart = 3;
   */
  forceRestart: boolean;

  /**
   * arbitrary config sections
   *
   * @generated from field: google.protobuf.Struct attributes = 4;
   */
  attributes?: Struct;

  constructor(data?: PartialMessage<DeviceSubsystemConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.DeviceSubsystemConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceSubsystemConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceSubsystemConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceSubsystemConfig;

  static equals(a: DeviceSubsystemConfig | PlainMessage<DeviceSubsystemConfig> | undefined, b: DeviceSubsystemConfig | PlainMessage<DeviceSubsystemConfig> | undefined): boolean;
}

/**
 * @generated from message viam.app.agent.v1.VersionInfo
 */
export declare class VersionInfo extends Message<VersionInfo> {
  /**
   * the version of agent currently running and making the request
   *
   * @generated from field: string agent_running = 1;
   */
  agentRunning: string;

  /**
   * the version of agent installed (will run after restart if different)
   *
   * @generated from field: string agent_installed = 2;
   */
  agentInstalled: string;

  /**
   * the version of viam-server currently running
   *
   * @generated from field: string viam_server_running = 3;
   */
  viamServerRunning: string;

  /**
   * the version of viam-server installed (will run after restart if different)
   *
   * @generated from field: string viam_server_installed = 4;
   */
  viamServerInstalled: string;

  constructor(data?: PartialMessage<VersionInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.VersionInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VersionInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VersionInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VersionInfo;

  static equals(a: VersionInfo | PlainMessage<VersionInfo> | undefined, b: VersionInfo | PlainMessage<VersionInfo> | undefined): boolean;
}

/**
 * @generated from message viam.app.agent.v1.HostInfo
 */
export declare class HostInfo extends Message<HostInfo> {
  /**
   * platform is the docker styled combination of kernel and architecture. Ex: linux/amd64, darwin/arm64
   *
   * @generated from field: string platform = 1;
   */
  platform: string;

  /**
   * ID and VERSION_ID fields from /etc/os-release, colon seperated. Ex: ubuntu:22.04, debian:11
   *
   * @generated from field: string distro = 2;
   */
  distro: string;

  /**
   * additional tags for specific hardware or software that's present and may affect software selection
   * ex: "jetson", "rpi4", "systemd", etc.
   *
   * @generated from field: repeated string tags = 3;
   */
  tags: string[];

  constructor(data?: PartialMessage<HostInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.HostInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HostInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HostInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HostInfo;

  static equals(a: HostInfo | PlainMessage<HostInfo> | undefined, b: HostInfo | PlainMessage<HostInfo> | undefined): boolean;
}

/**
 * @generated from message viam.app.agent.v1.UpdateInfo
 */
export declare class UpdateInfo extends Message<UpdateInfo> {
  /**
   * unpacked filename as it is expected on disk (regardless of url)
   *
   * @generated from field: string filename = 1;
   */
  filename: string;

  /**
   * url to download from
   *
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * version expected at the url
   *
   * @generated from field: string version = 3;
   */
  version: string;

  /**
   * sha256 sum of file as downloaded
   *
   * @generated from field: bytes sha256 = 4;
   */
  sha256: Uint8Array;

  /**
   * determines if decompression or executable permissions are needed
   *
   * @generated from field: viam.app.agent.v1.PackageFormat format = 5;
   */
  format: PackageFormat;

  constructor(data?: PartialMessage<UpdateInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.agent.v1.UpdateInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateInfo;

  static equals(a: UpdateInfo | PlainMessage<UpdateInfo> | undefined, b: UpdateInfo | PlainMessage<UpdateInfo> | undefined): boolean;
}

