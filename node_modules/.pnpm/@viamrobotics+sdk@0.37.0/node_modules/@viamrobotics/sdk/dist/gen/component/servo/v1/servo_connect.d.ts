// @generated by protoc-gen-connect-es v1.5.0
// @generated from file component/servo/v1/servo.proto (package viam.component.servo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetPositionRequest, GetPositionResponse, IsMovingRequest, IsMovingResponse, MoveRequest, MoveResponse, StopRequest, StopResponse } from "./servo_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse, GetGeometriesRequest, GetGeometriesResponse } from "../../../common/v1/common_pb.js";

/**
 * A ServoService maintains all servos associated with a robot
 *
 * @generated from service viam.component.servo.v1.ServoService
 */
export declare const ServoService: {
  readonly typeName: "viam.component.servo.v1.ServoService",
  readonly methods: {
    /**
     * Move requests the servo of the underlying robot to move.
     * This will block until done or a new operation cancels this one
     *
     * @generated from rpc viam.component.servo.v1.ServoService.Move
     */
    readonly move: {
      readonly name: "Move",
      readonly I: typeof MoveRequest,
      readonly O: typeof MoveResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPosition returns the current set angle (degrees) of the servo of the underlying robot.
     *
     * @generated from rpc viam.component.servo.v1.ServoService.GetPosition
     */
    readonly getPosition: {
      readonly name: "GetPosition",
      readonly I: typeof GetPositionRequest,
      readonly O: typeof GetPositionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stop stops a robot's servo
     *
     * @generated from rpc viam.component.servo.v1.ServoService.Stop
     */
    readonly stop: {
      readonly name: "Stop",
      readonly I: typeof StopRequest,
      readonly O: typeof StopResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * IsMoving reports if a component is in motion
     *
     * @generated from rpc viam.component.servo.v1.ServoService.IsMoving
     */
    readonly isMoving: {
      readonly name: "IsMoving",
      readonly I: typeof IsMovingRequest,
      readonly O: typeof IsMovingResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands
     *
     * @generated from rpc viam.component.servo.v1.ServoService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetGeometries returns the geometries of the component in their current configuration
     *
     * @generated from rpc viam.component.servo.v1.ServoService.GetGeometries
     */
    readonly getGeometries: {
      readonly name: "GetGeometries",
      readonly I: typeof GetGeometriesRequest,
      readonly O: typeof GetGeometriesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

