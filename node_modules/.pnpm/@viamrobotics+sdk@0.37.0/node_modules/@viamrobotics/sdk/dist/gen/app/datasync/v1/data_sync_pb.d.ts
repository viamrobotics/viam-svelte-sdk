// @generated by protoc-gen-es v1.10.0
// @generated from file app/datasync/v1/data_sync.proto (package viam.app.datasync.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Annotations } from "../../data/v1/data_pb.js";

/**
 * @generated from enum viam.app.datasync.v1.MimeType
 */
export declare enum MimeType {
  /**
   * @generated from enum value: MIME_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MIME_TYPE_IMAGE_JPEG = 1;
   */
  IMAGE_JPEG = 1,

  /**
   * @generated from enum value: MIME_TYPE_IMAGE_PNG = 2;
   */
  IMAGE_PNG = 2,

  /**
   * @generated from enum value: MIME_TYPE_APPLICATION_PCD = 3;
   */
  APPLICATION_PCD = 3,
}

/**
 * DataType specifies the type of data uploaded.
 *
 * @generated from enum viam.app.datasync.v1.DataType
 */
export declare enum DataType {
  /**
   * @generated from enum value: DATA_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DATA_TYPE_BINARY_SENSOR = 1;
   */
  BINARY_SENSOR = 1,

  /**
   * @generated from enum value: DATA_TYPE_TABULAR_SENSOR = 2;
   */
  TABULAR_SENSOR = 2,

  /**
   * @generated from enum value: DATA_TYPE_FILE = 3;
   */
  FILE = 3,
}

/**
 * DataCaptureUploadRequest requests to upload the contents and metadata for tabular data.
 *
 * @generated from message viam.app.datasync.v1.DataCaptureUploadRequest
 */
export declare class DataCaptureUploadRequest extends Message<DataCaptureUploadRequest> {
  /**
   * @generated from field: viam.app.datasync.v1.UploadMetadata metadata = 1;
   */
  metadata?: UploadMetadata;

  /**
   * @generated from field: repeated viam.app.datasync.v1.SensorData sensor_contents = 2;
   */
  sensorContents: SensorData[];

  constructor(data?: PartialMessage<DataCaptureUploadRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.DataCaptureUploadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataCaptureUploadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataCaptureUploadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataCaptureUploadRequest;

  static equals(a: DataCaptureUploadRequest | PlainMessage<DataCaptureUploadRequest> | undefined, b: DataCaptureUploadRequest | PlainMessage<DataCaptureUploadRequest> | undefined): boolean;
}

/**
 * DataCaptureUploadResponse returns the file id of the uploaded contents and metadata for tabular data.
 *
 * @generated from message viam.app.datasync.v1.DataCaptureUploadResponse
 */
export declare class DataCaptureUploadResponse extends Message<DataCaptureUploadResponse> {
  /**
   * @generated from field: string file_id = 1;
   */
  fileId: string;

  constructor(data?: PartialMessage<DataCaptureUploadResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.DataCaptureUploadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataCaptureUploadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataCaptureUploadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataCaptureUploadResponse;

  static equals(a: DataCaptureUploadResponse | PlainMessage<DataCaptureUploadResponse> | undefined, b: DataCaptureUploadResponse | PlainMessage<DataCaptureUploadResponse> | undefined): boolean;
}

/**
 * FileUploadRequest requests to upload the contents and metadata for binary (image + file) data.
 * The first packet must be the UploadMetadata associated with the binary data.
 *
 * @generated from message viam.app.datasync.v1.FileUploadRequest
 */
export declare class FileUploadRequest extends Message<FileUploadRequest> {
  /**
   * @generated from oneof viam.app.datasync.v1.FileUploadRequest.upload_packet
   */
  uploadPacket: {
    /**
     * @generated from field: viam.app.datasync.v1.UploadMetadata metadata = 1;
     */
    value: UploadMetadata;
    case: "metadata";
  } | {
    /**
     * @generated from field: viam.app.datasync.v1.FileData file_contents = 2;
     */
    value: FileData;
    case: "fileContents";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<FileUploadRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.FileUploadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileUploadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileUploadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileUploadRequest;

  static equals(a: FileUploadRequest | PlainMessage<FileUploadRequest> | undefined, b: FileUploadRequest | PlainMessage<FileUploadRequest> | undefined): boolean;
}

/**
 * FileUploadResponse returns the file id of the uploaded contents and metadata for binary (image + file) data.
 *
 * @generated from message viam.app.datasync.v1.FileUploadResponse
 */
export declare class FileUploadResponse extends Message<FileUploadResponse> {
  /**
   * @generated from field: string file_id = 1;
   */
  fileId: string;

  constructor(data?: PartialMessage<FileUploadResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.FileUploadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileUploadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileUploadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileUploadResponse;

  static equals(a: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined, b: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined): boolean;
}

/**
 * StreamingDataCaptureUploadRequest requests to upload the contents and metadata for streaming binary (image + file) data.
 * The first packet must be the DataCaptureUploadMetadata associated with the data.
 *
 * @generated from message viam.app.datasync.v1.StreamingDataCaptureUploadRequest
 */
export declare class StreamingDataCaptureUploadRequest extends Message<StreamingDataCaptureUploadRequest> {
  /**
   * @generated from oneof viam.app.datasync.v1.StreamingDataCaptureUploadRequest.upload_packet
   */
  uploadPacket: {
    /**
     * @generated from field: viam.app.datasync.v1.DataCaptureUploadMetadata metadata = 1;
     */
    value: DataCaptureUploadMetadata;
    case: "metadata";
  } | {
    /**
     * @generated from field: bytes data = 2;
     */
    value: Uint8Array;
    case: "data";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<StreamingDataCaptureUploadRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.StreamingDataCaptureUploadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamingDataCaptureUploadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamingDataCaptureUploadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamingDataCaptureUploadRequest;

  static equals(a: StreamingDataCaptureUploadRequest | PlainMessage<StreamingDataCaptureUploadRequest> | undefined, b: StreamingDataCaptureUploadRequest | PlainMessage<StreamingDataCaptureUploadRequest> | undefined): boolean;
}

/**
 * StreamingDataCaptureUploadResponse returns the file id of the uploaded contents and metadata for streaming binary (image + file) data.
 *
 * @generated from message viam.app.datasync.v1.StreamingDataCaptureUploadResponse
 */
export declare class StreamingDataCaptureUploadResponse extends Message<StreamingDataCaptureUploadResponse> {
  /**
   * @generated from field: string file_id = 1;
   */
  fileId: string;

  constructor(data?: PartialMessage<StreamingDataCaptureUploadResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.StreamingDataCaptureUploadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamingDataCaptureUploadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamingDataCaptureUploadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamingDataCaptureUploadResponse;

  static equals(a: StreamingDataCaptureUploadResponse | PlainMessage<StreamingDataCaptureUploadResponse> | undefined, b: StreamingDataCaptureUploadResponse | PlainMessage<StreamingDataCaptureUploadResponse> | undefined): boolean;
}

/**
 * SensorMetadata contains the time the sensor data was requested and was
 * received.
 *
 * @generated from message viam.app.datasync.v1.SensorMetadata
 */
export declare class SensorMetadata extends Message<SensorMetadata> {
  /**
   * @generated from field: google.protobuf.Timestamp time_requested = 1;
   */
  timeRequested?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp time_received = 2;
   */
  timeReceived?: Timestamp;

  /**
   * @generated from field: viam.app.datasync.v1.MimeType mime_type = 3;
   */
  mimeType: MimeType;

  /**
   * @generated from field: viam.app.data.v1.Annotations annotations = 4;
   */
  annotations?: Annotations;

  constructor(data?: PartialMessage<SensorMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.SensorMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SensorMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SensorMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SensorMetadata;

  static equals(a: SensorMetadata | PlainMessage<SensorMetadata> | undefined, b: SensorMetadata | PlainMessage<SensorMetadata> | undefined): boolean;
}

/**
 * SensorData contains the contents and metadata for tabular data.
 *
 * @generated from message viam.app.datasync.v1.SensorData
 */
export declare class SensorData extends Message<SensorData> {
  /**
   * @generated from field: viam.app.datasync.v1.SensorMetadata metadata = 1;
   */
  metadata?: SensorMetadata;

  /**
   * @generated from oneof viam.app.datasync.v1.SensorData.data
   */
  data: {
    /**
     * @generated from field: google.protobuf.Struct struct = 2;
     */
    value: Struct;
    case: "struct";
  } | {
    /**
     * @generated from field: bytes binary = 3;
     */
    value: Uint8Array;
    case: "binary";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<SensorData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.SensorData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SensorData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SensorData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SensorData;

  static equals(a: SensorData | PlainMessage<SensorData> | undefined, b: SensorData | PlainMessage<SensorData> | undefined): boolean;
}

/**
 * FileData contains the contents of binary (image + file) data.
 *
 * @generated from message viam.app.datasync.v1.FileData
 */
export declare class FileData extends Message<FileData> {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  constructor(data?: PartialMessage<FileData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.FileData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileData;

  static equals(a: FileData | PlainMessage<FileData> | undefined, b: FileData | PlainMessage<FileData> | undefined): boolean;
}

/**
 * UploadMetadata contains the metadata for binary (image + file) data.
 *
 * @generated from message viam.app.datasync.v1.UploadMetadata
 */
export declare class UploadMetadata extends Message<UploadMetadata> {
  /**
   * @generated from field: string part_id = 1;
   */
  partId: string;

  /**
   * @generated from field: string component_type = 2;
   */
  componentType: string;

  /**
   * @generated from field: string component_name = 3;
   */
  componentName: string;

  /**
   * @generated from field: string method_name = 5;
   */
  methodName: string;

  /**
   * @generated from field: viam.app.datasync.v1.DataType type = 6;
   */
  type: DataType;

  /**
   * @generated from field: string file_name = 7;
   */
  fileName: string;

  /**
   * @generated from field: map<string, google.protobuf.Any> method_parameters = 8;
   */
  methodParameters: { [key: string]: Any };

  /**
   * @generated from field: string file_extension = 9;
   */
  fileExtension: string;

  /**
   * @generated from field: repeated string tags = 10;
   */
  tags: string[];

  constructor(data?: PartialMessage<UploadMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.UploadMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UploadMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UploadMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UploadMetadata;

  static equals(a: UploadMetadata | PlainMessage<UploadMetadata> | undefined, b: UploadMetadata | PlainMessage<UploadMetadata> | undefined): boolean;
}

/**
 * CaptureInterval specifies the start and end times of the data capture.
 *
 * @generated from message viam.app.datasync.v1.CaptureInterval
 */
export declare class CaptureInterval extends Message<CaptureInterval> {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  constructor(data?: PartialMessage<CaptureInterval>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.CaptureInterval";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureInterval;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureInterval;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureInterval;

  static equals(a: CaptureInterval | PlainMessage<CaptureInterval> | undefined, b: CaptureInterval | PlainMessage<CaptureInterval> | undefined): boolean;
}

/**
 * DataCaptureMetadata contains the metadata for data captured by collectors.
 *
 * @generated from message viam.app.datasync.v1.DataCaptureMetadata
 */
export declare class DataCaptureMetadata extends Message<DataCaptureMetadata> {
  /**
   * @generated from field: string component_type = 1;
   */
  componentType: string;

  /**
   * @generated from field: string component_name = 2;
   */
  componentName: string;

  /**
   * @generated from field: string method_name = 4;
   */
  methodName: string;

  /**
   * @generated from field: viam.app.datasync.v1.DataType type = 5;
   */
  type: DataType;

  /**
   * @generated from field: map<string, google.protobuf.Any> method_parameters = 6;
   */
  methodParameters: { [key: string]: Any };

  /**
   * @generated from field: string file_extension = 7;
   */
  fileExtension: string;

  /**
   * @generated from field: repeated string tags = 8;
   */
  tags: string[];

  constructor(data?: PartialMessage<DataCaptureMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.DataCaptureMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataCaptureMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataCaptureMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataCaptureMetadata;

  static equals(a: DataCaptureMetadata | PlainMessage<DataCaptureMetadata> | undefined, b: DataCaptureMetadata | PlainMessage<DataCaptureMetadata> | undefined): boolean;
}

/**
 * DataCaptureUploadMetadata contains the metadata for streaming binary (image + file) data.
 *
 * @generated from message viam.app.datasync.v1.DataCaptureUploadMetadata
 */
export declare class DataCaptureUploadMetadata extends Message<DataCaptureUploadMetadata> {
  /**
   * @generated from field: viam.app.datasync.v1.UploadMetadata upload_metadata = 1;
   */
  uploadMetadata?: UploadMetadata;

  /**
   * @generated from field: viam.app.datasync.v1.SensorMetadata sensor_metadata = 2;
   */
  sensorMetadata?: SensorMetadata;

  constructor(data?: PartialMessage<DataCaptureUploadMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.datasync.v1.DataCaptureUploadMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataCaptureUploadMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataCaptureUploadMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataCaptureUploadMetadata;

  static equals(a: DataCaptureUploadMetadata | PlainMessage<DataCaptureUploadMetadata> | undefined, b: DataCaptureUploadMetadata | PlainMessage<DataCaptureUploadMetadata> | undefined): boolean;
}

