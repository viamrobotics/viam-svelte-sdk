// @generated by protoc-gen-es v1.10.0
// @generated from file component/base/v1/base.proto (package viam.component.base.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Vector3 } from "../../../common/v1/common_pb.js";

/**
 * @generated from message viam.component.base.v1.MoveStraightRequest
 */
export declare class MoveStraightRequest extends Message<MoveStraightRequest> {
  /**
   * Name of a base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Desired travel distance in millimeters
   *
   * @generated from field: int64 distance_mm = 2;
   */
  distanceMm: bigint;

  /**
   * Desired travel velocity in millimeters/second
   *
   * @generated from field: double mm_per_sec = 3;
   */
  mmPerSec: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<MoveStraightRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.MoveStraightRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveStraightRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveStraightRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveStraightRequest;

  static equals(a: MoveStraightRequest | PlainMessage<MoveStraightRequest> | undefined, b: MoveStraightRequest | PlainMessage<MoveStraightRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.MoveStraightResponse
 */
export declare class MoveStraightResponse extends Message<MoveStraightResponse> {
  constructor(data?: PartialMessage<MoveStraightResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.MoveStraightResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveStraightResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveStraightResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveStraightResponse;

  static equals(a: MoveStraightResponse | PlainMessage<MoveStraightResponse> | undefined, b: MoveStraightResponse | PlainMessage<MoveStraightResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SpinRequest
 */
export declare class SpinRequest extends Message<SpinRequest> {
  /**
   * Name of a base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Desired angle
   *
   * @generated from field: double angle_deg = 2;
   */
  angleDeg: number;

  /**
   * Desired angular velocity
   *
   * @generated from field: double degs_per_sec = 3;
   */
  degsPerSec: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SpinRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SpinRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpinRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpinRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpinRequest;

  static equals(a: SpinRequest | PlainMessage<SpinRequest> | undefined, b: SpinRequest | PlainMessage<SpinRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SpinResponse
 */
export declare class SpinResponse extends Message<SpinResponse> {
  constructor(data?: PartialMessage<SpinResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SpinResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpinResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpinResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpinResponse;

  static equals(a: SpinResponse | PlainMessage<SpinResponse> | undefined, b: SpinResponse | PlainMessage<SpinResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.StopRequest
 */
export declare class StopRequest extends Message<StopRequest> {
  /**
   * Name of a base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<StopRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.StopRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopRequest;

  static equals(a: StopRequest | PlainMessage<StopRequest> | undefined, b: StopRequest | PlainMessage<StopRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.StopResponse
 */
export declare class StopResponse extends Message<StopResponse> {
  constructor(data?: PartialMessage<StopResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.StopResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopResponse;

  static equals(a: StopResponse | PlainMessage<StopResponse> | undefined, b: StopResponse | PlainMessage<StopResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SetPowerRequest
 */
export declare class SetPowerRequest extends Message<SetPowerRequest> {
  /**
   * Name of a base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Desired linear power percentage as -1 -> 1
   *
   * @generated from field: viam.common.v1.Vector3 linear = 2;
   */
  linear?: Vector3;

  /**
   * Desired angular power percentage % as -1 -> 1
   *
   * @generated from field: viam.common.v1.Vector3 angular = 3;
   */
  angular?: Vector3;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetPowerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SetPowerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPowerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPowerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPowerRequest;

  static equals(a: SetPowerRequest | PlainMessage<SetPowerRequest> | undefined, b: SetPowerRequest | PlainMessage<SetPowerRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SetPowerResponse
 */
export declare class SetPowerResponse extends Message<SetPowerResponse> {
  constructor(data?: PartialMessage<SetPowerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SetPowerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPowerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPowerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPowerResponse;

  static equals(a: SetPowerResponse | PlainMessage<SetPowerResponse> | undefined, b: SetPowerResponse | PlainMessage<SetPowerResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SetVelocityRequest
 */
export declare class SetVelocityRequest extends Message<SetVelocityRequest> {
  /**
   * Name of a base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Desired linear velocity in mm per second
   *
   * @generated from field: viam.common.v1.Vector3 linear = 2;
   */
  linear?: Vector3;

  /**
   * Desired angular velocity in degrees per second
   *
   * @generated from field: viam.common.v1.Vector3 angular = 3;
   */
  angular?: Vector3;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetVelocityRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SetVelocityRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetVelocityRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetVelocityRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetVelocityRequest;

  static equals(a: SetVelocityRequest | PlainMessage<SetVelocityRequest> | undefined, b: SetVelocityRequest | PlainMessage<SetVelocityRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.SetVelocityResponse
 */
export declare class SetVelocityResponse extends Message<SetVelocityResponse> {
  constructor(data?: PartialMessage<SetVelocityResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.SetVelocityResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetVelocityResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetVelocityResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetVelocityResponse;

  static equals(a: SetVelocityResponse | PlainMessage<SetVelocityResponse> | undefined, b: SetVelocityResponse | PlainMessage<SetVelocityResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.IsMovingRequest
 */
export declare class IsMovingRequest extends Message<IsMovingRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<IsMovingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.IsMovingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsMovingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsMovingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsMovingRequest;

  static equals(a: IsMovingRequest | PlainMessage<IsMovingRequest> | undefined, b: IsMovingRequest | PlainMessage<IsMovingRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.IsMovingResponse
 */
export declare class IsMovingResponse extends Message<IsMovingResponse> {
  /**
   * @generated from field: bool is_moving = 1;
   */
  isMoving: boolean;

  constructor(data?: PartialMessage<IsMovingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.IsMovingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsMovingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsMovingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsMovingResponse;

  static equals(a: IsMovingResponse | PlainMessage<IsMovingResponse> | undefined, b: IsMovingResponse | PlainMessage<IsMovingResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.GetPropertiesRequest
 */
export declare class GetPropertiesRequest extends Message<GetPropertiesRequest> {
  /**
   * Name of the base
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetPropertiesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.GetPropertiesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPropertiesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPropertiesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPropertiesRequest;

  static equals(a: GetPropertiesRequest | PlainMessage<GetPropertiesRequest> | undefined, b: GetPropertiesRequest | PlainMessage<GetPropertiesRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.base.v1.GetPropertiesResponse
 */
export declare class GetPropertiesResponse extends Message<GetPropertiesResponse> {
  /**
   * @generated from field: double width_meters = 1;
   */
  widthMeters: number;

  /**
   * @generated from field: double turning_radius_meters = 2;
   */
  turningRadiusMeters: number;

  /**
   * @generated from field: double wheel_circumference_meters = 3;
   */
  wheelCircumferenceMeters: number;

  constructor(data?: PartialMessage<GetPropertiesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.base.v1.GetPropertiesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPropertiesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPropertiesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPropertiesResponse;

  static equals(a: GetPropertiesResponse | PlainMessage<GetPropertiesResponse> | undefined, b: GetPropertiesResponse | PlainMessage<GetPropertiesResponse> | undefined): boolean;
}

