// @generated by protoc-gen-connect-es v1.5.0
// @generated from file app/v1/robot.proto (package viam.app.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CertificateRequest, CertificateResponse, ConfigRequest, ConfigResponse, LogRequest, LogResponse, NeedsRestartRequest, NeedsRestartResponse } from "./robot_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * RobotService is used by robots to retrieve configs, report logs, etc...
 *
 * @generated from service viam.app.v1.RobotService
 */
export declare const RobotService: {
  readonly typeName: "viam.app.v1.RobotService",
  readonly methods: {
    /**
     * Config requests the current robot config
     *
     * @generated from rpc viam.app.v1.RobotService.Config
     */
    readonly config: {
      readonly name: "Config",
      readonly I: typeof ConfigRequest,
      readonly O: typeof ConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Certificate requests the current robot certificate
     *
     * @generated from rpc viam.app.v1.RobotService.Certificate
     */
    readonly certificate: {
      readonly name: "Certificate",
      readonly I: typeof CertificateRequest,
      readonly O: typeof CertificateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Log insert log entries associated with the robot. Allows up to 1000 entries to be added in one request.
     *
     * @generated from rpc viam.app.v1.RobotService.Log
     */
    readonly log: {
      readonly name: "Log",
      readonly I: typeof LogRequest,
      readonly O: typeof LogResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * NeedsRestart returns if the robot should restart and the interval it should check to restart.
     *
     * @generated from rpc viam.app.v1.RobotService.NeedsRestart
     */
    readonly needsRestart: {
      readonly name: "NeedsRestart",
      readonly I: typeof NeedsRestartRequest,
      readonly O: typeof NeedsRestartResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

