// @generated by protoc-gen-connect-es v1.5.0
// @generated from file robot/v1/robot.proto (package viam.robot.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BlockForOperationRequest, BlockForOperationResponse, CancelOperationRequest, CancelOperationResponse, DiscoverComponentsRequest, DiscoverComponentsResponse, FrameSystemConfigRequest, FrameSystemConfigResponse, GetCloudMetadataRequest, GetCloudMetadataResponse, GetMachineStatusRequest, GetMachineStatusResponse, GetModelsFromModulesRequest, GetModelsFromModulesResponse, GetOperationsRequest, GetOperationsResponse, GetSessionsRequest, GetSessionsResponse, GetStatusRequest, GetStatusResponse, GetVersionRequest, GetVersionResponse, LogRequest, LogResponse, ResourceNamesRequest, ResourceNamesResponse, ResourceRPCSubtypesRequest, ResourceRPCSubtypesResponse, RestartModuleRequest, RestartModuleResponse, SendSessionHeartbeatRequest, SendSessionHeartbeatResponse, ShutdownRequest, ShutdownResponse, StartSessionRequest, StartSessionResponse, StopAllRequest, StopAllResponse, StreamStatusRequest, StreamStatusResponse, TransformPCDRequest, TransformPCDResponse, TransformPoseRequest, TransformPoseResponse, TunnelRequest, TunnelResponse } from "./robot_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * A RobotService encompasses all functionality of some robot comprised of parts, local and remote.
 *
 * @generated from service viam.robot.v1.RobotService
 */
export declare const RobotService: {
  readonly typeName: "viam.robot.v1.RobotService",
  readonly methods: {
    /**
     * @generated from rpc viam.robot.v1.RobotService.GetOperations
     */
    readonly getOperations: {
      readonly name: "GetOperations",
      readonly I: typeof GetOperationsRequest,
      readonly O: typeof GetOperationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.GetSessions
     */
    readonly getSessions: {
      readonly name: "GetSessions",
      readonly I: typeof GetSessionsRequest,
      readonly O: typeof GetSessionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ResourceNames returns the list of all resources.
     *
     * @generated from rpc viam.robot.v1.RobotService.ResourceNames
     */
    readonly resourceNames: {
      readonly name: "ResourceNames",
      readonly I: typeof ResourceNamesRequest,
      readonly O: typeof ResourceNamesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ResourceRPCSubtypes returns the list of all resource types.
     *
     * @generated from rpc viam.robot.v1.RobotService.ResourceRPCSubtypes
     */
    readonly resourceRPCSubtypes: {
      readonly name: "ResourceRPCSubtypes",
      readonly I: typeof ResourceRPCSubtypesRequest,
      readonly O: typeof ResourceRPCSubtypesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.CancelOperation
     */
    readonly cancelOperation: {
      readonly name: "CancelOperation",
      readonly I: typeof CancelOperationRequest,
      readonly O: typeof CancelOperationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.BlockForOperation
     */
    readonly blockForOperation: {
      readonly name: "BlockForOperation",
      readonly I: typeof BlockForOperationRequest,
      readonly O: typeof BlockForOperationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetModelsFromModules returns the list of models supported in modules on the machine.
     *
     * @generated from rpc viam.robot.v1.RobotService.GetModelsFromModules
     */
    readonly getModelsFromModules: {
      readonly name: "GetModelsFromModules",
      readonly I: typeof GetModelsFromModulesRequest,
      readonly O: typeof GetModelsFromModulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DiscoverComponents returns the list of discovered component configurations.
     * This API is deprecated
     *
     * @generated from rpc viam.robot.v1.RobotService.DiscoverComponents
     * @deprecated
     */
    readonly discoverComponents: {
      readonly name: "DiscoverComponents",
      readonly I: typeof DiscoverComponentsRequest,
      readonly O: typeof DiscoverComponentsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.FrameSystemConfig
     */
    readonly frameSystemConfig: {
      readonly name: "FrameSystemConfig",
      readonly I: typeof FrameSystemConfigRequest,
      readonly O: typeof FrameSystemConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.TransformPose
     */
    readonly transformPose: {
      readonly name: "TransformPose",
      readonly I: typeof TransformPoseRequest,
      readonly O: typeof TransformPoseResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.TransformPCD
     */
    readonly transformPCD: {
      readonly name: "TransformPCD",
      readonly I: typeof TransformPCDRequest,
      readonly O: typeof TransformPCDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetStatus returns the list of all statuses requested. An empty request signifies all resources.
     *
     * @generated from rpc viam.robot.v1.RobotService.GetStatus
     * @deprecated
     */
    readonly getStatus: {
      readonly name: "GetStatus",
      readonly I: typeof GetStatusRequest,
      readonly O: typeof GetStatusResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * StreamStatus periodically sends the status of all statuses requested. An empty request signifies all resources.
     *
     * @generated from rpc viam.robot.v1.RobotService.StreamStatus
     * @deprecated
     */
    readonly streamStatus: {
      readonly name: "StreamStatus",
      readonly I: typeof StreamStatusRequest,
      readonly O: typeof StreamStatusResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * StopAll will stop all current and outstanding operations for the robot and stops all actuators and movement
     *
     * @generated from rpc viam.robot.v1.RobotService.StopAll
     */
    readonly stopAll: {
      readonly name: "StopAll",
      readonly I: typeof StopAllRequest,
      readonly O: typeof StopAllResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * StartSession creates a new session that expects at least one heartbeat within the returned window.
     * If the window lapses, any resources that have safety heart monitored methods, where this session was
     * the last caller on the resource, will be stopped.
     *
     * @generated from rpc viam.robot.v1.RobotService.StartSession
     */
    readonly startSession: {
      readonly name: "StartSession",
      readonly I: typeof StartSessionRequest,
      readonly O: typeof StartSessionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * SendSessionHeartbeat sends a heartbeat to the given session. If the session has expired, a
     * SESSION_EXPIRED error will be returned.
     *
     * @generated from rpc viam.robot.v1.RobotService.SendSessionHeartbeat
     */
    readonly sendSessionHeartbeat: {
      readonly name: "SendSessionHeartbeat",
      readonly I: typeof SendSessionHeartbeatRequest,
      readonly O: typeof SendSessionHeartbeatResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Log sends logs to be logged by this robot. Currently used for module logging.
     *
     * @generated from rpc viam.robot.v1.RobotService.Log
     */
    readonly log: {
      readonly name: "Log",
      readonly I: typeof LogRequest,
      readonly O: typeof LogResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetCloudMetadata returns app-related information about the robot.
     *
     * @generated from rpc viam.robot.v1.RobotService.GetCloudMetadata
     */
    readonly getCloudMetadata: {
      readonly name: "GetCloudMetadata",
      readonly I: typeof GetCloudMetadataRequest,
      readonly O: typeof GetCloudMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.robot.v1.RobotService.RestartModule
     */
    readonly restartModule: {
      readonly name: "RestartModule",
      readonly I: typeof RestartModuleRequest,
      readonly O: typeof RestartModuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Shutdown shuts down the robot.
     *
     * @generated from rpc viam.robot.v1.RobotService.Shutdown
     */
    readonly shutdown: {
      readonly name: "Shutdown",
      readonly I: typeof ShutdownRequest,
      readonly O: typeof ShutdownResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetMachineStatus returns the current status of the robot.
     *
     * @generated from rpc viam.robot.v1.RobotService.GetMachineStatus
     */
    readonly getMachineStatus: {
      readonly name: "GetMachineStatus",
      readonly I: typeof GetMachineStatusRequest,
      readonly O: typeof GetMachineStatusResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetVersion returns version information about the robot.
     *
     * @generated from rpc viam.robot.v1.RobotService.GetVersion
     */
    readonly getVersion: {
      readonly name: "GetVersion",
      readonly I: typeof GetVersionRequest,
      readonly O: typeof GetVersionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Tunnel tunnels traffic to the destination port of the robot server.
     *
     * @generated from rpc viam.robot.v1.RobotService.Tunnel
     */
    readonly tunnel: {
      readonly name: "Tunnel",
      readonly I: typeof TunnelRequest,
      readonly O: typeof TunnelResponse,
      readonly kind: MethodKind.BiDiStreaming,
    },
  }
};

