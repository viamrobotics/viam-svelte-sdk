// @generated by protoc-gen-connect-es v1.5.0
// @generated from file service/slam/v1/slam.proto (package viam.service.slam.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetInternalStateRequest, GetInternalStateResponse, GetPointCloudMapRequest, GetPointCloudMapResponse, GetPositionRequest, GetPositionResponse, GetPropertiesRequest, GetPropertiesResponse } from "./slam_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse } from "../../../common/v1/common_pb.js";

/**
 * A SlamService declares the gRPC contract for a slam service
 *
 * @generated from service viam.service.slam.v1.SLAMService
 */
export declare const SLAMService: {
  readonly typeName: "viam.service.slam.v1.SLAMService",
  readonly methods: {
    /**
     * GetPosition returns the current estimated position of the robot with
     * respect to a returned component reference.
     *
     * @generated from rpc viam.service.slam.v1.SLAMService.GetPosition
     */
    readonly getPosition: {
      readonly name: "GetPosition",
      readonly I: typeof GetPositionRequest,
      readonly O: typeof GetPositionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPointCloudMap returns the latest pointcloud map available where XY is the ground
     * plane and positive Z is up, following the Right Hand Rule.
     *
     * @generated from rpc viam.service.slam.v1.SLAMService.GetPointCloudMap
     */
    readonly getPointCloudMap: {
      readonly name: "GetPointCloudMap",
      readonly I: typeof GetPointCloudMapRequest,
      readonly O: typeof GetPointCloudMapResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * GetInternalState returns the internal map as defined by the specified slam
     * algorithm required to continue mapping/localizing.
     * This endpoint is not intended for end users.
     *
     * @generated from rpc viam.service.slam.v1.SLAMService.GetInternalState
     */
    readonly getInternalState: {
      readonly name: "GetInternalState",
      readonly I: typeof GetInternalStateRequest,
      readonly O: typeof GetInternalStateResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * GetProperties returns properties of the current slam service including mapping_mode
     * and cloud_slam, where mapping_mode is the type of mapping/localizing being performed
     * and cloud_slam is a boolean representing if this SLAM service is being run in the cloud.
     *
     * @generated from rpc viam.service.slam.v1.SLAMService.GetProperties
     */
    readonly getProperties: {
      readonly name: "GetProperties",
      readonly I: typeof GetPropertiesRequest,
      readonly O: typeof GetPropertiesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands.
     *
     * @generated from rpc viam.service.slam.v1.SLAMService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

