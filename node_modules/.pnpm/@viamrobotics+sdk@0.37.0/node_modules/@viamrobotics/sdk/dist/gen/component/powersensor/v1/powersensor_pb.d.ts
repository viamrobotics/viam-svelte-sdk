// @generated by protoc-gen-es v1.10.0
// @generated from file component/powersensor/v1/powersensor.proto (package viam.component.powersensor.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message viam.component.powersensor.v1.GetVoltageRequest
 */
export declare class GetVoltageRequest extends Message<GetVoltageRequest> {
  /**
   * Name of a power sensor
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetVoltageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetVoltageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVoltageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVoltageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVoltageRequest;

  static equals(a: GetVoltageRequest | PlainMessage<GetVoltageRequest> | undefined, b: GetVoltageRequest | PlainMessage<GetVoltageRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.powersensor.v1.GetVoltageResponse
 */
export declare class GetVoltageResponse extends Message<GetVoltageResponse> {
  /**
   * Voltage in volts
   *
   * @generated from field: double volts = 1;
   */
  volts: number;

  /**
   * Bool describing whether the voltage is DC or AC
   *
   * @generated from field: bool is_ac = 2;
   */
  isAc: boolean;

  constructor(data?: PartialMessage<GetVoltageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetVoltageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVoltageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVoltageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVoltageResponse;

  static equals(a: GetVoltageResponse | PlainMessage<GetVoltageResponse> | undefined, b: GetVoltageResponse | PlainMessage<GetVoltageResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.powersensor.v1.GetCurrentRequest
 */
export declare class GetCurrentRequest extends Message<GetCurrentRequest> {
  /**
   * Name of a power sensor
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetCurrentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetCurrentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentRequest;

  static equals(a: GetCurrentRequest | PlainMessage<GetCurrentRequest> | undefined, b: GetCurrentRequest | PlainMessage<GetCurrentRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.powersensor.v1.GetCurrentResponse
 */
export declare class GetCurrentResponse extends Message<GetCurrentResponse> {
  /**
   * Current in amperes
   *
   * @generated from field: double amperes = 1;
   */
  amperes: number;

  /**
   * Bool descibing whether the current is DC or AC
   *
   * @generated from field: bool is_ac = 2;
   */
  isAc: boolean;

  constructor(data?: PartialMessage<GetCurrentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetCurrentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCurrentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCurrentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCurrentResponse;

  static equals(a: GetCurrentResponse | PlainMessage<GetCurrentResponse> | undefined, b: GetCurrentResponse | PlainMessage<GetCurrentResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.powersensor.v1.GetPowerRequest
 */
export declare class GetPowerRequest extends Message<GetPowerRequest> {
  /**
   * Name of a power sensor
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetPowerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetPowerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPowerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPowerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPowerRequest;

  static equals(a: GetPowerRequest | PlainMessage<GetPowerRequest> | undefined, b: GetPowerRequest | PlainMessage<GetPowerRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.powersensor.v1.GetPowerResponse
 */
export declare class GetPowerResponse extends Message<GetPowerResponse> {
  /**
   * Power in watts
   *
   * @generated from field: double watts = 1;
   */
  watts: number;

  constructor(data?: PartialMessage<GetPowerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.powersensor.v1.GetPowerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPowerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPowerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPowerResponse;

  static equals(a: GetPowerResponse | PlainMessage<GetPowerResponse> | undefined, b: GetPowerResponse | PlainMessage<GetPowerResponse> | undefined): boolean;
}

