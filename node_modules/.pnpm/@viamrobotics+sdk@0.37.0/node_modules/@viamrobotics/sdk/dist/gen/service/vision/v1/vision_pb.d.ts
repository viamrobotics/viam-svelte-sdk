// @generated by protoc-gen-es v1.10.0
// @generated from file service/vision/v1/vision.proto (package viam.service.vision.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { PointCloudObject } from "../../../common/v1/common_pb.js";
import type { Image } from "../../../component/camera/v1/camera_pb.js";

/**
 * @generated from message viam.service.vision.v1.GetDetectionsRequest
 */
export declare class GetDetectionsRequest extends Message<GetDetectionsRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * the image, encoded as bytes
   *
   * @generated from field: bytes image = 2;
   */
  image: Uint8Array;

  /**
   * the width of the image
   *
   * @generated from field: int64 width = 3;
   */
  width: bigint;

  /**
   * the height of the image
   *
   * @generated from field: int64 height = 4;
   */
  height: bigint;

  /**
   * the actual MIME type of image
   *
   * @generated from field: string mime_type = 5;
   */
  mimeType: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetDetectionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetDetectionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetectionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetectionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetectionsRequest;

  static equals(a: GetDetectionsRequest | PlainMessage<GetDetectionsRequest> | undefined, b: GetDetectionsRequest | PlainMessage<GetDetectionsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetDetectionsResponse
 */
export declare class GetDetectionsResponse extends Message<GetDetectionsResponse> {
  /**
   * the bounding boxes and labels
   *
   * @generated from field: repeated viam.service.vision.v1.Detection detections = 1;
   */
  detections: Detection[];

  constructor(data?: PartialMessage<GetDetectionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetDetectionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetectionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetectionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetectionsResponse;

  static equals(a: GetDetectionsResponse | PlainMessage<GetDetectionsResponse> | undefined, b: GetDetectionsResponse | PlainMessage<GetDetectionsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetDetectionsFromCameraRequest
 */
export declare class GetDetectionsFromCameraRequest extends Message<GetDetectionsFromCameraRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * name of camera source to use as input
   *
   * @generated from field: string camera_name = 2;
   */
  cameraName: string;

  /**
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetDetectionsFromCameraRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetDetectionsFromCameraRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetectionsFromCameraRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetectionsFromCameraRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetectionsFromCameraRequest;

  static equals(a: GetDetectionsFromCameraRequest | PlainMessage<GetDetectionsFromCameraRequest> | undefined, b: GetDetectionsFromCameraRequest | PlainMessage<GetDetectionsFromCameraRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetDetectionsFromCameraResponse
 */
export declare class GetDetectionsFromCameraResponse extends Message<GetDetectionsFromCameraResponse> {
  /**
   * the bounding boxes and labels
   *
   * @generated from field: repeated viam.service.vision.v1.Detection detections = 1;
   */
  detections: Detection[];

  constructor(data?: PartialMessage<GetDetectionsFromCameraResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetDetectionsFromCameraResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetectionsFromCameraResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetectionsFromCameraResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetectionsFromCameraResponse;

  static equals(a: GetDetectionsFromCameraResponse | PlainMessage<GetDetectionsFromCameraResponse> | undefined, b: GetDetectionsFromCameraResponse | PlainMessage<GetDetectionsFromCameraResponse> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.Detection
 */
export declare class Detection extends Message<Detection> {
  /**
   * the four corners of the box
   *
   * @generated from field: optional int64 x_min = 1;
   */
  xMin?: bigint;

  /**
   * @generated from field: optional int64 y_min = 2;
   */
  yMin?: bigint;

  /**
   * @generated from field: optional int64 x_max = 3;
   */
  xMax?: bigint;

  /**
   * @generated from field: optional int64 y_max = 4;
   */
  yMax?: bigint;

  /**
   * the confidence of the detection
   *
   * @generated from field: double confidence = 5;
   */
  confidence: number;

  /**
   * label associated with the detected object
   *
   * @generated from field: string class_name = 6;
   */
  className: string;

  constructor(data?: PartialMessage<Detection>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.Detection";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Detection;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Detection;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Detection;

  static equals(a: Detection | PlainMessage<Detection> | undefined, b: Detection | PlainMessage<Detection> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetClassificationsRequest
 */
export declare class GetClassificationsRequest extends Message<GetClassificationsRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * the image encoded as bytes
   *
   * @generated from field: bytes image = 2;
   */
  image: Uint8Array;

  /**
   * the width of the image
   *
   * @generated from field: int32 width = 3;
   */
  width: number;

  /**
   * the height of the image
   *
   * @generated from field: int32 height = 4;
   */
  height: number;

  /**
   * the actual MIME type of image
   *
   * @generated from field: string mime_type = 5;
   */
  mimeType: string;

  /**
   * the number of classifications desired
   *
   * @generated from field: int32 n = 6;
   */
  n: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetClassificationsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetClassificationsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClassificationsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClassificationsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClassificationsRequest;

  static equals(a: GetClassificationsRequest | PlainMessage<GetClassificationsRequest> | undefined, b: GetClassificationsRequest | PlainMessage<GetClassificationsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetClassificationsResponse
 */
export declare class GetClassificationsResponse extends Message<GetClassificationsResponse> {
  /**
   * @generated from field: repeated viam.service.vision.v1.Classification classifications = 1;
   */
  classifications: Classification[];

  constructor(data?: PartialMessage<GetClassificationsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetClassificationsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClassificationsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClassificationsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClassificationsResponse;

  static equals(a: GetClassificationsResponse | PlainMessage<GetClassificationsResponse> | undefined, b: GetClassificationsResponse | PlainMessage<GetClassificationsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetClassificationsFromCameraRequest
 */
export declare class GetClassificationsFromCameraRequest extends Message<GetClassificationsFromCameraRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * the image encoded as bytes
   *
   * @generated from field: string camera_name = 2;
   */
  cameraName: string;

  /**
   * the number of classifications desired
   *
   * @generated from field: int32 n = 3;
   */
  n: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetClassificationsFromCameraRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetClassificationsFromCameraRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClassificationsFromCameraRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClassificationsFromCameraRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClassificationsFromCameraRequest;

  static equals(a: GetClassificationsFromCameraRequest | PlainMessage<GetClassificationsFromCameraRequest> | undefined, b: GetClassificationsFromCameraRequest | PlainMessage<GetClassificationsFromCameraRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetClassificationsFromCameraResponse
 */
export declare class GetClassificationsFromCameraResponse extends Message<GetClassificationsFromCameraResponse> {
  /**
   * @generated from field: repeated viam.service.vision.v1.Classification classifications = 1;
   */
  classifications: Classification[];

  constructor(data?: PartialMessage<GetClassificationsFromCameraResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetClassificationsFromCameraResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetClassificationsFromCameraResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetClassificationsFromCameraResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetClassificationsFromCameraResponse;

  static equals(a: GetClassificationsFromCameraResponse | PlainMessage<GetClassificationsFromCameraResponse> | undefined, b: GetClassificationsFromCameraResponse | PlainMessage<GetClassificationsFromCameraResponse> | undefined): boolean;
}

/**
 * the general form of the output from a classifier
 *
 * @generated from message viam.service.vision.v1.Classification
 */
export declare class Classification extends Message<Classification> {
  /**
   * the class name
   *
   * @generated from field: string class_name = 1;
   */
  className: string;

  /**
   * the confidence score of the classification
   *
   * @generated from field: double confidence = 2;
   */
  confidence: number;

  constructor(data?: PartialMessage<Classification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.Classification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Classification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Classification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Classification;

  static equals(a: Classification | PlainMessage<Classification> | undefined, b: Classification | PlainMessage<Classification> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetObjectPointCloudsRequest
 */
export declare class GetObjectPointCloudsRequest extends Message<GetObjectPointCloudsRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Name of a camera
   *
   * @generated from field: string camera_name = 2;
   */
  cameraName: string;

  /**
   * Requested MIME type of response
   *
   * @generated from field: string mime_type = 3;
   */
  mimeType: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetObjectPointCloudsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetObjectPointCloudsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectPointCloudsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectPointCloudsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectPointCloudsRequest;

  static equals(a: GetObjectPointCloudsRequest | PlainMessage<GetObjectPointCloudsRequest> | undefined, b: GetObjectPointCloudsRequest | PlainMessage<GetObjectPointCloudsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetObjectPointCloudsResponse
 */
export declare class GetObjectPointCloudsResponse extends Message<GetObjectPointCloudsResponse> {
  /**
   * Actual MIME type of response
   *
   * @generated from field: string mime_type = 1;
   */
  mimeType: string;

  /**
   * List of objects in the scene
   *
   * @generated from field: repeated viam.common.v1.PointCloudObject objects = 2;
   */
  objects: PointCloudObject[];

  constructor(data?: PartialMessage<GetObjectPointCloudsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetObjectPointCloudsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectPointCloudsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectPointCloudsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectPointCloudsResponse;

  static equals(a: GetObjectPointCloudsResponse | PlainMessage<GetObjectPointCloudsResponse> | undefined, b: GetObjectPointCloudsResponse | PlainMessage<GetObjectPointCloudsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetPropertiesRequest
 */
export declare class GetPropertiesRequest extends Message<GetPropertiesRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetPropertiesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetPropertiesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPropertiesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPropertiesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPropertiesRequest;

  static equals(a: GetPropertiesRequest | PlainMessage<GetPropertiesRequest> | undefined, b: GetPropertiesRequest | PlainMessage<GetPropertiesRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.CaptureAllFromCameraRequest
 */
export declare class CaptureAllFromCameraRequest extends Message<CaptureAllFromCameraRequest> {
  /**
   * name of the vision service
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * name of camera source to use as input
   *
   * @generated from field: string camera_name = 2;
   */
  cameraName: string;

  /**
   * whether or not including the image in the response
   *
   * @generated from field: bool return_image = 3;
   */
  returnImage: boolean;

  /**
   * whether or not including classifications in the response
   *
   * @generated from field: bool return_classifications = 4;
   */
  returnClassifications: boolean;

  /**
   * whether or not including detections in the response
   *
   * @generated from field: bool return_detections = 5;
   */
  returnDetections: boolean;

  /**
   * whether or not including pcd in the response
   *
   * @generated from field: bool return_object_point_clouds = 6;
   */
  returnObjectPointClouds: boolean;

  /**
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<CaptureAllFromCameraRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.CaptureAllFromCameraRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureAllFromCameraRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureAllFromCameraRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureAllFromCameraRequest;

  static equals(a: CaptureAllFromCameraRequest | PlainMessage<CaptureAllFromCameraRequest> | undefined, b: CaptureAllFromCameraRequest | PlainMessage<CaptureAllFromCameraRequest> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.CaptureAllFromCameraResponse
 */
export declare class CaptureAllFromCameraResponse extends Message<CaptureAllFromCameraResponse> {
  /**
   * @generated from field: viam.component.camera.v1.Image image = 1;
   */
  image?: Image;

  /**
   * @generated from field: repeated viam.service.vision.v1.Detection detections = 2;
   */
  detections: Detection[];

  /**
   * @generated from field: repeated viam.service.vision.v1.Classification classifications = 3;
   */
  classifications: Classification[];

  /**
   * @generated from field: repeated viam.common.v1.PointCloudObject objects = 4;
   */
  objects: PointCloudObject[];

  /**
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<CaptureAllFromCameraResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.CaptureAllFromCameraResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureAllFromCameraResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureAllFromCameraResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureAllFromCameraResponse;

  static equals(a: CaptureAllFromCameraResponse | PlainMessage<CaptureAllFromCameraResponse> | undefined, b: CaptureAllFromCameraResponse | PlainMessage<CaptureAllFromCameraResponse> | undefined): boolean;
}

/**
 * @generated from message viam.service.vision.v1.GetPropertiesResponse
 */
export declare class GetPropertiesResponse extends Message<GetPropertiesResponse> {
  /**
   * whether or not classifactions are supported by the vision service
   *
   * @generated from field: bool classifications_supported = 1;
   */
  classificationsSupported: boolean;

  /**
   * whether or not detections are supported by the vision service
   *
   * @generated from field: bool detections_supported = 2;
   */
  detectionsSupported: boolean;

  /**
   * whether or not 3d segmentation is supported by the vision service
   *
   * @generated from field: bool object_point_clouds_supported = 3;
   */
  objectPointCloudsSupported: boolean;

  constructor(data?: PartialMessage<GetPropertiesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.service.vision.v1.GetPropertiesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPropertiesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPropertiesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPropertiesResponse;

  static equals(a: GetPropertiesResponse | PlainMessage<GetPropertiesResponse> | undefined, b: GetPropertiesResponse | PlainMessage<GetPropertiesResponse> | undefined): boolean;
}

