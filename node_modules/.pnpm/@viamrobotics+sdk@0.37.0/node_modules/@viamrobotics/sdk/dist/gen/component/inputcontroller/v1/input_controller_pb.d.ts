// @generated by protoc-gen-es v1.10.0
// @generated from file component/inputcontroller/v1/input_controller.proto (package viam.component.inputcontroller.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message viam.component.inputcontroller.v1.GetControlsRequest
 */
export declare class GetControlsRequest extends Message<GetControlsRequest> {
  /**
   * Name of an input controller
   *
   * @generated from field: string controller = 1;
   */
  controller: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetControlsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.GetControlsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetControlsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetControlsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetControlsRequest;

  static equals(a: GetControlsRequest | PlainMessage<GetControlsRequest> | undefined, b: GetControlsRequest | PlainMessage<GetControlsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.GetControlsResponse
 */
export declare class GetControlsResponse extends Message<GetControlsResponse> {
  /**
   * Returns a list of all the controls (buttons and axes) that are
   * available to a given Input Controller
   *
   * @generated from field: repeated string controls = 1;
   */
  controls: string[];

  constructor(data?: PartialMessage<GetControlsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.GetControlsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetControlsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetControlsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetControlsResponse;

  static equals(a: GetControlsResponse | PlainMessage<GetControlsResponse> | undefined, b: GetControlsResponse | PlainMessage<GetControlsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.GetEventsRequest
 */
export declare class GetEventsRequest extends Message<GetEventsRequest> {
  /**
   * Name of an input controller
   *
   * @generated from field: string controller = 1;
   */
  controller: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetEventsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.GetEventsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsRequest;

  static equals(a: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined, b: GetEventsRequest | PlainMessage<GetEventsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.GetEventsResponse
 */
export declare class GetEventsResponse extends Message<GetEventsResponse> {
  /**
   * Returns a list of the most recent event for each control on a given InputController. Effectively provides the current "state" of all
   * buttons/axes on a given input controller
   *
   * @generated from field: repeated viam.component.inputcontroller.v1.Event events = 1;
   */
  events: Event[];

  constructor(data?: PartialMessage<GetEventsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.GetEventsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEventsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEventsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEventsResponse;

  static equals(a: GetEventsResponse | PlainMessage<GetEventsResponse> | undefined, b: GetEventsResponse | PlainMessage<GetEventsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.TriggerEventRequest
 */
export declare class TriggerEventRequest extends Message<TriggerEventRequest> {
  /**
   * Name of an input controller
   *
   * @generated from field: string controller = 1;
   */
  controller: string;

  /**
   * Digitally assert a given event
   *
   * @generated from field: viam.component.inputcontroller.v1.Event event = 2;
   */
  event?: Event;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<TriggerEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.TriggerEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerEventRequest;

  static equals(a: TriggerEventRequest | PlainMessage<TriggerEventRequest> | undefined, b: TriggerEventRequest | PlainMessage<TriggerEventRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.TriggerEventResponse
 */
export declare class TriggerEventResponse extends Message<TriggerEventResponse> {
  constructor(data?: PartialMessage<TriggerEventResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.TriggerEventResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerEventResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerEventResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerEventResponse;

  static equals(a: TriggerEventResponse | PlainMessage<TriggerEventResponse> | undefined, b: TriggerEventResponse | PlainMessage<TriggerEventResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.Event
 */
export declare class Event extends Message<Event> {
  /**
   * Timestamp of event
   *
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * An event type (eg: ButtonPress, ButtonRelease)
   *
   * @generated from field: string event = 2;
   */
  event: string;

  /**
   * A control, can be a button (eg: ButtonSouth) or an axis (eg: AbsoluteX)
   *
   * @generated from field: string control = 3;
   */
  control: string;

  /**
   * 0 or 1 for buttons, -1.0 to +1.0 for axes
   *
   * @generated from field: double value = 4;
   */
  value: number;

  constructor(data?: PartialMessage<Event>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.Event";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;

  static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.StreamEventsRequest
 */
export declare class StreamEventsRequest extends Message<StreamEventsRequest> {
  /**
   * Name of an input controller
   *
   * @generated from field: string controller = 1;
   */
  controller: string;

  /**
   * A list of Events
   *
   * @generated from field: repeated viam.component.inputcontroller.v1.StreamEventsRequest.Events events = 2;
   */
  events: StreamEventsRequest_Events[];

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<StreamEventsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.StreamEventsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamEventsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamEventsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamEventsRequest;

  static equals(a: StreamEventsRequest | PlainMessage<StreamEventsRequest> | undefined, b: StreamEventsRequest | PlainMessage<StreamEventsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.StreamEventsRequest.Events
 */
export declare class StreamEventsRequest_Events extends Message<StreamEventsRequest_Events> {
  /**
   * Name of a control (button or axis)
   *
   * @generated from field: string control = 1;
   */
  control: string;

  /**
   * Specify which event types to recieve events for
   *
   * @generated from field: repeated string events = 2;
   */
  events: string[];

  /**
   * Specify which event types to stop recieving events for
   * This can be an empty list
   *
   * @generated from field: repeated string cancelled_events = 3;
   */
  cancelledEvents: string[];

  constructor(data?: PartialMessage<StreamEventsRequest_Events>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.StreamEventsRequest.Events";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamEventsRequest_Events;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamEventsRequest_Events;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamEventsRequest_Events;

  static equals(a: StreamEventsRequest_Events | PlainMessage<StreamEventsRequest_Events> | undefined, b: StreamEventsRequest_Events | PlainMessage<StreamEventsRequest_Events> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.StreamEventsResponse
 */
export declare class StreamEventsResponse extends Message<StreamEventsResponse> {
  /**
   * Event for a controller
   *
   * @generated from field: viam.component.inputcontroller.v1.Event event = 1;
   */
  event?: Event;

  constructor(data?: PartialMessage<StreamEventsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.StreamEventsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamEventsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamEventsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamEventsResponse;

  static equals(a: StreamEventsResponse | PlainMessage<StreamEventsResponse> | undefined, b: StreamEventsResponse | PlainMessage<StreamEventsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.inputcontroller.v1.Status
 */
export declare class Status extends Message<Status> {
  /**
   * @generated from field: repeated viam.component.inputcontroller.v1.Event events = 1;
   */
  events: Event[];

  constructor(data?: PartialMessage<Status>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.inputcontroller.v1.Status";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Status;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Status;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Status;

  static equals(a: Status | PlainMessage<Status> | undefined, b: Status | PlainMessage<Status> | undefined): boolean;
}

