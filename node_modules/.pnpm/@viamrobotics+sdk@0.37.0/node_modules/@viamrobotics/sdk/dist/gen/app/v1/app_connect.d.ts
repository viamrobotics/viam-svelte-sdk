// @generated by protoc-gen-connect-es v1.5.0
// @generated from file app/v1/app.proto (package viam.app.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddRoleRequest, AddRoleResponse, ChangeRoleRequest, ChangeRoleResponse, CheckPermissionsRequest, CheckPermissionsResponse, CreateFragmentRequest, CreateFragmentResponse, CreateKeyFromExistingKeyAuthorizationsRequest, CreateKeyFromExistingKeyAuthorizationsResponse, CreateKeyRequest, CreateKeyResponse, CreateLocationRequest, CreateLocationResponse, CreateLocationSecretRequest, CreateLocationSecretResponse, CreateModuleRequest, CreateModuleResponse, CreateOAuthAppRequest, CreateOAuthAppResponse, CreateOrganizationInviteRequest, CreateOrganizationInviteResponse, CreateOrganizationRequest, CreateOrganizationResponse, CreateRegistryItemRequest, CreateRegistryItemResponse, CreateRobotPartSecretRequest, CreateRobotPartSecretResponse, DeleteFragmentRequest, DeleteFragmentResponse, DeleteFragmentTagRequest, DeleteFragmentTagResponse, DeleteKeyRequest, DeleteKeyResponse, DeleteLocationRequest, DeleteLocationResponse, DeleteLocationSecretRequest, DeleteLocationSecretResponse, DeleteOAuthAppRequest, DeleteOAuthAppResponse, DeleteOrganizationInviteRequest, DeleteOrganizationInviteResponse, DeleteOrganizationMemberRequest, DeleteOrganizationMemberResponse, DeleteOrganizationRequest, DeleteOrganizationResponse, DeleteRegistryItemRequest, DeleteRegistryItemResponse, DeleteRobotPartRequest, DeleteRobotPartResponse, DeleteRobotPartSecretRequest, DeleteRobotPartSecretResponse, DeleteRobotRequest, DeleteRobotResponse, DisableAuthServiceRequest, DisableAuthServiceResponse, DisableBillingServiceRequest, DisableBillingServiceResponse, EnableAuthServiceRequest, EnableAuthServiceResponse, EnableBillingServiceRequest, EnableBillingServiceResponse, GetBillingServiceConfigRequest, GetBillingServiceConfigResponse, GetFragmentHistoryRequest, GetFragmentHistoryResponse, GetFragmentRequest, GetFragmentResponse, GetFragmentUsageRequest, GetFragmentUsageResponse, GetLocationMetadataRequest, GetLocationMetadataResponse, GetLocationRequest, GetLocationResponse, GetModuleRequest, GetModuleResponse, GetOrganizationMetadataRequest, GetOrganizationMetadataResponse, GetOrganizationNamespaceAvailabilityRequest, GetOrganizationNamespaceAvailabilityResponse, GetOrganizationRequest, GetOrganizationResponse, GetOrganizationsWithAccessToLocationRequest, GetOrganizationsWithAccessToLocationResponse, GetRegistryItemRequest, GetRegistryItemResponse, GetRobotAPIKeysRequest, GetRobotAPIKeysResponse, GetRobotMetadataRequest, GetRobotMetadataResponse, GetRobotPartHistoryRequest, GetRobotPartHistoryResponse, GetRobotPartLogsRequest, GetRobotPartLogsResponse, GetRobotPartMetadataRequest, GetRobotPartMetadataResponse, GetRobotPartRequest, GetRobotPartResponse, GetRobotPartsRequest, GetRobotPartsResponse, GetRobotRequest, GetRobotResponse, GetRoverRentalRobotsRequest, GetRoverRentalRobotsResponse, GetUserIDByEmailRequest, GetUserIDByEmailResponse, ListAuthorizationsRequest, ListAuthorizationsResponse, ListFragmentsRequest, ListFragmentsResponse, ListKeysRequest, ListKeysResponse, ListLocationsRequest, ListLocationsResponse, ListMachineFragmentsRequest, ListMachineFragmentsResponse, ListModulesRequest, ListModulesResponse, ListOAuthAppsRequest, ListOAuthAppsResponse, ListOrganizationMembersRequest, ListOrganizationMembersResponse, ListOrganizationsByUserRequest, ListOrganizationsByUserResponse, ListOrganizationsRequest, ListOrganizationsResponse, ListRegistryItemsRequest, ListRegistryItemsResponse, ListRobotsRequest, ListRobotsResponse, LocationAuthRequest, LocationAuthResponse, MarkPartAsMainRequest, MarkPartAsMainResponse, MarkPartForRestartRequest, MarkPartForRestartResponse, NewRobotPartRequest, NewRobotPartResponse, NewRobotRequest, NewRobotResponse, OrganizationGetLogoRequest, OrganizationGetLogoResponse, OrganizationGetSupportEmailRequest, OrganizationGetSupportEmailResponse, OrganizationSetLogoRequest, OrganizationSetLogoResponse, OrganizationSetSupportEmailRequest, OrganizationSetSupportEmailResponse, ReadOAuthAppRequest, ReadOAuthAppResponse, RemoveRoleRequest, RemoveRoleResponse, RenameKeyRequest, RenameKeyResponse, ResendOrganizationInviteRequest, ResendOrganizationInviteResponse, RotateKeyRequest, RotateKeyResponse, SearchOrganizationsRequest, SearchOrganizationsResponse, SetFragmentTagRequest, SetFragmentTagResponse, ShareLocationRequest, ShareLocationResponse, TailRobotPartLogsRequest, TailRobotPartLogsResponse, TransferRegistryItemRequest, TransferRegistryItemResponse, UnshareLocationRequest, UnshareLocationResponse, UpdateBillingServiceRequest, UpdateBillingServiceResponse, UpdateFragmentRequest, UpdateFragmentResponse, UpdateLocationMetadataRequest, UpdateLocationMetadataResponse, UpdateLocationRequest, UpdateLocationResponse, UpdateModuleRequest, UpdateModuleResponse, UpdateOAuthAppRequest, UpdateOAuthAppResponse, UpdateOrganizationInviteAuthorizationsRequest, UpdateOrganizationInviteAuthorizationsResponse, UpdateOrganizationMetadataRequest, UpdateOrganizationMetadataResponse, UpdateOrganizationRequest, UpdateOrganizationResponse, UpdateRegistryItemRequest, UpdateRegistryItemResponse, UpdateRobotMetadataRequest, UpdateRobotMetadataResponse, UpdateRobotPartMetadataRequest, UpdateRobotPartMetadataResponse, UpdateRobotPartRequest, UpdateRobotPartResponse, UpdateRobotRequest, UpdateRobotResponse, UploadModuleFileRequest, UploadModuleFileResponse } from "./app_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Users
 *
 * @generated from service viam.app.v1.AppService
 */
export declare const AppService: {
  readonly typeName: "viam.app.v1.AppService",
  readonly methods: {
    /**
     * Get the id of the user with the email
     *
     * @generated from rpc viam.app.v1.AppService.GetUserIDByEmail
     */
    readonly getUserIDByEmail: {
      readonly name: "GetUserIDByEmail",
      readonly I: typeof GetUserIDByEmailRequest,
      readonly O: typeof GetUserIDByEmailResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create a new organization
     *
     * @generated from rpc viam.app.v1.AppService.CreateOrganization
     */
    readonly createOrganization: {
      readonly name: "CreateOrganization",
      readonly I: typeof CreateOrganizationRequest,
      readonly O: typeof CreateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List organizations
     *
     * @generated from rpc viam.app.v1.AppService.ListOrganizations
     */
    readonly listOrganizations: {
      readonly name: "ListOrganizations",
      readonly I: typeof ListOrganizationsRequest,
      readonly O: typeof ListOrganizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get all organizations that have access to a location.
     *
     * @generated from rpc viam.app.v1.AppService.GetOrganizationsWithAccessToLocation
     */
    readonly getOrganizationsWithAccessToLocation: {
      readonly name: "GetOrganizationsWithAccessToLocation",
      readonly I: typeof GetOrganizationsWithAccessToLocationRequest,
      readonly O: typeof GetOrganizationsWithAccessToLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List the organizations a user belongs to
     *
     * @generated from rpc viam.app.v1.AppService.ListOrganizationsByUser
     */
    readonly listOrganizationsByUser: {
      readonly name: "ListOrganizationsByUser",
      readonly I: typeof ListOrganizationsByUserRequest,
      readonly O: typeof ListOrganizationsByUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Search organizations by a couple fields
     *
     * @generated from rpc viam.app.v1.AppService.SearchOrganizations
     */
    readonly searchOrganizations: {
      readonly name: "SearchOrganizations",
      readonly I: typeof SearchOrganizationsRequest,
      readonly O: typeof SearchOrganizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get an organization
     *
     * @generated from rpc viam.app.v1.AppService.GetOrganization
     */
    readonly getOrganization: {
      readonly name: "GetOrganization",
      readonly I: typeof GetOrganizationRequest,
      readonly O: typeof GetOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Checks for namespace availablity throughout all orgs.
     *
     * @generated from rpc viam.app.v1.AppService.GetOrganizationNamespaceAvailability
     */
    readonly getOrganizationNamespaceAvailability: {
      readonly name: "GetOrganizationNamespaceAvailability",
      readonly I: typeof GetOrganizationNamespaceAvailabilityRequest,
      readonly O: typeof GetOrganizationNamespaceAvailabilityResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update an organization
     *
     * @generated from rpc viam.app.v1.AppService.UpdateOrganization
     */
    readonly updateOrganization: {
      readonly name: "UpdateOrganization",
      readonly I: typeof UpdateOrganizationRequest,
      readonly O: typeof UpdateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete an organization
     *
     * @generated from rpc viam.app.v1.AppService.DeleteOrganization
     */
    readonly deleteOrganization: {
      readonly name: "DeleteOrganization",
      readonly I: typeof DeleteOrganizationRequest,
      readonly O: typeof DeleteOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get user-defined metadata for an organization
     *
     * @generated from rpc viam.app.v1.AppService.GetOrganizationMetadata
     */
    readonly getOrganizationMetadata: {
      readonly name: "GetOrganizationMetadata",
      readonly I: typeof GetOrganizationMetadataRequest,
      readonly O: typeof GetOrganizationMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user-defined metadata for an organization
     *
     * @generated from rpc viam.app.v1.AppService.UpdateOrganizationMetadata
     */
    readonly updateOrganizationMetadata: {
      readonly name: "UpdateOrganizationMetadata",
      readonly I: typeof UpdateOrganizationMetadataRequest,
      readonly O: typeof UpdateOrganizationMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List all members of an organization and all invited members to the organization.
     *
     * @generated from rpc viam.app.v1.AppService.ListOrganizationMembers
     */
    readonly listOrganizationMembers: {
      readonly name: "ListOrganizationMembers",
      readonly I: typeof ListOrganizationMembersRequest,
      readonly O: typeof ListOrganizationMembersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create an organization invite to an organization
     *
     * @generated from rpc viam.app.v1.AppService.CreateOrganizationInvite
     */
    readonly createOrganizationInvite: {
      readonly name: "CreateOrganizationInvite",
      readonly I: typeof CreateOrganizationInviteRequest,
      readonly O: typeof CreateOrganizationInviteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update the authorizations attached to an organization invite
     *
     * @generated from rpc viam.app.v1.AppService.UpdateOrganizationInviteAuthorizations
     */
    readonly updateOrganizationInviteAuthorizations: {
      readonly name: "UpdateOrganizationInviteAuthorizations",
      readonly I: typeof UpdateOrganizationInviteAuthorizationsRequest,
      readonly O: typeof UpdateOrganizationInviteAuthorizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete an organization member from an organization
     *
     * @generated from rpc viam.app.v1.AppService.DeleteOrganizationMember
     */
    readonly deleteOrganizationMember: {
      readonly name: "DeleteOrganizationMember",
      readonly I: typeof DeleteOrganizationMemberRequest,
      readonly O: typeof DeleteOrganizationMemberResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete an organization invite
     *
     * @generated from rpc viam.app.v1.AppService.DeleteOrganizationInvite
     */
    readonly deleteOrganizationInvite: {
      readonly name: "DeleteOrganizationInvite",
      readonly I: typeof DeleteOrganizationInviteRequest,
      readonly O: typeof DeleteOrganizationInviteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Resend an organization invite
     *
     * @generated from rpc viam.app.v1.AppService.ResendOrganizationInvite
     */
    readonly resendOrganizationInvite: {
      readonly name: "ResendOrganizationInvite",
      readonly I: typeof ResendOrganizationInviteRequest,
      readonly O: typeof ResendOrganizationInviteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.EnableBillingService
     */
    readonly enableBillingService: {
      readonly name: "EnableBillingService",
      readonly I: typeof EnableBillingServiceRequest,
      readonly O: typeof EnableBillingServiceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.DisableBillingService
     */
    readonly disableBillingService: {
      readonly name: "DisableBillingService",
      readonly I: typeof DisableBillingServiceRequest,
      readonly O: typeof DisableBillingServiceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.UpdateBillingService
     */
    readonly updateBillingService: {
      readonly name: "UpdateBillingService",
      readonly I: typeof UpdateBillingServiceRequest,
      readonly O: typeof UpdateBillingServiceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.GetBillingServiceConfig
     */
    readonly getBillingServiceConfig: {
      readonly name: "GetBillingServiceConfig",
      readonly I: typeof GetBillingServiceConfigRequest,
      readonly O: typeof GetBillingServiceConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.OrganizationSetSupportEmail
     */
    readonly organizationSetSupportEmail: {
      readonly name: "OrganizationSetSupportEmail",
      readonly I: typeof OrganizationSetSupportEmailRequest,
      readonly O: typeof OrganizationSetSupportEmailResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.OrganizationGetSupportEmail
     */
    readonly organizationGetSupportEmail: {
      readonly name: "OrganizationGetSupportEmail",
      readonly I: typeof OrganizationGetSupportEmailRequest,
      readonly O: typeof OrganizationGetSupportEmailResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.OrganizationSetLogo
     */
    readonly organizationSetLogo: {
      readonly name: "OrganizationSetLogo",
      readonly I: typeof OrganizationSetLogoRequest,
      readonly O: typeof OrganizationSetLogoResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.OrganizationGetLogo
     */
    readonly organizationGetLogo: {
      readonly name: "OrganizationGetLogo",
      readonly I: typeof OrganizationGetLogoRequest,
      readonly O: typeof OrganizationGetLogoResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.EnableAuthService
     */
    readonly enableAuthService: {
      readonly name: "EnableAuthService",
      readonly I: typeof EnableAuthServiceRequest,
      readonly O: typeof EnableAuthServiceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.DisableAuthService
     */
    readonly disableAuthService: {
      readonly name: "DisableAuthService",
      readonly I: typeof DisableAuthServiceRequest,
      readonly O: typeof DisableAuthServiceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.CreateOAuthApp
     */
    readonly createOAuthApp: {
      readonly name: "CreateOAuthApp",
      readonly I: typeof CreateOAuthAppRequest,
      readonly O: typeof CreateOAuthAppResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.ReadOAuthApp
     */
    readonly readOAuthApp: {
      readonly name: "ReadOAuthApp",
      readonly I: typeof ReadOAuthAppRequest,
      readonly O: typeof ReadOAuthAppResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.UpdateOAuthApp
     */
    readonly updateOAuthApp: {
      readonly name: "UpdateOAuthApp",
      readonly I: typeof UpdateOAuthAppRequest,
      readonly O: typeof UpdateOAuthAppResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.DeleteOAuthApp
     */
    readonly deleteOAuthApp: {
      readonly name: "DeleteOAuthApp",
      readonly I: typeof DeleteOAuthAppRequest,
      readonly O: typeof DeleteOAuthAppResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.ListOAuthApps
     */
    readonly listOAuthApps: {
      readonly name: "ListOAuthApps",
      readonly I: typeof ListOAuthAppsRequest,
      readonly O: typeof ListOAuthAppsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create a location
     *
     * @generated from rpc viam.app.v1.AppService.CreateLocation
     */
    readonly createLocation: {
      readonly name: "CreateLocation",
      readonly I: typeof CreateLocationRequest,
      readonly O: typeof CreateLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a location
     *
     * @generated from rpc viam.app.v1.AppService.GetLocation
     */
    readonly getLocation: {
      readonly name: "GetLocation",
      readonly I: typeof GetLocationRequest,
      readonly O: typeof GetLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update a location
     *
     * @generated from rpc viam.app.v1.AppService.UpdateLocation
     */
    readonly updateLocation: {
      readonly name: "UpdateLocation",
      readonly I: typeof UpdateLocationRequest,
      readonly O: typeof UpdateLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete a location
     *
     * @generated from rpc viam.app.v1.AppService.DeleteLocation
     */
    readonly deleteLocation: {
      readonly name: "DeleteLocation",
      readonly I: typeof DeleteLocationRequest,
      readonly O: typeof DeleteLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get user-defined metadata for a location
     *
     * @generated from rpc viam.app.v1.AppService.GetLocationMetadata
     */
    readonly getLocationMetadata: {
      readonly name: "GetLocationMetadata",
      readonly I: typeof GetLocationMetadataRequest,
      readonly O: typeof GetLocationMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user-defined metadata for a location
     *
     * @generated from rpc viam.app.v1.AppService.UpdateLocationMetadata
     */
    readonly updateLocationMetadata: {
      readonly name: "UpdateLocationMetadata",
      readonly I: typeof UpdateLocationMetadataRequest,
      readonly O: typeof UpdateLocationMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a list of locations
     *
     * @generated from rpc viam.app.v1.AppService.ListLocations
     */
    readonly listLocations: {
      readonly name: "ListLocations",
      readonly I: typeof ListLocationsRequest,
      readonly O: typeof ListLocationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Share a location with an organization
     *
     * @generated from rpc viam.app.v1.AppService.ShareLocation
     */
    readonly shareLocation: {
      readonly name: "ShareLocation",
      readonly I: typeof ShareLocationRequest,
      readonly O: typeof ShareLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stop sharing a location with an organization
     *
     * @generated from rpc viam.app.v1.AppService.UnshareLocation
     */
    readonly unshareLocation: {
      readonly name: "UnshareLocation",
      readonly I: typeof UnshareLocationRequest,
      readonly O: typeof UnshareLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a location's authorization secrets
     *
     * @generated from rpc viam.app.v1.AppService.LocationAuth
     */
    readonly locationAuth: {
      readonly name: "LocationAuth",
      readonly I: typeof LocationAuthRequest,
      readonly O: typeof LocationAuthResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create a new generated Secret in the Location.
     *  - Succeeds if there are no more than 2 active secrets after creation.
     *
     * @generated from rpc viam.app.v1.AppService.CreateLocationSecret
     */
    readonly createLocationSecret: {
      readonly name: "CreateLocationSecret",
      readonly I: typeof CreateLocationSecretRequest,
      readonly O: typeof CreateLocationSecretResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete a Secret from the Location.
     *
     * @generated from rpc viam.app.v1.AppService.DeleteLocationSecret
     */
    readonly deleteLocationSecret: {
      readonly name: "DeleteLocationSecret",
      readonly I: typeof DeleteLocationSecretRequest,
      readonly O: typeof DeleteLocationSecretResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a specific robot by ID
     *
     * @generated from rpc viam.app.v1.AppService.GetRobot
     */
    readonly getRobot: {
      readonly name: "GetRobot",
      readonly I: typeof GetRobotRequest,
      readonly O: typeof GetRobotResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get user-defined metadata for a robot
     *
     * @generated from rpc viam.app.v1.AppService.GetRobotMetadata
     */
    readonly getRobotMetadata: {
      readonly name: "GetRobotMetadata",
      readonly I: typeof GetRobotMetadataRequest,
      readonly O: typeof GetRobotMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user-defined metadata for an robot
     *
     * @generated from rpc viam.app.v1.AppService.UpdateRobotMetadata
     */
    readonly updateRobotMetadata: {
      readonly name: "UpdateRobotMetadata",
      readonly I: typeof UpdateRobotMetadataRequest,
      readonly O: typeof UpdateRobotMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get Rover Rental Location Robots
     *
     * @generated from rpc viam.app.v1.AppService.GetRoverRentalRobots
     */
    readonly getRoverRentalRobots: {
      readonly name: "GetRoverRentalRobots",
      readonly I: typeof GetRoverRentalRobotsRequest,
      readonly O: typeof GetRoverRentalRobotsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.GetRobotParts
     */
    readonly getRobotParts: {
      readonly name: "GetRobotParts",
      readonly I: typeof GetRobotPartsRequest,
      readonly O: typeof GetRobotPartsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a specific robot part by ID
     *
     * @generated from rpc viam.app.v1.AppService.GetRobotPart
     */
    readonly getRobotPart: {
      readonly name: "GetRobotPart",
      readonly I: typeof GetRobotPartRequest,
      readonly O: typeof GetRobotPartResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.GetRobotPartLogs
     */
    readonly getRobotPartLogs: {
      readonly name: "GetRobotPartLogs",
      readonly I: typeof GetRobotPartLogsRequest,
      readonly O: typeof GetRobotPartLogsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.TailRobotPartLogs
     */
    readonly tailRobotPartLogs: {
      readonly name: "TailRobotPartLogs",
      readonly I: typeof TailRobotPartLogsRequest,
      readonly O: typeof TailRobotPartLogsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * Get a specific robot part histy by ID
     *
     * @generated from rpc viam.app.v1.AppService.GetRobotPartHistory
     */
    readonly getRobotPartHistory: {
      readonly name: "GetRobotPartHistory",
      readonly I: typeof GetRobotPartHistoryRequest,
      readonly O: typeof GetRobotPartHistoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update a robot
     *
     * @generated from rpc viam.app.v1.AppService.UpdateRobotPart
     */
    readonly updateRobotPart: {
      readonly name: "UpdateRobotPart",
      readonly I: typeof UpdateRobotPartRequest,
      readonly O: typeof UpdateRobotPartResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create a new robot part
     *
     * @generated from rpc viam.app.v1.AppService.NewRobotPart
     */
    readonly newRobotPart: {
      readonly name: "NewRobotPart",
      readonly I: typeof NewRobotPartRequest,
      readonly O: typeof NewRobotPartResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete a robot part
     *
     * @generated from rpc viam.app.v1.AppService.DeleteRobotPart
     */
    readonly deleteRobotPart: {
      readonly name: "DeleteRobotPart",
      readonly I: typeof DeleteRobotPartRequest,
      readonly O: typeof DeleteRobotPartResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get user-defined metadata for a robot part
     *
     * @generated from rpc viam.app.v1.AppService.GetRobotPartMetadata
     */
    readonly getRobotPartMetadata: {
      readonly name: "GetRobotPartMetadata",
      readonly I: typeof GetRobotPartMetadataRequest,
      readonly O: typeof GetRobotPartMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user-defined metadata for an robot part
     *
     * @generated from rpc viam.app.v1.AppService.UpdateRobotPartMetadata
     */
    readonly updateRobotPartMetadata: {
      readonly name: "UpdateRobotPartMetadata",
      readonly I: typeof UpdateRobotPartMetadataRequest,
      readonly O: typeof UpdateRobotPartMetadataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets the Robot API Keys for the robot
     *
     * @generated from rpc viam.app.v1.AppService.GetRobotAPIKeys
     */
    readonly getRobotAPIKeys: {
      readonly name: "GetRobotAPIKeys",
      readonly I: typeof GetRobotAPIKeysRequest,
      readonly O: typeof GetRobotAPIKeysResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Marks the given part as the main part, and all the others as not
     *
     * @generated from rpc viam.app.v1.AppService.MarkPartAsMain
     */
    readonly markPartAsMain: {
      readonly name: "MarkPartAsMain",
      readonly I: typeof MarkPartAsMainRequest,
      readonly O: typeof MarkPartAsMainResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Marks part for restart. Once the robot part checks-in with the app the flag
     * is reset on the robot part. Calling this multiple times before a robot part
     * checks-in has no affect.
     * Note: This API may be removed in the near future.
     * TODO(APP-388): Remove
     *
     * @generated from rpc viam.app.v1.AppService.MarkPartForRestart
     */
    readonly markPartForRestart: {
      readonly name: "MarkPartForRestart",
      readonly I: typeof MarkPartForRestartRequest,
      readonly O: typeof MarkPartForRestartResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Create a new generated Secret in the Robot Part.
     *  - Succeeds if there are no more than 2 active secrets after creation.
     *
     * @generated from rpc viam.app.v1.AppService.CreateRobotPartSecret
     */
    readonly createRobotPartSecret: {
      readonly name: "CreateRobotPartSecret",
      readonly I: typeof CreateRobotPartSecretRequest,
      readonly O: typeof CreateRobotPartSecretResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete a Secret from the RobotPart.
     *
     * @generated from rpc viam.app.v1.AppService.DeleteRobotPartSecret
     */
    readonly deleteRobotPartSecret: {
      readonly name: "DeleteRobotPartSecret",
      readonly I: typeof DeleteRobotPartSecretRequest,
      readonly O: typeof DeleteRobotPartSecretResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get a list of robots
     *
     * @generated from rpc viam.app.v1.AppService.ListRobots
     */
    readonly listRobots: {
      readonly name: "ListRobots",
      readonly I: typeof ListRobotsRequest,
      readonly O: typeof ListRobotsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * NewRobot creates a new robot
     *
     * @generated from rpc viam.app.v1.AppService.NewRobot
     */
    readonly newRobot: {
      readonly name: "NewRobot",
      readonly I: typeof NewRobotRequest,
      readonly O: typeof NewRobotResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateRobot updates a robot
     *
     * @generated from rpc viam.app.v1.AppService.UpdateRobot
     */
    readonly updateRobot: {
      readonly name: "UpdateRobot",
      readonly I: typeof UpdateRobotRequest,
      readonly O: typeof UpdateRobotResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteRobot deletes a robot
     *
     * @generated from rpc viam.app.v1.AppService.DeleteRobot
     */
    readonly deleteRobot: {
      readonly name: "DeleteRobot",
      readonly I: typeof DeleteRobotRequest,
      readonly O: typeof DeleteRobotResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a list of fragments
     *
     * @generated from rpc viam.app.v1.AppService.ListFragments
     */
    readonly listFragments: {
      readonly name: "ListFragments",
      readonly I: typeof ListFragmentsRequest,
      readonly O: typeof ListFragmentsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a single fragment
     *
     * @generated from rpc viam.app.v1.AppService.GetFragment
     */
    readonly getFragment: {
      readonly name: "GetFragment",
      readonly I: typeof GetFragmentRequest,
      readonly O: typeof GetFragmentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a fragment
     *
     * @generated from rpc viam.app.v1.AppService.CreateFragment
     */
    readonly createFragment: {
      readonly name: "CreateFragment",
      readonly I: typeof CreateFragmentRequest,
      readonly O: typeof CreateFragmentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a fragment
     *
     * @generated from rpc viam.app.v1.AppService.UpdateFragment
     */
    readonly updateFragment: {
      readonly name: "UpdateFragment",
      readonly I: typeof UpdateFragmentRequest,
      readonly O: typeof UpdateFragmentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes a fragment
     *
     * @generated from rpc viam.app.v1.AppService.DeleteFragment
     */
    readonly deleteFragment: {
      readonly name: "DeleteFragment",
      readonly I: typeof DeleteFragmentRequest,
      readonly O: typeof DeleteFragmentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets top level and nested fragments for a machine, as well as any other specified fragment ids
     *
     * @generated from rpc viam.app.v1.AppService.ListMachineFragments
     */
    readonly listMachineFragments: {
      readonly name: "ListMachineFragments",
      readonly I: typeof ListMachineFragmentsRequest,
      readonly O: typeof ListMachineFragmentsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets fragment history
     *
     * @generated from rpc viam.app.v1.AppService.GetFragmentHistory
     */
    readonly getFragmentHistory: {
      readonly name: "GetFragmentHistory",
      readonly I: typeof GetFragmentHistoryRequest,
      readonly O: typeof GetFragmentHistoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets usage for a fragment across versions
     *
     * @generated from rpc viam.app.v1.AppService.GetFragmentUsage
     */
    readonly getFragmentUsage: {
      readonly name: "GetFragmentUsage",
      readonly I: typeof GetFragmentUsageRequest,
      readonly O: typeof GetFragmentUsageResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets a fragment tag to a revision
     *
     * @generated from rpc viam.app.v1.AppService.SetFragmentTag
     */
    readonly setFragmentTag: {
      readonly name: "SetFragmentTag",
      readonly I: typeof SetFragmentTagRequest,
      readonly O: typeof SetFragmentTagResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes a fragment tag
     *
     * @generated from rpc viam.app.v1.AppService.DeleteFragmentTag
     */
    readonly deleteFragmentTag: {
      readonly name: "DeleteFragmentTag",
      readonly I: typeof DeleteFragmentTagRequest,
      readonly O: typeof DeleteFragmentTagResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates an IdentityAuthorization
     *
     * @generated from rpc viam.app.v1.AppService.AddRole
     */
    readonly addRole: {
      readonly name: "AddRole",
      readonly I: typeof AddRoleRequest,
      readonly O: typeof AddRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes an IdentityAuthorization
     *
     * @generated from rpc viam.app.v1.AppService.RemoveRole
     */
    readonly removeRole: {
      readonly name: "RemoveRole",
      readonly I: typeof RemoveRoleRequest,
      readonly O: typeof RemoveRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Changes an IdentityAuthorization to a new IdentityAuthorization
     *
     * @generated from rpc viam.app.v1.AppService.ChangeRole
     */
    readonly changeRole: {
      readonly name: "ChangeRole",
      readonly I: typeof ChangeRoleRequest,
      readonly O: typeof ChangeRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all authorization roles for a given resource
     *
     * @generated from rpc viam.app.v1.AppService.ListAuthorizations
     */
    readonly listAuthorizations: {
      readonly name: "ListAuthorizations",
      readonly I: typeof ListAuthorizationsRequest,
      readonly O: typeof ListAuthorizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Validates a permission for the current user
     *
     * @generated from rpc viam.app.v1.AppService.CheckPermissions
     */
    readonly checkPermissions: {
      readonly name: "CheckPermissions",
      readonly I: typeof CheckPermissionsRequest,
      readonly O: typeof CheckPermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.GetRegistryItem
     */
    readonly getRegistryItem: {
      readonly name: "GetRegistryItem",
      readonly I: typeof GetRegistryItemRequest,
      readonly O: typeof GetRegistryItemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.CreateRegistryItem
     */
    readonly createRegistryItem: {
      readonly name: "CreateRegistryItem",
      readonly I: typeof CreateRegistryItemRequest,
      readonly O: typeof CreateRegistryItemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.UpdateRegistryItem
     */
    readonly updateRegistryItem: {
      readonly name: "UpdateRegistryItem",
      readonly I: typeof UpdateRegistryItemRequest,
      readonly O: typeof UpdateRegistryItemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.ListRegistryItems
     */
    readonly listRegistryItems: {
      readonly name: "ListRegistryItems",
      readonly I: typeof ListRegistryItemsRequest,
      readonly O: typeof ListRegistryItemsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.DeleteRegistryItem
     */
    readonly deleteRegistryItem: {
      readonly name: "DeleteRegistryItem",
      readonly I: typeof DeleteRegistryItemRequest,
      readonly O: typeof DeleteRegistryItemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.TransferRegistryItem
     */
    readonly transferRegistryItem: {
      readonly name: "TransferRegistryItem",
      readonly I: typeof TransferRegistryItemRequest,
      readonly O: typeof TransferRegistryItemResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.CreateModule
     */
    readonly createModule: {
      readonly name: "CreateModule",
      readonly I: typeof CreateModuleRequest,
      readonly O: typeof CreateModuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.UpdateModule
     */
    readonly updateModule: {
      readonly name: "UpdateModule",
      readonly I: typeof UpdateModuleRequest,
      readonly O: typeof UpdateModuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.UploadModuleFile
     */
    readonly uploadModuleFile: {
      readonly name: "UploadModuleFile",
      readonly I: typeof UploadModuleFileRequest,
      readonly O: typeof UploadModuleFileResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.GetModule
     */
    readonly getModule: {
      readonly name: "GetModule",
      readonly I: typeof GetModuleRequest,
      readonly O: typeof GetModuleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.ListModules
     */
    readonly listModules: {
      readonly name: "ListModules",
      readonly I: typeof ListModulesRequest,
      readonly O: typeof ListModulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.CreateKey
     */
    readonly createKey: {
      readonly name: "CreateKey",
      readonly I: typeof CreateKeyRequest,
      readonly O: typeof CreateKeyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.DeleteKey
     */
    readonly deleteKey: {
      readonly name: "DeleteKey",
      readonly I: typeof DeleteKeyRequest,
      readonly O: typeof DeleteKeyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.ListKeys
     */
    readonly listKeys: {
      readonly name: "ListKeys",
      readonly I: typeof ListKeysRequest,
      readonly O: typeof ListKeysResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.RenameKey
     */
    readonly renameKey: {
      readonly name: "RenameKey",
      readonly I: typeof RenameKeyRequest,
      readonly O: typeof RenameKeyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.RotateKey
     */
    readonly rotateKey: {
      readonly name: "RotateKey",
      readonly I: typeof RotateKeyRequest,
      readonly O: typeof RotateKeyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.app.v1.AppService.CreateKeyFromExistingKeyAuthorizations
     */
    readonly createKeyFromExistingKeyAuthorizations: {
      readonly name: "CreateKeyFromExistingKeyAuthorizations",
      readonly I: typeof CreateKeyFromExistingKeyAuthorizationsRequest,
      readonly O: typeof CreateKeyFromExistingKeyAuthorizationsResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

