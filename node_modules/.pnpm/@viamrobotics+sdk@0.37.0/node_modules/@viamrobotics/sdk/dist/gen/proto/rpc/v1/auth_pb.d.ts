// @generated by protoc-gen-es v1.10.0
// @generated from file proto/rpc/v1/auth.proto (package proto.rpc.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message proto.rpc.v1.Credentials
 */
export declare class Credentials extends Message<Credentials> {
  /**
   * type is the type of credentials being used.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * payload is an opaque string used that are of the given type above.
   *
   * @generated from field: string payload = 2;
   */
  payload: string;

  constructor(data?: PartialMessage<Credentials>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.v1.Credentials";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Credentials;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Credentials;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Credentials;

  static equals(a: Credentials | PlainMessage<Credentials> | undefined, b: Credentials | PlainMessage<Credentials> | undefined): boolean;
}

/**
 * An AuthenticateRequest contains the credentials used to authenticate.
 *
 * @generated from message proto.rpc.v1.AuthenticateRequest
 */
export declare class AuthenticateRequest extends Message<AuthenticateRequest> {
  /**
   * @generated from field: string entity = 1;
   */
  entity: string;

  /**
   * @generated from field: proto.rpc.v1.Credentials credentials = 2;
   */
  credentials?: Credentials;

  constructor(data?: PartialMessage<AuthenticateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.v1.AuthenticateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateRequest;

  static equals(a: AuthenticateRequest | PlainMessage<AuthenticateRequest> | undefined, b: AuthenticateRequest | PlainMessage<AuthenticateRequest> | undefined): boolean;
}

/**
 * An AuthenticateResponse is returned after successful authentication.
 *
 * @generated from message proto.rpc.v1.AuthenticateResponse
 */
export declare class AuthenticateResponse extends Message<AuthenticateResponse> {
  /**
   * access_token is a JWT where only the expiration should be deemed
   * important.
   *
   * Future(erd): maybe a refresh_token
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  constructor(data?: PartialMessage<AuthenticateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.v1.AuthenticateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateResponse;

  static equals(a: AuthenticateResponse | PlainMessage<AuthenticateResponse> | undefined, b: AuthenticateResponse | PlainMessage<AuthenticateResponse> | undefined): boolean;
}

/**
 * An AuthenticateToRequest contains the entity to authenticate to.
 *
 * @generated from message proto.rpc.v1.AuthenticateToRequest
 */
export declare class AuthenticateToRequest extends Message<AuthenticateToRequest> {
  /**
   * @generated from field: string entity = 1;
   */
  entity: string;

  constructor(data?: PartialMessage<AuthenticateToRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.v1.AuthenticateToRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateToRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateToRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateToRequest;

  static equals(a: AuthenticateToRequest | PlainMessage<AuthenticateToRequest> | undefined, b: AuthenticateToRequest | PlainMessage<AuthenticateToRequest> | undefined): boolean;
}

/**
 * An AuthenticateResponse is returned after successful authentication.
 *
 * @generated from message proto.rpc.v1.AuthenticateToResponse
 */
export declare class AuthenticateToResponse extends Message<AuthenticateToResponse> {
  /**
   * access_token is a JWT where only the expiration should be deemed
   * important.
   *
   * Future(erd): maybe a refresh_token
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  constructor(data?: PartialMessage<AuthenticateToResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.v1.AuthenticateToResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateToResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateToResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateToResponse;

  static equals(a: AuthenticateToResponse | PlainMessage<AuthenticateToResponse> | undefined, b: AuthenticateToResponse | PlainMessage<AuthenticateToResponse> | undefined): boolean;
}

