// @generated by protoc-gen-connect-es v1.5.0
// @generated from file service/navigation/v1/navigation.proto (package viam.service.navigation.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddWaypointRequest, AddWaypointResponse, GetLocationRequest, GetLocationResponse, GetModeRequest, GetModeResponse, GetObstaclesRequest, GetObstaclesResponse, GetPathsRequest, GetPathsResponse, GetPropertiesRequest, GetPropertiesResponse, GetWaypointsRequest, GetWaypointsResponse, RemoveWaypointRequest, RemoveWaypointResponse, SetModeRequest, SetModeResponse } from "./navigation_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse } from "../../../common/v1/common_pb.js";

/**
 * A NavigationService declares the gRPC contract for a Navigation service
 *
 * @generated from service viam.service.navigation.v1.NavigationService
 */
export declare const NavigationService: {
  readonly typeName: "viam.service.navigation.v1.NavigationService",
  readonly methods: {
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetMode
     */
    readonly getMode: {
      readonly name: "GetMode",
      readonly I: typeof GetModeRequest,
      readonly O: typeof GetModeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.SetMode
     */
    readonly setMode: {
      readonly name: "SetMode",
      readonly I: typeof SetModeRequest,
      readonly O: typeof SetModeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetLocation
     */
    readonly getLocation: {
      readonly name: "GetLocation",
      readonly I: typeof GetLocationRequest,
      readonly O: typeof GetLocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetWaypoints
     */
    readonly getWaypoints: {
      readonly name: "GetWaypoints",
      readonly I: typeof GetWaypointsRequest,
      readonly O: typeof GetWaypointsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.AddWaypoint
     */
    readonly addWaypoint: {
      readonly name: "AddWaypoint",
      readonly I: typeof AddWaypointRequest,
      readonly O: typeof AddWaypointResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.RemoveWaypoint
     */
    readonly removeWaypoint: {
      readonly name: "RemoveWaypoint",
      readonly I: typeof RemoveWaypointRequest,
      readonly O: typeof RemoveWaypointResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetObstacles
     */
    readonly getObstacles: {
      readonly name: "GetObstacles",
      readonly I: typeof GetObstaclesRequest,
      readonly O: typeof GetObstaclesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetPaths
     */
    readonly getPaths: {
      readonly name: "GetPaths",
      readonly I: typeof GetPathsRequest,
      readonly O: typeof GetPathsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetProperties returns properties of the current navigation service, including the
     * map_type being operated on.
     *
     * @generated from rpc viam.service.navigation.v1.NavigationService.GetProperties
     */
    readonly getProperties: {
      readonly name: "GetProperties",
      readonly I: typeof GetPropertiesRequest,
      readonly O: typeof GetPropertiesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands
     *
     * @generated from rpc viam.service.navigation.v1.NavigationService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

