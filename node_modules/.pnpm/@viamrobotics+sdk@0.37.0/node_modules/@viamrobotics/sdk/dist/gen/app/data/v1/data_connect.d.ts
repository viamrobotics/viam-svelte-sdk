// @generated by protoc-gen-connect-es v1.5.0
// @generated from file app/data/v1/data.proto (package viam.app.data.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddBinaryDataToDatasetByIDsRequest, AddBinaryDataToDatasetByIDsResponse, AddBoundingBoxToImageByIDRequest, AddBoundingBoxToImageByIDResponse, AddTagsToBinaryDataByFilterRequest, AddTagsToBinaryDataByFilterResponse, AddTagsToBinaryDataByIDsRequest, AddTagsToBinaryDataByIDsResponse, BinaryDataByFilterRequest, BinaryDataByFilterResponse, BinaryDataByIDsRequest, BinaryDataByIDsResponse, BoundingBoxLabelsByFilterRequest, BoundingBoxLabelsByFilterResponse, ConfigureDatabaseUserRequest, ConfigureDatabaseUserResponse, DeleteBinaryDataByFilterRequest, DeleteBinaryDataByFilterResponse, DeleteBinaryDataByIDsRequest, DeleteBinaryDataByIDsResponse, DeleteTabularDataRequest, DeleteTabularDataResponse, ExportTabularDataRequest, ExportTabularDataResponse, GetDatabaseConnectionRequest, GetDatabaseConnectionResponse, GetLatestTabularDataRequest, GetLatestTabularDataResponse, RemoveBinaryDataFromDatasetByIDsRequest, RemoveBinaryDataFromDatasetByIDsResponse, RemoveBoundingBoxFromImageByIDRequest, RemoveBoundingBoxFromImageByIDResponse, RemoveTagsFromBinaryDataByFilterRequest, RemoveTagsFromBinaryDataByFilterResponse, RemoveTagsFromBinaryDataByIDsRequest, RemoveTagsFromBinaryDataByIDsResponse, TabularDataByFilterRequest, TabularDataByFilterResponse, TabularDataByMQLRequest, TabularDataByMQLResponse, TabularDataBySQLRequest, TabularDataBySQLResponse, TagsByFilterRequest, TagsByFilterResponse, UpdateBoundingBoxRequest, UpdateBoundingBoxResponse } from "./data_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * DataService is used to query robot data.
 *
 * @generated from service viam.app.data.v1.DataService
 */
export declare const DataService: {
  readonly typeName: "viam.app.data.v1.DataService",
  readonly methods: {
    /**
     * TabularDataByFilter queries tabular data and metadata based on given filters.
     *
     * @generated from rpc viam.app.data.v1.DataService.TabularDataByFilter
     * @deprecated
     */
    readonly tabularDataByFilter: {
      readonly name: "TabularDataByFilter",
      readonly I: typeof TabularDataByFilterRequest,
      readonly O: typeof TabularDataByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TabularDataBySQL queries tabular data with a SQL query.
     *
     * @generated from rpc viam.app.data.v1.DataService.TabularDataBySQL
     */
    readonly tabularDataBySQL: {
      readonly name: "TabularDataBySQL",
      readonly I: typeof TabularDataBySQLRequest,
      readonly O: typeof TabularDataBySQLResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TabularDataByMQL queries tabular data with an MQL (MongoDB Query Language) query.
     *
     * @generated from rpc viam.app.data.v1.DataService.TabularDataByMQL
     */
    readonly tabularDataByMQL: {
      readonly name: "TabularDataByMQL",
      readonly I: typeof TabularDataByMQLRequest,
      readonly O: typeof TabularDataByMQLResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ExportTabularData queries tabular data from the specified data source.
     *
     * @generated from rpc viam.app.data.v1.DataService.ExportTabularData
     */
    readonly exportTabularData: {
      readonly name: "ExportTabularData",
      readonly I: typeof ExportTabularDataRequest,
      readonly O: typeof ExportTabularDataResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * GetLatestTabularData gets the most recent tabular data captured from the specified data source.
     *
     * @generated from rpc viam.app.data.v1.DataService.GetLatestTabularData
     */
    readonly getLatestTabularData: {
      readonly name: "GetLatestTabularData",
      readonly I: typeof GetLatestTabularDataRequest,
      readonly O: typeof GetLatestTabularDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * BinaryDataByFilter queries binary data and metadata based on given filters.
     *
     * @generated from rpc viam.app.data.v1.DataService.BinaryDataByFilter
     */
    readonly binaryDataByFilter: {
      readonly name: "BinaryDataByFilter",
      readonly I: typeof BinaryDataByFilterRequest,
      readonly O: typeof BinaryDataByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * BinaryDataByIDs queries binary data and metadata based on given IDs.
     *
     * @generated from rpc viam.app.data.v1.DataService.BinaryDataByIDs
     */
    readonly binaryDataByIDs: {
      readonly name: "BinaryDataByIDs",
      readonly I: typeof BinaryDataByIDsRequest,
      readonly O: typeof BinaryDataByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteTabularData deletes tabular data older than a number of days, based on the given organization ID.
     *
     * @generated from rpc viam.app.data.v1.DataService.DeleteTabularData
     */
    readonly deleteTabularData: {
      readonly name: "DeleteTabularData",
      readonly I: typeof DeleteTabularDataRequest,
      readonly O: typeof DeleteTabularDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteBinaryDataByFilter deletes binary data based on given filters.
     *
     * @generated from rpc viam.app.data.v1.DataService.DeleteBinaryDataByFilter
     */
    readonly deleteBinaryDataByFilter: {
      readonly name: "DeleteBinaryDataByFilter",
      readonly I: typeof DeleteBinaryDataByFilterRequest,
      readonly O: typeof DeleteBinaryDataByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteBinaryDataByIDs deletes binary data based on given IDs.
     *
     * @generated from rpc viam.app.data.v1.DataService.DeleteBinaryDataByIDs
     */
    readonly deleteBinaryDataByIDs: {
      readonly name: "DeleteBinaryDataByIDs",
      readonly I: typeof DeleteBinaryDataByIDsRequest,
      readonly O: typeof DeleteBinaryDataByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddTagsToBinaryDataByIDs adds string tags, unless the tags are already present, to binary data based on given IDs.
     *
     * @generated from rpc viam.app.data.v1.DataService.AddTagsToBinaryDataByIDs
     */
    readonly addTagsToBinaryDataByIDs: {
      readonly name: "AddTagsToBinaryDataByIDs",
      readonly I: typeof AddTagsToBinaryDataByIDsRequest,
      readonly O: typeof AddTagsToBinaryDataByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddTagsToBinaryDataByFilter adds string tags, unless the tags are already present, to binary data based on the given filter.
     *
     * @generated from rpc viam.app.data.v1.DataService.AddTagsToBinaryDataByFilter
     */
    readonly addTagsToBinaryDataByFilter: {
      readonly name: "AddTagsToBinaryDataByFilter",
      readonly I: typeof AddTagsToBinaryDataByFilterRequest,
      readonly O: typeof AddTagsToBinaryDataByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveTagsToBinaryDataByIDs removes string tags from binary data based on given IDs.
     *
     * @generated from rpc viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByIDs
     */
    readonly removeTagsFromBinaryDataByIDs: {
      readonly name: "RemoveTagsFromBinaryDataByIDs",
      readonly I: typeof RemoveTagsFromBinaryDataByIDsRequest,
      readonly O: typeof RemoveTagsFromBinaryDataByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveTagsToBinaryDataByFilter removes string tags from binary data based on the given filter.
     *
     * @generated from rpc viam.app.data.v1.DataService.RemoveTagsFromBinaryDataByFilter
     */
    readonly removeTagsFromBinaryDataByFilter: {
      readonly name: "RemoveTagsFromBinaryDataByFilter",
      readonly I: typeof RemoveTagsFromBinaryDataByFilterRequest,
      readonly O: typeof RemoveTagsFromBinaryDataByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TagsByFilter gets all unique tags from data based on given filter.
     *
     * @generated from rpc viam.app.data.v1.DataService.TagsByFilter
     */
    readonly tagsByFilter: {
      readonly name: "TagsByFilter",
      readonly I: typeof TagsByFilterRequest,
      readonly O: typeof TagsByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddBoundingBoxToImageByID adds a bounding box to an image with the given ID.
     *
     * @generated from rpc viam.app.data.v1.DataService.AddBoundingBoxToImageByID
     */
    readonly addBoundingBoxToImageByID: {
      readonly name: "AddBoundingBoxToImageByID",
      readonly I: typeof AddBoundingBoxToImageByIDRequest,
      readonly O: typeof AddBoundingBoxToImageByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveBoundingBoxFromImageByID removes a bounding box from an image with the given ID.
     *
     * @generated from rpc viam.app.data.v1.DataService.RemoveBoundingBoxFromImageByID
     */
    readonly removeBoundingBoxFromImageByID: {
      readonly name: "RemoveBoundingBoxFromImageByID",
      readonly I: typeof RemoveBoundingBoxFromImageByIDRequest,
      readonly O: typeof RemoveBoundingBoxFromImageByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * BoundingBoxLabelsByFilter gets all string labels for bounding boxes from data based on given filter.
     *
     * @generated from rpc viam.app.data.v1.DataService.BoundingBoxLabelsByFilter
     */
    readonly boundingBoxLabelsByFilter: {
      readonly name: "BoundingBoxLabelsByFilter",
      readonly I: typeof BoundingBoxLabelsByFilterRequest,
      readonly O: typeof BoundingBoxLabelsByFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBoundingBox updates the bounding box associated with a given binary ID and bounding box ID.
     *
     * @generated from rpc viam.app.data.v1.DataService.UpdateBoundingBox
     */
    readonly updateBoundingBox: {
      readonly name: "UpdateBoundingBox",
      readonly I: typeof UpdateBoundingBoxRequest,
      readonly O: typeof UpdateBoundingBoxResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetDatabaseConnection gets a connection to access a MongoDB Atlas Data Federation instance. It
     * returns the hostname of the federated database.
     *
     * @generated from rpc viam.app.data.v1.DataService.GetDatabaseConnection
     */
    readonly getDatabaseConnection: {
      readonly name: "GetDatabaseConnection",
      readonly I: typeof GetDatabaseConnectionRequest,
      readonly O: typeof GetDatabaseConnectionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ConfigureDatabaseUser configures a database user for the Viam organization's MongoDB Atlas Data
     * Federation instance. It can also be used to reset the password of the existing database user.
     *
     * @generated from rpc viam.app.data.v1.DataService.ConfigureDatabaseUser
     */
    readonly configureDatabaseUser: {
      readonly name: "ConfigureDatabaseUser",
      readonly I: typeof ConfigureDatabaseUserRequest,
      readonly O: typeof ConfigureDatabaseUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddBinaryDataToDatasetByIDs adds the binary data with the given binary IDs to the dataset.
     *
     * @generated from rpc viam.app.data.v1.DataService.AddBinaryDataToDatasetByIDs
     */
    readonly addBinaryDataToDatasetByIDs: {
      readonly name: "AddBinaryDataToDatasetByIDs",
      readonly I: typeof AddBinaryDataToDatasetByIDsRequest,
      readonly O: typeof AddBinaryDataToDatasetByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveBinaryDataFromDatasetByIDs removes the binary data with the given binary IDs from the dataset.
     *
     * @generated from rpc viam.app.data.v1.DataService.RemoveBinaryDataFromDatasetByIDs
     */
    readonly removeBinaryDataFromDatasetByIDs: {
      readonly name: "RemoveBinaryDataFromDatasetByIDs",
      readonly I: typeof RemoveBinaryDataFromDatasetByIDsRequest,
      readonly O: typeof RemoveBinaryDataFromDatasetByIDsResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

