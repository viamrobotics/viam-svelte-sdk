// @generated by protoc-gen-connect-es v1.5.0
// @generated from file component/gantry/v1/gantry.proto (package viam.component.gantry.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetLengthsRequest, GetLengthsResponse, GetPositionRequest, GetPositionResponse, HomeRequest, HomeResponse, IsMovingRequest, IsMovingResponse, MoveToPositionRequest, MoveToPositionResponse, StopRequest, StopResponse } from "./gantry_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { DoCommandRequest, DoCommandResponse, GetGeometriesRequest, GetGeometriesResponse } from "../../../common/v1/common_pb.js";

/**
 * An GantryService services all gantries associated with a robot
 *
 * @generated from service viam.component.gantry.v1.GantryService
 */
export declare const GantryService: {
  readonly typeName: "viam.component.gantry.v1.GantryService",
  readonly methods: {
    /**
     * GetPosition gets the current position of a gantry of the underlying robot.
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.GetPosition
     */
    readonly getPosition: {
      readonly name: "GetPosition",
      readonly I: typeof GetPositionRequest,
      readonly O: typeof GetPositionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * MoveToPosition moves a gantry of the underlying robot to the requested position.
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.MoveToPosition
     */
    readonly moveToPosition: {
      readonly name: "MoveToPosition",
      readonly I: typeof MoveToPositionRequest,
      readonly O: typeof MoveToPositionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Home runs the homing sequence of a gantry and returns true once it's completed.
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.Home
     */
    readonly home: {
      readonly name: "Home",
      readonly I: typeof HomeRequest,
      readonly O: typeof HomeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetLengths gets the lengths of a gantry of the underlying robot.
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.GetLengths
     */
    readonly getLengths: {
      readonly name: "GetLengths",
      readonly I: typeof GetLengthsRequest,
      readonly O: typeof GetLengthsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Stop stops a robot's gantry
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.Stop
     */
    readonly stop: {
      readonly name: "Stop",
      readonly I: typeof StopRequest,
      readonly O: typeof StopResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * IsMoving reports if a component is in motion
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.IsMoving
     */
    readonly isMoving: {
      readonly name: "IsMoving",
      readonly I: typeof IsMovingRequest,
      readonly O: typeof IsMovingResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DoCommand sends/receives arbitrary commands
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.DoCommand
     */
    readonly doCommand: {
      readonly name: "DoCommand",
      readonly I: typeof DoCommandRequest,
      readonly O: typeof DoCommandResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetGeometries returns the geometries of the component in their current configuration
     *
     * @generated from rpc viam.component.gantry.v1.GantryService.GetGeometries
     */
    readonly getGeometries: {
      readonly name: "GetGeometries",
      readonly I: typeof GetGeometriesRequest,
      readonly O: typeof GetGeometriesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

