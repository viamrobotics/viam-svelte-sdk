// @generated by protoc-gen-es v1.10.0
// @generated from file proto/rpc/examples/echo/v1/echo.proto (package proto.rpc.examples.echo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoRequest
 */
export declare class EchoRequest extends Message<EchoRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoRequest;

  static equals(a: EchoRequest | PlainMessage<EchoRequest> | undefined, b: EchoRequest | PlainMessage<EchoRequest> | undefined): boolean;
}

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoResponse
 */
export declare class EchoResponse extends Message<EchoResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoResponse;

  static equals(a: EchoResponse | PlainMessage<EchoResponse> | undefined, b: EchoResponse | PlainMessage<EchoResponse> | undefined): boolean;
}

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoMultipleRequest
 */
export declare class EchoMultipleRequest extends Message<EchoMultipleRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoMultipleRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoMultipleRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoMultipleRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoMultipleRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoMultipleRequest;

  static equals(a: EchoMultipleRequest | PlainMessage<EchoMultipleRequest> | undefined, b: EchoMultipleRequest | PlainMessage<EchoMultipleRequest> | undefined): boolean;
}

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoMultipleResponse
 */
export declare class EchoMultipleResponse extends Message<EchoMultipleResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoMultipleResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoMultipleResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoMultipleResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoMultipleResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoMultipleResponse;

  static equals(a: EchoMultipleResponse | PlainMessage<EchoMultipleResponse> | undefined, b: EchoMultipleResponse | PlainMessage<EchoMultipleResponse> | undefined): boolean;
}

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoBiDiRequest
 */
export declare class EchoBiDiRequest extends Message<EchoBiDiRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoBiDiRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoBiDiRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoBiDiRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoBiDiRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoBiDiRequest;

  static equals(a: EchoBiDiRequest | PlainMessage<EchoBiDiRequest> | undefined, b: EchoBiDiRequest | PlainMessage<EchoBiDiRequest> | undefined): boolean;
}

/**
 * @generated from message proto.rpc.examples.echo.v1.EchoBiDiResponse
 */
export declare class EchoBiDiResponse extends Message<EchoBiDiResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<EchoBiDiResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.examples.echo.v1.EchoBiDiResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EchoBiDiResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EchoBiDiResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EchoBiDiResponse;

  static equals(a: EchoBiDiResponse | PlainMessage<EchoBiDiResponse> | undefined, b: EchoBiDiResponse | PlainMessage<EchoBiDiResponse> | undefined): boolean;
}

