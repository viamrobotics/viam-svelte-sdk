// @generated by protoc-gen-es v1.10.0
// @generated from file component/board/v1/board.proto (package viam.component.board.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum viam.component.board.v1.PowerMode
 */
export declare enum PowerMode {
  /**
   * @generated from enum value: POWER_MODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: POWER_MODE_NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * @generated from enum value: POWER_MODE_OFFLINE_DEEP = 2;
   */
  OFFLINE_DEEP = 2,
}

/**
 * @generated from message viam.component.board.v1.Status
 */
export declare class Status extends Message<Status> {
  /**
   * @generated from field: map<string, int32> analogs = 1;
   */
  analogs: { [key: string]: number };

  /**
   * @generated from field: map<string, int64> digital_interrupts = 2;
   */
  digitalInterrupts: { [key: string]: bigint };

  constructor(data?: PartialMessage<Status>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.Status";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Status;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Status;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Status;

  static equals(a: Status | PlainMessage<Status> | undefined, b: Status | PlainMessage<Status> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetGPIORequest
 */
export declare class SetGPIORequest extends Message<SetGPIORequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * @generated from field: bool high = 3;
   */
  high: boolean;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetGPIORequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetGPIORequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetGPIORequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetGPIORequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetGPIORequest;

  static equals(a: SetGPIORequest | PlainMessage<SetGPIORequest> | undefined, b: SetGPIORequest | PlainMessage<SetGPIORequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetGPIOResponse
 */
export declare class SetGPIOResponse extends Message<SetGPIOResponse> {
  constructor(data?: PartialMessage<SetGPIOResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetGPIOResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetGPIOResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetGPIOResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetGPIOResponse;

  static equals(a: SetGPIOResponse | PlainMessage<SetGPIOResponse> | undefined, b: SetGPIOResponse | PlainMessage<SetGPIOResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.GetGPIORequest
 */
export declare class GetGPIORequest extends Message<GetGPIORequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetGPIORequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.GetGPIORequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGPIORequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGPIORequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGPIORequest;

  static equals(a: GetGPIORequest | PlainMessage<GetGPIORequest> | undefined, b: GetGPIORequest | PlainMessage<GetGPIORequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.GetGPIOResponse
 */
export declare class GetGPIOResponse extends Message<GetGPIOResponse> {
  /**
   * @generated from field: bool high = 1;
   */
  high: boolean;

  constructor(data?: PartialMessage<GetGPIOResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.GetGPIOResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGPIOResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGPIOResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGPIOResponse;

  static equals(a: GetGPIOResponse | PlainMessage<GetGPIOResponse> | undefined, b: GetGPIOResponse | PlainMessage<GetGPIOResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.PWMRequest
 */
export declare class PWMRequest extends Message<PWMRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<PWMRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.PWMRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PWMRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PWMRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PWMRequest;

  static equals(a: PWMRequest | PlainMessage<PWMRequest> | undefined, b: PWMRequest | PlainMessage<PWMRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.PWMResponse
 */
export declare class PWMResponse extends Message<PWMResponse> {
  /**
   * 0-1
   *
   * @generated from field: double duty_cycle_pct = 1;
   */
  dutyCyclePct: number;

  constructor(data?: PartialMessage<PWMResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.PWMResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PWMResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PWMResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PWMResponse;

  static equals(a: PWMResponse | PlainMessage<PWMResponse> | undefined, b: PWMResponse | PlainMessage<PWMResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPWMRequest
 */
export declare class SetPWMRequest extends Message<SetPWMRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * 0-1
   *
   * @generated from field: double duty_cycle_pct = 3;
   */
  dutyCyclePct: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetPWMRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPWMRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPWMRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPWMRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPWMRequest;

  static equals(a: SetPWMRequest | PlainMessage<SetPWMRequest> | undefined, b: SetPWMRequest | PlainMessage<SetPWMRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPWMResponse
 */
export declare class SetPWMResponse extends Message<SetPWMResponse> {
  constructor(data?: PartialMessage<SetPWMResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPWMResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPWMResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPWMResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPWMResponse;

  static equals(a: SetPWMResponse | PlainMessage<SetPWMResponse> | undefined, b: SetPWMResponse | PlainMessage<SetPWMResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.PWMFrequencyRequest
 */
export declare class PWMFrequencyRequest extends Message<PWMFrequencyRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<PWMFrequencyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.PWMFrequencyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PWMFrequencyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PWMFrequencyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PWMFrequencyRequest;

  static equals(a: PWMFrequencyRequest | PlainMessage<PWMFrequencyRequest> | undefined, b: PWMFrequencyRequest | PlainMessage<PWMFrequencyRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.PWMFrequencyResponse
 */
export declare class PWMFrequencyResponse extends Message<PWMFrequencyResponse> {
  /**
   * @generated from field: uint64 frequency_hz = 1;
   */
  frequencyHz: bigint;

  constructor(data?: PartialMessage<PWMFrequencyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.PWMFrequencyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PWMFrequencyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PWMFrequencyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PWMFrequencyResponse;

  static equals(a: PWMFrequencyResponse | PlainMessage<PWMFrequencyResponse> | undefined, b: PWMFrequencyResponse | PlainMessage<PWMFrequencyResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPWMFrequencyRequest
 */
export declare class SetPWMFrequencyRequest extends Message<SetPWMFrequencyRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * @generated from field: uint64 frequency_hz = 3;
   */
  frequencyHz: bigint;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetPWMFrequencyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPWMFrequencyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPWMFrequencyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPWMFrequencyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPWMFrequencyRequest;

  static equals(a: SetPWMFrequencyRequest | PlainMessage<SetPWMFrequencyRequest> | undefined, b: SetPWMFrequencyRequest | PlainMessage<SetPWMFrequencyRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPWMFrequencyResponse
 */
export declare class SetPWMFrequencyResponse extends Message<SetPWMFrequencyResponse> {
  constructor(data?: PartialMessage<SetPWMFrequencyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPWMFrequencyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPWMFrequencyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPWMFrequencyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPWMFrequencyResponse;

  static equals(a: SetPWMFrequencyResponse | PlainMessage<SetPWMFrequencyResponse> | undefined, b: SetPWMFrequencyResponse | PlainMessage<SetPWMFrequencyResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.ReadAnalogReaderRequest
 */
export declare class ReadAnalogReaderRequest extends Message<ReadAnalogReaderRequest> {
  /**
   * @generated from field: string board_name = 1;
   */
  boardName: string;

  /**
   * @generated from field: string analog_reader_name = 2;
   */
  analogReaderName: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<ReadAnalogReaderRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.ReadAnalogReaderRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadAnalogReaderRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadAnalogReaderRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadAnalogReaderRequest;

  static equals(a: ReadAnalogReaderRequest | PlainMessage<ReadAnalogReaderRequest> | undefined, b: ReadAnalogReaderRequest | PlainMessage<ReadAnalogReaderRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.ReadAnalogReaderResponse
 */
export declare class ReadAnalogReaderResponse extends Message<ReadAnalogReaderResponse> {
  /**
   * @generated from field: int32 value = 1;
   */
  value: number;

  /**
   * @generated from field: float min_range = 2;
   */
  minRange: number;

  /**
   * @generated from field: float max_range = 3;
   */
  maxRange: number;

  /**
   * @generated from field: float step_size = 4;
   */
  stepSize: number;

  constructor(data?: PartialMessage<ReadAnalogReaderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.ReadAnalogReaderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReadAnalogReaderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReadAnalogReaderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReadAnalogReaderResponse;

  static equals(a: ReadAnalogReaderResponse | PlainMessage<ReadAnalogReaderResponse> | undefined, b: ReadAnalogReaderResponse | PlainMessage<ReadAnalogReaderResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.WriteAnalogRequest
 */
export declare class WriteAnalogRequest extends Message<WriteAnalogRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string pin = 2;
   */
  pin: string;

  /**
   * @generated from field: int32 value = 3;
   */
  value: number;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<WriteAnalogRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.WriteAnalogRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WriteAnalogRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WriteAnalogRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WriteAnalogRequest;

  static equals(a: WriteAnalogRequest | PlainMessage<WriteAnalogRequest> | undefined, b: WriteAnalogRequest | PlainMessage<WriteAnalogRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.WriteAnalogResponse
 */
export declare class WriteAnalogResponse extends Message<WriteAnalogResponse> {
  constructor(data?: PartialMessage<WriteAnalogResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.WriteAnalogResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WriteAnalogResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WriteAnalogResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WriteAnalogResponse;

  static equals(a: WriteAnalogResponse | PlainMessage<WriteAnalogResponse> | undefined, b: WriteAnalogResponse | PlainMessage<WriteAnalogResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.GetDigitalInterruptValueRequest
 */
export declare class GetDigitalInterruptValueRequest extends Message<GetDigitalInterruptValueRequest> {
  /**
   * @generated from field: string board_name = 1;
   */
  boardName: string;

  /**
   * @generated from field: string digital_interrupt_name = 2;
   */
  digitalInterruptName: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetDigitalInterruptValueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.GetDigitalInterruptValueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDigitalInterruptValueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDigitalInterruptValueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDigitalInterruptValueRequest;

  static equals(a: GetDigitalInterruptValueRequest | PlainMessage<GetDigitalInterruptValueRequest> | undefined, b: GetDigitalInterruptValueRequest | PlainMessage<GetDigitalInterruptValueRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.GetDigitalInterruptValueResponse
 */
export declare class GetDigitalInterruptValueResponse extends Message<GetDigitalInterruptValueResponse> {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;

  constructor(data?: PartialMessage<GetDigitalInterruptValueResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.GetDigitalInterruptValueResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDigitalInterruptValueResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDigitalInterruptValueResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDigitalInterruptValueResponse;

  static equals(a: GetDigitalInterruptValueResponse | PlainMessage<GetDigitalInterruptValueResponse> | undefined, b: GetDigitalInterruptValueResponse | PlainMessage<GetDigitalInterruptValueResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.StreamTicksRequest
 */
export declare class StreamTicksRequest extends Message<StreamTicksRequest> {
  /**
   * Board name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Name of digital interrupts to recieve ticks from
   *
   * @generated from field: repeated string pin_names = 2;
   */
  pinNames: string[];

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<StreamTicksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.StreamTicksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamTicksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamTicksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamTicksRequest;

  static equals(a: StreamTicksRequest | PlainMessage<StreamTicksRequest> | undefined, b: StreamTicksRequest | PlainMessage<StreamTicksRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.StreamTicksResponse
 */
export declare class StreamTicksResponse extends Message<StreamTicksResponse> {
  /**
   * name of interrupt
   *
   * @generated from field: string pin_name = 1;
   */
  pinName: string;

  /**
   * Time in nanoseconds of a tick
   *
   * @generated from field: uint64 time = 2;
   */
  time: bigint;

  /**
   * Value high or low of the tick
   *
   * @generated from field: bool high = 3;
   */
  high: boolean;

  constructor(data?: PartialMessage<StreamTicksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.StreamTicksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamTicksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamTicksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamTicksResponse;

  static equals(a: StreamTicksResponse | PlainMessage<StreamTicksResponse> | undefined, b: StreamTicksResponse | PlainMessage<StreamTicksResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPowerModeRequest
 */
export declare class SetPowerModeRequest extends Message<SetPowerModeRequest> {
  /**
   * name of board
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Requested power mode
   *
   * @generated from field: viam.component.board.v1.PowerMode power_mode = 2;
   */
  powerMode: PowerMode;

  /**
   * Requested duration to stay in `power_mode`
   *
   * @generated from field: optional google.protobuf.Duration duration = 3;
   */
  duration?: Duration;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<SetPowerModeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPowerModeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPowerModeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPowerModeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPowerModeRequest;

  static equals(a: SetPowerModeRequest | PlainMessage<SetPowerModeRequest> | undefined, b: SetPowerModeRequest | PlainMessage<SetPowerModeRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.board.v1.SetPowerModeResponse
 */
export declare class SetPowerModeResponse extends Message<SetPowerModeResponse> {
  constructor(data?: PartialMessage<SetPowerModeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.board.v1.SetPowerModeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPowerModeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPowerModeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPowerModeResponse;

  static equals(a: SetPowerModeResponse | PlainMessage<SetPowerModeResponse> | undefined, b: SetPowerModeResponse | PlainMessage<SetPowerModeResponse> | undefined): boolean;
}

