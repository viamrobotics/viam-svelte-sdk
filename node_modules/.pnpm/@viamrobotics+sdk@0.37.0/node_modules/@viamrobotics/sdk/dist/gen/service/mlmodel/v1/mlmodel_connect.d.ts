// @generated by protoc-gen-connect-es v1.5.0
// @generated from file service/mlmodel/v1/mlmodel.proto (package viam.service.mlmodel.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InferRequest, InferResponse, MetadataRequest, MetadataResponse } from "./mlmodel_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * MLModelService declares the gRPC contract for a service that takes in a map of input arrays/tensors,
 * runs them through an ML inference engine, and outputs a map of array/tensors.
 *
 * @generated from service viam.service.mlmodel.v1.MLModelService
 */
export declare const MLModelService: {
  readonly typeName: "viam.service.mlmodel.v1.MLModelService",
  readonly methods: {
    /**
     * Infer takes an already ordered input tensor as a map, makes an inference on the model, and returns an output data map.
     *
     * @generated from rpc viam.service.mlmodel.v1.MLModelService.Infer
     */
    readonly infer: {
      readonly name: "Infer",
      readonly I: typeof InferRequest,
      readonly O: typeof InferResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Metadata returns the metadata associated with the ML model.
     *
     * @generated from rpc viam.service.mlmodel.v1.MLModelService.Metadata
     */
    readonly metadata: {
      readonly name: "Metadata",
      readonly I: typeof MetadataRequest,
      readonly O: typeof MetadataResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

