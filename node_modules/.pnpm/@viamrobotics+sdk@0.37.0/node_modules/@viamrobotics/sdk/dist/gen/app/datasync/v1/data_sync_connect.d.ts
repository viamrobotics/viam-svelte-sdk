// @generated by protoc-gen-connect-es v1.5.0
// @generated from file app/datasync/v1/data_sync.proto (package viam.app.datasync.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DataCaptureUploadRequest, DataCaptureUploadResponse, FileUploadRequest, FileUploadResponse, StreamingDataCaptureUploadRequest, StreamingDataCaptureUploadResponse } from "./data_sync_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service viam.app.datasync.v1.DataSyncService
 */
export declare const DataSyncService: {
  readonly typeName: "viam.app.datasync.v1.DataSyncService",
  readonly methods: {
    /**
     * DataCaptureUpload uploads the contents and metadata for tabular data.
     *
     * @generated from rpc viam.app.datasync.v1.DataSyncService.DataCaptureUpload
     */
    readonly dataCaptureUpload: {
      readonly name: "DataCaptureUpload",
      readonly I: typeof DataCaptureUploadRequest,
      readonly O: typeof DataCaptureUploadResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * FileUpload uploads the contents and metadata for binary (image + file) data,
     * where the first packet must be the UploadMetadata.
     *
     * @generated from rpc viam.app.datasync.v1.DataSyncService.FileUpload
     */
    readonly fileUpload: {
      readonly name: "FileUpload",
      readonly I: typeof FileUploadRequest,
      readonly O: typeof FileUploadResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
    /**
     * StreamingDataCaptureUpload uploads the streaming contents and metadata for streaming binary (image + file) data,
     * where the first packet must be the UploadMetadata.
     *
     * @generated from rpc viam.app.datasync.v1.DataSyncService.StreamingDataCaptureUpload
     */
    readonly streamingDataCaptureUpload: {
      readonly name: "StreamingDataCaptureUpload",
      readonly I: typeof StreamingDataCaptureUploadRequest,
      readonly O: typeof StreamingDataCaptureUploadResponse,
      readonly kind: MethodKind.ClientStreaming,
    },
  }
};

