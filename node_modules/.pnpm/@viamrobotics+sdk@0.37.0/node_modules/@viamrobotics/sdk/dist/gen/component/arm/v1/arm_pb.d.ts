// @generated by protoc-gen-es v1.10.0
// @generated from file component/arm/v1/arm.proto (package viam.component.arm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Pose } from "../../../common/v1/common_pb.js";

/**
 * @generated from message viam.component.arm.v1.GetEndPositionRequest
 */
export declare class GetEndPositionRequest extends Message<GetEndPositionRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetEndPositionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.GetEndPositionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEndPositionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEndPositionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEndPositionRequest;

  static equals(a: GetEndPositionRequest | PlainMessage<GetEndPositionRequest> | undefined, b: GetEndPositionRequest | PlainMessage<GetEndPositionRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.GetEndPositionResponse
 */
export declare class GetEndPositionResponse extends Message<GetEndPositionResponse> {
  /**
   * Returns 6d pose of the end effector relative to the base, represented by X,Y,Z coordinates which express
   * millimeters and theta, ox, oy, oz coordinates which express an orientation vector
   *
   * @generated from field: viam.common.v1.Pose pose = 1;
   */
  pose?: Pose;

  constructor(data?: PartialMessage<GetEndPositionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.GetEndPositionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEndPositionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEndPositionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEndPositionResponse;

  static equals(a: GetEndPositionResponse | PlainMessage<GetEndPositionResponse> | undefined, b: GetEndPositionResponse | PlainMessage<GetEndPositionResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.JointPositions
 */
export declare class JointPositions extends Message<JointPositions> {
  /**
   * A list of joint positions. Rotations values are in degrees, translational values in mm.
   * There should be 1 entry in the list per joint DOF, ordered spatially from the base toward the end effector of the arm
   *
   * @generated from field: repeated double values = 1;
   */
  values: number[];

  constructor(data?: PartialMessage<JointPositions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.JointPositions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JointPositions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JointPositions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JointPositions;

  static equals(a: JointPositions | PlainMessage<JointPositions> | undefined, b: JointPositions | PlainMessage<JointPositions> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.GetJointPositionsRequest
 */
export declare class GetJointPositionsRequest extends Message<GetJointPositionsRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<GetJointPositionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.GetJointPositionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJointPositionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJointPositionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJointPositionsRequest;

  static equals(a: GetJointPositionsRequest | PlainMessage<GetJointPositionsRequest> | undefined, b: GetJointPositionsRequest | PlainMessage<GetJointPositionsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.GetJointPositionsResponse
 */
export declare class GetJointPositionsResponse extends Message<GetJointPositionsResponse> {
  /**
   * a list JointPositions
   *
   * @generated from field: viam.component.arm.v1.JointPositions positions = 1;
   */
  positions?: JointPositions;

  constructor(data?: PartialMessage<GetJointPositionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.GetJointPositionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJointPositionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJointPositionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJointPositionsResponse;

  static equals(a: GetJointPositionsResponse | PlainMessage<GetJointPositionsResponse> | undefined, b: GetJointPositionsResponse | PlainMessage<GetJointPositionsResponse> | undefined): boolean;
}

/**
 * Moves an arm to the specified pose that is within the reference frame of the arm.
 * Move request in Motion API has the same behavior except that it performs obstacle avoidance when a world_state
 * message is specified.
 *
 * @generated from message viam.component.arm.v1.MoveToPositionRequest
 */
export declare class MoveToPositionRequest extends Message<MoveToPositionRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The destination to move the arm to; this is from the reference frame of the arm.
   *
   * @generated from field: viam.common.v1.Pose to = 2;
   */
  to?: Pose;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<MoveToPositionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveToPositionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveToPositionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveToPositionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveToPositionRequest;

  static equals(a: MoveToPositionRequest | PlainMessage<MoveToPositionRequest> | undefined, b: MoveToPositionRequest | PlainMessage<MoveToPositionRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveToPositionResponse
 */
export declare class MoveToPositionResponse extends Message<MoveToPositionResponse> {
  constructor(data?: PartialMessage<MoveToPositionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveToPositionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveToPositionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveToPositionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveToPositionResponse;

  static equals(a: MoveToPositionResponse | PlainMessage<MoveToPositionResponse> | undefined, b: MoveToPositionResponse | PlainMessage<MoveToPositionResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveToJointPositionsRequest
 */
export declare class MoveToJointPositionsRequest extends Message<MoveToJointPositionsRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of joint positions
   * There should be 1 entry in the list per joint DOF, ordered spatially from the base toward the end effector
   *
   * @generated from field: viam.component.arm.v1.JointPositions positions = 2;
   */
  positions?: JointPositions;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<MoveToJointPositionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveToJointPositionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveToJointPositionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveToJointPositionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveToJointPositionsRequest;

  static equals(a: MoveToJointPositionsRequest | PlainMessage<MoveToJointPositionsRequest> | undefined, b: MoveToJointPositionsRequest | PlainMessage<MoveToJointPositionsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveToJointPositionsResponse
 */
export declare class MoveToJointPositionsResponse extends Message<MoveToJointPositionsResponse> {
  constructor(data?: PartialMessage<MoveToJointPositionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveToJointPositionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveToJointPositionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveToJointPositionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveToJointPositionsResponse;

  static equals(a: MoveToJointPositionsResponse | PlainMessage<MoveToJointPositionsResponse> | undefined, b: MoveToJointPositionsResponse | PlainMessage<MoveToJointPositionsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveThroughJointPositionsRequest
 */
export declare class MoveThroughJointPositionsRequest extends Message<MoveThroughJointPositionsRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A list of joint positions which will be moved to in the order they are specified
   *
   * @generated from field: repeated viam.component.arm.v1.JointPositions positions = 2;
   */
  positions: JointPositions[];

  /**
   * optional specifications to be obeyed during the motion
   *
   * @generated from field: optional viam.component.arm.v1.MoveOptions options = 3;
   */
  options?: MoveOptions;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<MoveThroughJointPositionsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveThroughJointPositionsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveThroughJointPositionsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveThroughJointPositionsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveThroughJointPositionsRequest;

  static equals(a: MoveThroughJointPositionsRequest | PlainMessage<MoveThroughJointPositionsRequest> | undefined, b: MoveThroughJointPositionsRequest | PlainMessage<MoveThroughJointPositionsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveThroughJointPositionsResponse
 */
export declare class MoveThroughJointPositionsResponse extends Message<MoveThroughJointPositionsResponse> {
  constructor(data?: PartialMessage<MoveThroughJointPositionsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveThroughJointPositionsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveThroughJointPositionsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveThroughJointPositionsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveThroughJointPositionsResponse;

  static equals(a: MoveThroughJointPositionsResponse | PlainMessage<MoveThroughJointPositionsResponse> | undefined, b: MoveThroughJointPositionsResponse | PlainMessage<MoveThroughJointPositionsResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.StopRequest
 */
export declare class StopRequest extends Message<StopRequest> {
  /**
   * Name of an arm
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Additional arguments to the method
   *
   * @generated from field: google.protobuf.Struct extra = 99;
   */
  extra?: Struct;

  constructor(data?: PartialMessage<StopRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.StopRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopRequest;

  static equals(a: StopRequest | PlainMessage<StopRequest> | undefined, b: StopRequest | PlainMessage<StopRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.StopResponse
 */
export declare class StopResponse extends Message<StopResponse> {
  constructor(data?: PartialMessage<StopResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.StopResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopResponse;

  static equals(a: StopResponse | PlainMessage<StopResponse> | undefined, b: StopResponse | PlainMessage<StopResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.Status
 */
export declare class Status extends Message<Status> {
  /**
   * @generated from field: viam.common.v1.Pose end_position = 1;
   */
  endPosition?: Pose;

  /**
   * @generated from field: viam.component.arm.v1.JointPositions joint_positions = 2;
   */
  jointPositions?: JointPositions;

  /**
   * @generated from field: bool is_moving = 3;
   */
  isMoving: boolean;

  constructor(data?: PartialMessage<Status>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.Status";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Status;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Status;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Status;

  static equals(a: Status | PlainMessage<Status> | undefined, b: Status | PlainMessage<Status> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.IsMovingRequest
 */
export declare class IsMovingRequest extends Message<IsMovingRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<IsMovingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.IsMovingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsMovingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsMovingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsMovingRequest;

  static equals(a: IsMovingRequest | PlainMessage<IsMovingRequest> | undefined, b: IsMovingRequest | PlainMessage<IsMovingRequest> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.IsMovingResponse
 */
export declare class IsMovingResponse extends Message<IsMovingResponse> {
  /**
   * @generated from field: bool is_moving = 1;
   */
  isMoving: boolean;

  constructor(data?: PartialMessage<IsMovingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.IsMovingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IsMovingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IsMovingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IsMovingResponse;

  static equals(a: IsMovingResponse | PlainMessage<IsMovingResponse> | undefined, b: IsMovingResponse | PlainMessage<IsMovingResponse> | undefined): boolean;
}

/**
 * @generated from message viam.component.arm.v1.MoveOptions
 */
export declare class MoveOptions extends Message<MoveOptions> {
  /**
   * Maximum allowable velocity of an arm joint, in degrees per second
   *
   * @generated from field: optional double max_vel_degs_per_sec = 1;
   */
  maxVelDegsPerSec?: number;

  /**
   * Maximum allowable acceleration of an arm joint, in degrees per second squared
   *
   * @generated from field: optional double max_acc_degs_per_sec2 = 2;
   */
  maxAccDegsPerSec2?: number;

  constructor(data?: PartialMessage<MoveOptions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.component.arm.v1.MoveOptions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoveOptions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoveOptions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoveOptions;

  static equals(a: MoveOptions | PlainMessage<MoveOptions> | undefined, b: MoveOptions | PlainMessage<MoveOptions> | undefined): boolean;
}

