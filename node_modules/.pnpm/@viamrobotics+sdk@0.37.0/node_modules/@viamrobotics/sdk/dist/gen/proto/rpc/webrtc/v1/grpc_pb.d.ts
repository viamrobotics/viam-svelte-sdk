// @generated by protoc-gen-es v1.10.0
// @generated from file proto/rpc/webrtc/v1/grpc.proto (package proto.rpc.webrtc.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Status } from "../../../../google/rpc/status_pb.js";

/**
 * A PacketMessage is used to packetize large messages (> 64KiB) to be able to safely
 * transmit over WebRTC data channels.
 *
 * @generated from message proto.rpc.webrtc.v1.PacketMessage
 */
export declare class PacketMessage extends Message<PacketMessage> {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: bool eom = 2;
   */
  eom: boolean;

  constructor(data?: PartialMessage<PacketMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.PacketMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PacketMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PacketMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PacketMessage;

  static equals(a: PacketMessage | PlainMessage<PacketMessage> | undefined, b: PacketMessage | PlainMessage<PacketMessage> | undefined): boolean;
}

/**
 * A Stream represents an instance of a gRPC stream between
 * a client and a server.
 *
 * @generated from message proto.rpc.webrtc.v1.Stream
 */
export declare class Stream extends Message<Stream> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  constructor(data?: PartialMessage<Stream>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.Stream";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stream;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stream;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stream;

  static equals(a: Stream | PlainMessage<Stream> | undefined, b: Stream | PlainMessage<Stream> | undefined): boolean;
}

/**
 * A Request is a frame coming from a client. It is always
 * associated with a stream where the client assigns the stream
 * identifier. Servers will drop frames where the stream identifier
 * has no association (if a non-header frames are sent).
 *
 * @generated from message proto.rpc.webrtc.v1.Request
 */
export declare class Request extends Message<Request> {
  /**
   * @generated from field: proto.rpc.webrtc.v1.Stream stream = 1;
   */
  stream?: Stream;

  /**
   * @generated from oneof proto.rpc.webrtc.v1.Request.type
   */
  type: {
    /**
     * @generated from field: proto.rpc.webrtc.v1.RequestHeaders headers = 2;
     */
    value: RequestHeaders;
    case: "headers";
  } | {
    /**
     * @generated from field: proto.rpc.webrtc.v1.RequestMessage message = 3;
     */
    value: RequestMessage;
    case: "message";
  } | {
    /**
     * @generated from field: bool rst_stream = 4;
     */
    value: boolean;
    case: "rstStream";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Request;

  static equals(a: Request | PlainMessage<Request> | undefined, b: Request | PlainMessage<Request> | undefined): boolean;
}

/**
 * RequestHeaders describe the unary or streaming call to make.
 *
 * @generated from message proto.rpc.webrtc.v1.RequestHeaders
 */
export declare class RequestHeaders extends Message<RequestHeaders> {
  /**
   * @generated from field: string method = 1;
   */
  method: string;

  /**
   * @generated from field: proto.rpc.webrtc.v1.Metadata metadata = 2;
   */
  metadata?: Metadata;

  /**
   * @generated from field: google.protobuf.Duration timeout = 3;
   */
  timeout?: Duration;

  constructor(data?: PartialMessage<RequestHeaders>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.RequestHeaders";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestHeaders;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestHeaders;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestHeaders;

  static equals(a: RequestHeaders | PlainMessage<RequestHeaders> | undefined, b: RequestHeaders | PlainMessage<RequestHeaders> | undefined): boolean;
}

/**
 * A RequestMessage contains individual gRPC messages and a potential
 * end-of-stream (EOS) marker.
 *
 * @generated from message proto.rpc.webrtc.v1.RequestMessage
 */
export declare class RequestMessage extends Message<RequestMessage> {
  /**
   * @generated from field: bool has_message = 1;
   */
  hasMessage: boolean;

  /**
   * @generated from field: proto.rpc.webrtc.v1.PacketMessage packet_message = 2;
   */
  packetMessage?: PacketMessage;

  /**
   * @generated from field: bool eos = 3;
   */
  eos: boolean;

  constructor(data?: PartialMessage<RequestMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.RequestMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestMessage;

  static equals(a: RequestMessage | PlainMessage<RequestMessage> | undefined, b: RequestMessage | PlainMessage<RequestMessage> | undefined): boolean;
}

/**
 * A Response is a frame coming from a server. It is always
 * associated with a stream where the client assigns the stream
 * identifier. Clients will drop frames where the stream identifier
 * has no association.
 *
 * @generated from message proto.rpc.webrtc.v1.Response
 */
export declare class Response extends Message<Response> {
  /**
   * @generated from field: proto.rpc.webrtc.v1.Stream stream = 1;
   */
  stream?: Stream;

  /**
   * @generated from oneof proto.rpc.webrtc.v1.Response.type
   */
  type: {
    /**
     * @generated from field: proto.rpc.webrtc.v1.ResponseHeaders headers = 2;
     */
    value: ResponseHeaders;
    case: "headers";
  } | {
    /**
     * @generated from field: proto.rpc.webrtc.v1.ResponseMessage message = 3;
     */
    value: ResponseMessage;
    case: "message";
  } | {
    /**
     * @generated from field: proto.rpc.webrtc.v1.ResponseTrailers trailers = 4;
     */
    value: ResponseTrailers;
    case: "trailers";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Response;

  static equals(a: Response | PlainMessage<Response> | undefined, b: Response | PlainMessage<Response> | undefined): boolean;
}

/**
 * ResponseHeaders contain custom metadata that are sent to the client
 * before any message or trailers (unless only trailers are sent).
 *
 * @generated from message proto.rpc.webrtc.v1.ResponseHeaders
 */
export declare class ResponseHeaders extends Message<ResponseHeaders> {
  /**
   * @generated from field: proto.rpc.webrtc.v1.Metadata metadata = 1;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<ResponseHeaders>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.ResponseHeaders";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseHeaders;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseHeaders;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseHeaders;

  static equals(a: ResponseHeaders | PlainMessage<ResponseHeaders> | undefined, b: ResponseHeaders | PlainMessage<ResponseHeaders> | undefined): boolean;
}

/**
 * ResponseMessage contains the data of a response to a call.
 *
 * @generated from message proto.rpc.webrtc.v1.ResponseMessage
 */
export declare class ResponseMessage extends Message<ResponseMessage> {
  /**
   * @generated from field: proto.rpc.webrtc.v1.PacketMessage packet_message = 1;
   */
  packetMessage?: PacketMessage;

  constructor(data?: PartialMessage<ResponseMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.ResponseMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseMessage;

  static equals(a: ResponseMessage | PlainMessage<ResponseMessage> | undefined, b: ResponseMessage | PlainMessage<ResponseMessage> | undefined): boolean;
}

/**
 * ResponseTrailers contain the status of a response and any custom metadata.
 *
 * @generated from message proto.rpc.webrtc.v1.ResponseTrailers
 */
export declare class ResponseTrailers extends Message<ResponseTrailers> {
  /**
   * @generated from field: google.rpc.Status status = 1;
   */
  status?: Status;

  /**
   * @generated from field: proto.rpc.webrtc.v1.Metadata metadata = 2;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<ResponseTrailers>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.ResponseTrailers";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseTrailers;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseTrailers;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseTrailers;

  static equals(a: ResponseTrailers | PlainMessage<ResponseTrailers> | undefined, b: ResponseTrailers | PlainMessage<ResponseTrailers> | undefined): boolean;
}

/**
 * Strings are a series of values.
 *
 * @generated from message proto.rpc.webrtc.v1.Strings
 */
export declare class Strings extends Message<Strings> {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  constructor(data?: PartialMessage<Strings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.Strings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Strings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Strings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Strings;

  static equals(a: Strings | PlainMessage<Strings> | undefined, b: Strings | PlainMessage<Strings> | undefined): boolean;
}

/**
 * Metadata is for custom key values provided by a client or server
 * during a stream.
 *
 * @generated from message proto.rpc.webrtc.v1.Metadata
 */
export declare class Metadata extends Message<Metadata> {
  /**
   * @generated from field: map<string, proto.rpc.webrtc.v1.Strings> md = 1;
   */
  md: { [key: string]: Strings };

  constructor(data?: PartialMessage<Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "proto.rpc.webrtc.v1.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metadata;

  static equals(a: Metadata | PlainMessage<Metadata> | undefined, b: Metadata | PlainMessage<Metadata> | undefined): boolean;
}

