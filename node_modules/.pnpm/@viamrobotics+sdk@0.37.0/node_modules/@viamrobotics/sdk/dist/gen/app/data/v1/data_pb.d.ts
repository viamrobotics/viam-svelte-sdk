// @generated by protoc-gen-es v1.10.0
// @generated from file app/data/v1/data.proto (package viam.app.data.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { Any, BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Order specifies the order in which data is returned.
 *
 * @generated from enum viam.app.data.v1.Order
 */
export declare enum Order {
  /**
   * @generated from enum value: ORDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORDER_DESCENDING = 1;
   */
  DESCENDING = 1,

  /**
   * @generated from enum value: ORDER_ASCENDING = 2;
   */
  ASCENDING = 2,
}

/**
 * TagsFilterType specifies how data can be filtered based on tags.
 *
 * @generated from enum viam.app.data.v1.TagsFilterType
 */
export declare enum TagsFilterType {
  /**
   * @generated from enum value: TAGS_FILTER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * TAGS_FILTER_TYPE_MATCH_BY_OR specifies documents matched (using logical OR) on the tags field in the TagsFilter.
   *
   * @generated from enum value: TAGS_FILTER_TYPE_MATCH_BY_OR = 1;
   */
  MATCH_BY_OR = 1,

  /**
   * TAGS_FILTER_TYPE_TAGGED specifies that all tagged documents should be returned.
   *
   * @generated from enum value: TAGS_FILTER_TYPE_TAGGED = 2;
   */
  TAGGED = 2,

  /**
   * TAGS_FILTER_TYPE_UNTAGGED specifes that all untagged documents should be returned.
   *
   * @generated from enum value: TAGS_FILTER_TYPE_UNTAGGED = 3;
   */
  UNTAGGED = 3,
}

/**
 * DataRequest encapsulates the filter for the data, a limit on the maximum results returned,
 * a last string associated with the last returned document, and the sorting order by time.
 * last is returned in the responses TabularDataByFilterResponse and BinaryDataByFilterResponse
 * from the API calls TabularDataByFilter and BinaryDataByFilter, respectively.
 * We can then use the last string from the previous API calls in the subsequent request
 * to get the next set of ordered documents.
 *
 * @generated from message viam.app.data.v1.DataRequest
 */
export declare class DataRequest extends Message<DataRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  /**
   * @generated from field: uint64 limit = 2;
   */
  limit: bigint;

  /**
   * @generated from field: string last = 3;
   */
  last: string;

  /**
   * @generated from field: viam.app.data.v1.Order sort_order = 4;
   */
  sortOrder: Order;

  constructor(data?: PartialMessage<DataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequest;

  static equals(a: DataRequest | PlainMessage<DataRequest> | undefined, b: DataRequest | PlainMessage<DataRequest> | undefined): boolean;
}

/**
 * Filter defines the fields over which we can filter data using a logic AND.
 * For example, if component_type and robot_id are specified, only data from that `robot_id` of
 * type `component_type` is returned. However, we logical OR over the specified tags and bounding
 * box labels, such that if component_type, robot_id, tagA, tagB are specified,
 * we return data from that `robot_id` of type `component_type` with `tagA` or `tagB`.
 *
 * @generated from message viam.app.data.v1.Filter
 */
export declare class Filter extends Message<Filter> {
  /**
   * @generated from field: string component_name = 1;
   */
  componentName: string;

  /**
   * @generated from field: string component_type = 2;
   */
  componentType: string;

  /**
   * @generated from field: string method = 4;
   */
  method: string;

  /**
   * @generated from field: string robot_name = 6;
   */
  robotName: string;

  /**
   * @generated from field: string robot_id = 7;
   */
  robotId: string;

  /**
   * @generated from field: string part_name = 8;
   */
  partName: string;

  /**
   * @generated from field: string part_id = 9;
   */
  partId: string;

  /**
   * @generated from field: repeated string location_ids = 10;
   */
  locationIds: string[];

  /**
   * @generated from field: repeated string organization_ids = 11;
   */
  organizationIds: string[];

  /**
   * @generated from field: repeated string mime_type = 12;
   */
  mimeType: string[];

  /**
   * @generated from field: viam.app.data.v1.CaptureInterval interval = 13;
   */
  interval?: CaptureInterval;

  /**
   * @generated from field: viam.app.data.v1.TagsFilter tags_filter = 14;
   */
  tagsFilter?: TagsFilter;

  /**
   * bbox_labels are used to match documents with the specified bounding box labels (using logical OR).
   *
   * @generated from field: repeated string bbox_labels = 15;
   */
  bboxLabels: string[];

  /**
   * @generated from field: string dataset_id = 16;
   */
  datasetId: string;

  constructor(data?: PartialMessage<Filter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.Filter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filter;

  static equals(a: Filter | PlainMessage<Filter> | undefined, b: Filter | PlainMessage<Filter> | undefined): boolean;
}

/**
 * TagsFilter defines the type of filtering and, if applicable, over which tags to perform a logical OR.
 *
 * @generated from message viam.app.data.v1.TagsFilter
 */
export declare class TagsFilter extends Message<TagsFilter> {
  /**
   * @generated from field: viam.app.data.v1.TagsFilterType type = 1;
   */
  type: TagsFilterType;

  /**
   * Tags are used to match documents if `type` is UNSPECIFIED or MATCH_BY_OR.
   *
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  constructor(data?: PartialMessage<TagsFilter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TagsFilter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TagsFilter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TagsFilter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TagsFilter;

  static equals(a: TagsFilter | PlainMessage<TagsFilter> | undefined, b: TagsFilter | PlainMessage<TagsFilter> | undefined): boolean;
}

/**
 * CaptureMetadata contains information on the settings used for the data capture.
 *
 * @generated from message viam.app.data.v1.CaptureMetadata
 */
export declare class CaptureMetadata extends Message<CaptureMetadata> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string location_id = 2;
   */
  locationId: string;

  /**
   * @generated from field: string robot_name = 3;
   */
  robotName: string;

  /**
   * @generated from field: string robot_id = 4;
   */
  robotId: string;

  /**
   * @generated from field: string part_name = 5;
   */
  partName: string;

  /**
   * @generated from field: string part_id = 6;
   */
  partId: string;

  /**
   * @generated from field: string component_type = 7;
   */
  componentType: string;

  /**
   * @generated from field: string component_name = 9;
   */
  componentName: string;

  /**
   * @generated from field: string method_name = 10;
   */
  methodName: string;

  /**
   * @generated from field: map<string, google.protobuf.Any> method_parameters = 11;
   */
  methodParameters: { [key: string]: Any };

  /**
   * @generated from field: repeated string tags = 12;
   */
  tags: string[];

  /**
   * @generated from field: string mime_type = 13;
   */
  mimeType: string;

  constructor(data?: PartialMessage<CaptureMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.CaptureMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureMetadata;

  static equals(a: CaptureMetadata | PlainMessage<CaptureMetadata> | undefined, b: CaptureMetadata | PlainMessage<CaptureMetadata> | undefined): boolean;
}

/**
 * CaptureInterval describes the start and end time of the capture in this file.
 *
 * @generated from message viam.app.data.v1.CaptureInterval
 */
export declare class CaptureInterval extends Message<CaptureInterval> {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  constructor(data?: PartialMessage<CaptureInterval>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.CaptureInterval";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CaptureInterval;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CaptureInterval;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CaptureInterval;

  static equals(a: CaptureInterval | PlainMessage<CaptureInterval> | undefined, b: CaptureInterval | PlainMessage<CaptureInterval> | undefined): boolean;
}

/**
 * TabularDataByFilterRequest requests tabular data based on filter values.
 *
 * @generated from message viam.app.data.v1.TabularDataByFilterRequest
 * @deprecated
 */
export declare class TabularDataByFilterRequest extends Message<TabularDataByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.DataRequest data_request = 1;
   */
  dataRequest?: DataRequest;

  /**
   * @generated from field: bool count_only = 2;
   */
  countOnly: boolean;

  /**
   * @generated from field: bool include_internal_data = 3;
   */
  includeInternalData: boolean;

  constructor(data?: PartialMessage<TabularDataByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataByFilterRequest;

  static equals(a: TabularDataByFilterRequest | PlainMessage<TabularDataByFilterRequest> | undefined, b: TabularDataByFilterRequest | PlainMessage<TabularDataByFilterRequest> | undefined): boolean;
}

/**
 * TabularDataByFilterResponse provides the data and metadata of tabular data.
 *
 * @generated from message viam.app.data.v1.TabularDataByFilterResponse
 * @deprecated
 */
export declare class TabularDataByFilterResponse extends Message<TabularDataByFilterResponse> {
  /**
   * @generated from field: repeated viam.app.data.v1.CaptureMetadata metadata = 1;
   */
  metadata: CaptureMetadata[];

  /**
   * @generated from field: repeated viam.app.data.v1.TabularData data = 2;
   */
  data: TabularData[];

  /**
   * @generated from field: uint64 count = 3;
   */
  count: bigint;

  /**
   * @generated from field: string last = 4;
   */
  last: string;

  /**
   * @generated from field: uint64 total_size_bytes = 5;
   */
  totalSizeBytes: bigint;

  constructor(data?: PartialMessage<TabularDataByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataByFilterResponse;

  static equals(a: TabularDataByFilterResponse | PlainMessage<TabularDataByFilterResponse> | undefined, b: TabularDataByFilterResponse | PlainMessage<TabularDataByFilterResponse> | undefined): boolean;
}

/**
 * TabularData contains data and metadata associated with tabular data.
 *
 * @generated from message viam.app.data.v1.TabularData
 * @deprecated
 */
export declare class TabularData extends Message<TabularData> {
  /**
   * @generated from field: google.protobuf.Struct data = 1;
   */
  data?: Struct;

  /**
   * @generated from field: uint32 metadata_index = 2;
   */
  metadataIndex: number;

  /**
   * @generated from field: google.protobuf.Timestamp time_requested = 3;
   */
  timeRequested?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp time_received = 4;
   */
  timeReceived?: Timestamp;

  constructor(data?: PartialMessage<TabularData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularData;

  static equals(a: TabularData | PlainMessage<TabularData> | undefined, b: TabularData | PlainMessage<TabularData> | undefined): boolean;
}

/**
 * TabularDataBySQLRequest requests tabular data using a SQL query.
 *
 * @generated from message viam.app.data.v1.TabularDataBySQLRequest
 */
export declare class TabularDataBySQLRequest extends Message<TabularDataBySQLRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * sql_query accepts any valid SQL SELECT statement. Tabular data is held in a database
   * called "sensorData" and a table called readings, so queries should select from "readings"
   * or "sensorData.readings".
   *
   * @generated from field: string sql_query = 2;
   */
  sqlQuery: string;

  constructor(data?: PartialMessage<TabularDataBySQLRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataBySQLRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataBySQLRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataBySQLRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataBySQLRequest;

  static equals(a: TabularDataBySQLRequest | PlainMessage<TabularDataBySQLRequest> | undefined, b: TabularDataBySQLRequest | PlainMessage<TabularDataBySQLRequest> | undefined): boolean;
}

/**
 * TabularDataBySQLResponse provides unified tabular data and metadata, queried with SQL.
 *
 * @generated from message viam.app.data.v1.TabularDataBySQLResponse
 */
export declare class TabularDataBySQLResponse extends Message<TabularDataBySQLResponse> {
  /**
   * @generated from field: repeated bytes raw_data = 2;
   */
  rawData: Uint8Array[];

  constructor(data?: PartialMessage<TabularDataBySQLResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataBySQLResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataBySQLResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataBySQLResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataBySQLResponse;

  static equals(a: TabularDataBySQLResponse | PlainMessage<TabularDataBySQLResponse> | undefined, b: TabularDataBySQLResponse | PlainMessage<TabularDataBySQLResponse> | undefined): boolean;
}

/**
 * TabularDataByMQLRequest requests tabular data using an MQL query.
 *
 * @generated from message viam.app.data.v1.TabularDataByMQLRequest
 */
export declare class TabularDataByMQLRequest extends Message<TabularDataByMQLRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * mql_binary accepts a MongoDB aggregation pipeline as a list of BSON documents, where each
   * document is one stage in the pipeline. The pipeline is run on the "sensorData.readings"
   * namespace, which holds the Viam organization's tabular data.
   *
   * @generated from field: repeated bytes mql_binary = 3;
   */
  mqlBinary: Uint8Array[];

  /**
   * @generated from field: optional bool use_recent_data = 4;
   */
  useRecentData?: boolean;

  constructor(data?: PartialMessage<TabularDataByMQLRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataByMQLRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataByMQLRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataByMQLRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataByMQLRequest;

  static equals(a: TabularDataByMQLRequest | PlainMessage<TabularDataByMQLRequest> | undefined, b: TabularDataByMQLRequest | PlainMessage<TabularDataByMQLRequest> | undefined): boolean;
}

/**
 * TabularDataByMQLResponse provides unified tabular data and metadata, queried with MQL.
 *
 * @generated from message viam.app.data.v1.TabularDataByMQLResponse
 */
export declare class TabularDataByMQLResponse extends Message<TabularDataByMQLResponse> {
  /**
   * @generated from field: repeated bytes raw_data = 2;
   */
  rawData: Uint8Array[];

  constructor(data?: PartialMessage<TabularDataByMQLResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TabularDataByMQLResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TabularDataByMQLResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TabularDataByMQLResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TabularDataByMQLResponse;

  static equals(a: TabularDataByMQLResponse | PlainMessage<TabularDataByMQLResponse> | undefined, b: TabularDataByMQLResponse | PlainMessage<TabularDataByMQLResponse> | undefined): boolean;
}

/**
 * ExportTabularDataRequest requests tabular data from the specified data source.
 *
 * @generated from message viam.app.data.v1.ExportTabularDataRequest
 */
export declare class ExportTabularDataRequest extends Message<ExportTabularDataRequest> {
  /**
   * @generated from field: string part_id = 1;
   */
  partId: string;

  /**
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * @generated from field: string resource_subtype = 3;
   */
  resourceSubtype: string;

  /**
   * @generated from field: string method_name = 4;
   */
  methodName: string;

  /**
   * @generated from field: viam.app.data.v1.CaptureInterval interval = 5;
   */
  interval?: CaptureInterval;

  constructor(data?: PartialMessage<ExportTabularDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.ExportTabularDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportTabularDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportTabularDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportTabularDataRequest;

  static equals(a: ExportTabularDataRequest | PlainMessage<ExportTabularDataRequest> | undefined, b: ExportTabularDataRequest | PlainMessage<ExportTabularDataRequest> | undefined): boolean;
}

/**
 * ExportTabularDataResponse provides unified tabular data and metadata for a single data point from the specified data source.
 *
 * @generated from message viam.app.data.v1.ExportTabularDataResponse
 */
export declare class ExportTabularDataResponse extends Message<ExportTabularDataResponse> {
  /**
   * @generated from field: string part_id = 1;
   */
  partId: string;

  /**
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * @generated from field: string resource_subtype = 3;
   */
  resourceSubtype: string;

  /**
   * @generated from field: string method_name = 4;
   */
  methodName: string;

  /**
   * @generated from field: google.protobuf.Timestamp time_captured = 5;
   */
  timeCaptured?: Timestamp;

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId: string;

  /**
   * @generated from field: string location_id = 7;
   */
  locationId: string;

  /**
   * @generated from field: string robot_name = 8;
   */
  robotName: string;

  /**
   * @generated from field: string robot_id = 9;
   */
  robotId: string;

  /**
   * @generated from field: string part_name = 10;
   */
  partName: string;

  /**
   * @generated from field: google.protobuf.Struct method_parameters = 11;
   */
  methodParameters?: Struct;

  /**
   * @generated from field: repeated string tags = 12;
   */
  tags: string[];

  /**
   * @generated from field: google.protobuf.Struct payload = 13;
   */
  payload?: Struct;

  constructor(data?: PartialMessage<ExportTabularDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.ExportTabularDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportTabularDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportTabularDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportTabularDataResponse;

  static equals(a: ExportTabularDataResponse | PlainMessage<ExportTabularDataResponse> | undefined, b: ExportTabularDataResponse | PlainMessage<ExportTabularDataResponse> | undefined): boolean;
}

/**
 * GetLatestTabularDataRequest requests the most recent tabular data captured from the specified data source.
 *
 * @generated from message viam.app.data.v1.GetLatestTabularDataRequest
 */
export declare class GetLatestTabularDataRequest extends Message<GetLatestTabularDataRequest> {
  /**
   * @generated from field: string part_id = 1;
   */
  partId: string;

  /**
   * @generated from field: string resource_name = 2;
   */
  resourceName: string;

  /**
   * @generated from field: string method_name = 3;
   */
  methodName: string;

  /**
   * @generated from field: string resource_subtype = 4;
   */
  resourceSubtype: string;

  constructor(data?: PartialMessage<GetLatestTabularDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.GetLatestTabularDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestTabularDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestTabularDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestTabularDataRequest;

  static equals(a: GetLatestTabularDataRequest | PlainMessage<GetLatestTabularDataRequest> | undefined, b: GetLatestTabularDataRequest | PlainMessage<GetLatestTabularDataRequest> | undefined): boolean;
}

/**
 * GetLatestTabularDataResponse provides the data, time synced, and time captured of the most recent tabular data captured
 * from the requested data source, as long as it was synced within the last year.
 *
 * @generated from message viam.app.data.v1.GetLatestTabularDataResponse
 */
export declare class GetLatestTabularDataResponse extends Message<GetLatestTabularDataResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp time_captured = 1;
   */
  timeCaptured?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp time_synced = 2;
   */
  timeSynced?: Timestamp;

  /**
   * @generated from field: google.protobuf.Struct payload = 3;
   */
  payload?: Struct;

  constructor(data?: PartialMessage<GetLatestTabularDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.GetLatestTabularDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestTabularDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestTabularDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestTabularDataResponse;

  static equals(a: GetLatestTabularDataResponse | PlainMessage<GetLatestTabularDataResponse> | undefined, b: GetLatestTabularDataResponse | PlainMessage<GetLatestTabularDataResponse> | undefined): boolean;
}

/**
 * BinaryData contains data and metadata associated with binary data.
 *
 * @generated from message viam.app.data.v1.BinaryData
 */
export declare class BinaryData extends Message<BinaryData> {
  /**
   * @generated from field: bytes binary = 1;
   */
  binary: Uint8Array;

  /**
   * @generated from field: viam.app.data.v1.BinaryMetadata metadata = 2;
   */
  metadata?: BinaryMetadata;

  constructor(data?: PartialMessage<BinaryData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryData;

  static equals(a: BinaryData | PlainMessage<BinaryData> | undefined, b: BinaryData | PlainMessage<BinaryData> | undefined): boolean;
}

/**
 * BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data when a filter is provided.
 *
 * @generated from message viam.app.data.v1.BinaryDataByFilterRequest
 */
export declare class BinaryDataByFilterRequest extends Message<BinaryDataByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.DataRequest data_request = 1;
   */
  dataRequest?: DataRequest;

  /**
   * @generated from field: bool include_binary = 2;
   */
  includeBinary: boolean;

  /**
   * @generated from field: bool count_only = 3;
   */
  countOnly: boolean;

  /**
   * @generated from field: bool include_internal_data = 4;
   */
  includeInternalData: boolean;

  constructor(data?: PartialMessage<BinaryDataByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryDataByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryDataByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryDataByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryDataByFilterRequest;

  static equals(a: BinaryDataByFilterRequest | PlainMessage<BinaryDataByFilterRequest> | undefined, b: BinaryDataByFilterRequest | PlainMessage<BinaryDataByFilterRequest> | undefined): boolean;
}

/**
 * BinaryDataByFilterResponse provides the data and metadata of binary (image + file) data when a filter is provided.
 *
 * @generated from message viam.app.data.v1.BinaryDataByFilterResponse
 */
export declare class BinaryDataByFilterResponse extends Message<BinaryDataByFilterResponse> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryData data = 1;
   */
  data: BinaryData[];

  /**
   * @generated from field: uint64 count = 2;
   */
  count: bigint;

  /**
   * @generated from field: string last = 3;
   */
  last: string;

  /**
   * @generated from field: uint64 total_size_bytes = 4;
   */
  totalSizeBytes: bigint;

  constructor(data?: PartialMessage<BinaryDataByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryDataByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryDataByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryDataByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryDataByFilterResponse;

  static equals(a: BinaryDataByFilterResponse | PlainMessage<BinaryDataByFilterResponse> | undefined, b: BinaryDataByFilterResponse | PlainMessage<BinaryDataByFilterResponse> | undefined): boolean;
}

/**
 * BinaryID is the unique identifier for a file that one can request to be retrieved or modified.
 *
 * @generated from message viam.app.data.v1.BinaryID
 */
export declare class BinaryID extends Message<BinaryID> {
  /**
   * @generated from field: string file_id = 1;
   */
  fileId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: string location_id = 3;
   */
  locationId: string;

  constructor(data?: PartialMessage<BinaryID>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryID";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryID;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryID;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryID;

  static equals(a: BinaryID | PlainMessage<BinaryID> | undefined, b: BinaryID | PlainMessage<BinaryID> | undefined): boolean;
}

/**
 * BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data by binary ids.
 *
 * @generated from message viam.app.data.v1.BinaryDataByIDsRequest
 */
export declare class BinaryDataByIDsRequest extends Message<BinaryDataByIDsRequest> {
  /**
   * @generated from field: bool include_binary = 2;
   */
  includeBinary: boolean;

  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 3;
   */
  binaryIds: BinaryID[];

  constructor(data?: PartialMessage<BinaryDataByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryDataByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryDataByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryDataByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryDataByIDsRequest;

  static equals(a: BinaryDataByIDsRequest | PlainMessage<BinaryDataByIDsRequest> | undefined, b: BinaryDataByIDsRequest | PlainMessage<BinaryDataByIDsRequest> | undefined): boolean;
}

/**
 * BinaryDataByIDsResponse provides the data and metadata of binary (image + file) data when a filter is provided.
 *
 * @generated from message viam.app.data.v1.BinaryDataByIDsResponse
 */
export declare class BinaryDataByIDsResponse extends Message<BinaryDataByIDsResponse> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryData data = 1;
   */
  data: BinaryData[];

  /**
   * @generated from field: uint64 count = 2;
   */
  count: bigint;

  constructor(data?: PartialMessage<BinaryDataByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryDataByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryDataByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryDataByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryDataByIDsResponse;

  static equals(a: BinaryDataByIDsResponse | PlainMessage<BinaryDataByIDsResponse> | undefined, b: BinaryDataByIDsResponse | PlainMessage<BinaryDataByIDsResponse> | undefined): boolean;
}

/**
 * BoundingBox represents a labeled bounding box on an image.
 * x and y values are normalized ratios between 0 and 1.
 *
 * @generated from message viam.app.data.v1.BoundingBox
 */
export declare class BoundingBox extends Message<BoundingBox> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: double x_min_normalized = 3;
   */
  xMinNormalized: number;

  /**
   * @generated from field: double y_min_normalized = 4;
   */
  yMinNormalized: number;

  /**
   * @generated from field: double x_max_normalized = 5;
   */
  xMaxNormalized: number;

  /**
   * @generated from field: double y_max_normalized = 6;
   */
  yMaxNormalized: number;

  /**
   * confidence is an optional range from 0 - 1
   *
   * @generated from field: optional double confidence = 7;
   */
  confidence?: number;

  constructor(data?: PartialMessage<BoundingBox>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BoundingBox";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoundingBox;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoundingBox;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoundingBox;

  static equals(a: BoundingBox | PlainMessage<BoundingBox> | undefined, b: BoundingBox | PlainMessage<BoundingBox> | undefined): boolean;
}

/**
 * Classification represents a confidence score with a label.
 *
 * @generated from message viam.app.data.v1.Classification
 */
export declare class Classification extends Message<Classification> {
  /**
   * @generated from field: string label = 1;
   */
  label: string;

  /**
   * confidence is an optional range from 0 - 1
   *
   * @generated from field: optional double confidence = 2;
   */
  confidence?: number;

  constructor(data?: PartialMessage<Classification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.Classification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Classification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Classification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Classification;

  static equals(a: Classification | PlainMessage<Classification> | undefined, b: Classification | PlainMessage<Classification> | undefined): boolean;
}

/**
 * Annotations are data annotations used for machine learning.
 *
 * @generated from message viam.app.data.v1.Annotations
 */
export declare class Annotations extends Message<Annotations> {
  /**
   * @generated from field: repeated viam.app.data.v1.BoundingBox bboxes = 1;
   */
  bboxes: BoundingBox[];

  /**
   * @generated from field: repeated viam.app.data.v1.Classification classifications = 2;
   */
  classifications: Classification[];

  constructor(data?: PartialMessage<Annotations>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.Annotations";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Annotations;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Annotations;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Annotations;

  static equals(a: Annotations | PlainMessage<Annotations> | undefined, b: Annotations | PlainMessage<Annotations> | undefined): boolean;
}

/**
 * BinaryMetadata is the metadata associated with binary data.
 *
 * @generated from message viam.app.data.v1.BinaryMetadata
 */
export declare class BinaryMetadata extends Message<BinaryMetadata> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: viam.app.data.v1.CaptureMetadata capture_metadata = 2;
   */
  captureMetadata?: CaptureMetadata;

  /**
   * @generated from field: google.protobuf.Timestamp time_requested = 3;
   */
  timeRequested?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp time_received = 4;
   */
  timeReceived?: Timestamp;

  /**
   * @generated from field: string file_name = 5;
   */
  fileName: string;

  /**
   * @generated from field: string file_ext = 6;
   */
  fileExt: string;

  /**
   * @generated from field: string uri = 7;
   */
  uri: string;

  /**
   * @generated from field: viam.app.data.v1.Annotations annotations = 8;
   */
  annotations?: Annotations;

  /**
   * @generated from field: repeated string dataset_ids = 9;
   */
  datasetIds: string[];

  constructor(data?: PartialMessage<BinaryMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BinaryMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BinaryMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BinaryMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BinaryMetadata;

  static equals(a: BinaryMetadata | PlainMessage<BinaryMetadata> | undefined, b: BinaryMetadata | PlainMessage<BinaryMetadata> | undefined): boolean;
}

/**
 * DeleteTabularDataRequest deletes the data from the organization that is older than `delete_older_than_days`
 * in UTC time. For example, if delete_older_than_days=1 and the request is made at 1AM EST on March 11
 * (March 11 5AM UTC), this deletes all data captured through March 10 11:59:59PM UTC.
 * If the request is at 10PM EST on March 11 (March 12 2AM UTC), this deletes all data captured
 * through March 11 11:59:59PM UTC.
 * If delete_older_than_days is 0, all existing data is deleted.
 *
 * @generated from message viam.app.data.v1.DeleteTabularDataRequest
 */
export declare class DeleteTabularDataRequest extends Message<DeleteTabularDataRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: uint32 delete_older_than_days = 2;
   */
  deleteOlderThanDays: number;

  constructor(data?: PartialMessage<DeleteTabularDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteTabularDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTabularDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTabularDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTabularDataRequest;

  static equals(a: DeleteTabularDataRequest | PlainMessage<DeleteTabularDataRequest> | undefined, b: DeleteTabularDataRequest | PlainMessage<DeleteTabularDataRequest> | undefined): boolean;
}

/**
 * DeleteBinaryDataResponse returns the number of tabular datapoints deleted.
 *
 * @generated from message viam.app.data.v1.DeleteTabularDataResponse
 */
export declare class DeleteTabularDataResponse extends Message<DeleteTabularDataResponse> {
  /**
   * @generated from field: uint64 deleted_count = 1;
   */
  deletedCount: bigint;

  constructor(data?: PartialMessage<DeleteTabularDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteTabularDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTabularDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTabularDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTabularDataResponse;

  static equals(a: DeleteTabularDataResponse | PlainMessage<DeleteTabularDataResponse> | undefined, b: DeleteTabularDataResponse | PlainMessage<DeleteTabularDataResponse> | undefined): boolean;
}

/**
 * DeleteBinaryDataByFilterRequest deletes the data and metadata of binary data when a filter is provided.
 *
 * @generated from message viam.app.data.v1.DeleteBinaryDataByFilterRequest
 */
export declare class DeleteBinaryDataByFilterRequest extends Message<DeleteBinaryDataByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  /**
   * @generated from field: bool include_internal_data = 2;
   */
  includeInternalData: boolean;

  constructor(data?: PartialMessage<DeleteBinaryDataByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteBinaryDataByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBinaryDataByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBinaryDataByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBinaryDataByFilterRequest;

  static equals(a: DeleteBinaryDataByFilterRequest | PlainMessage<DeleteBinaryDataByFilterRequest> | undefined, b: DeleteBinaryDataByFilterRequest | PlainMessage<DeleteBinaryDataByFilterRequest> | undefined): boolean;
}

/**
 * DeleteBinaryDataByFilterResponse returns the number of binary files deleted when a filter is provided.
 *
 * @generated from message viam.app.data.v1.DeleteBinaryDataByFilterResponse
 */
export declare class DeleteBinaryDataByFilterResponse extends Message<DeleteBinaryDataByFilterResponse> {
  /**
   * @generated from field: uint64 deleted_count = 1;
   */
  deletedCount: bigint;

  constructor(data?: PartialMessage<DeleteBinaryDataByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteBinaryDataByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBinaryDataByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBinaryDataByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBinaryDataByFilterResponse;

  static equals(a: DeleteBinaryDataByFilterResponse | PlainMessage<DeleteBinaryDataByFilterResponse> | undefined, b: DeleteBinaryDataByFilterResponse | PlainMessage<DeleteBinaryDataByFilterResponse> | undefined): boolean;
}

/**
 * DeleteBinaryDataByIDsRequest deletes the data and metadata of binary data when binary ids are provided.
 *
 * @generated from message viam.app.data.v1.DeleteBinaryDataByIDsRequest
 */
export declare class DeleteBinaryDataByIDsRequest extends Message<DeleteBinaryDataByIDsRequest> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 2;
   */
  binaryIds: BinaryID[];

  constructor(data?: PartialMessage<DeleteBinaryDataByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteBinaryDataByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBinaryDataByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBinaryDataByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBinaryDataByIDsRequest;

  static equals(a: DeleteBinaryDataByIDsRequest | PlainMessage<DeleteBinaryDataByIDsRequest> | undefined, b: DeleteBinaryDataByIDsRequest | PlainMessage<DeleteBinaryDataByIDsRequest> | undefined): boolean;
}

/**
 * DeleteBinaryDataByIDsResponse returns the number of binary files deleted when binary ids are provided.
 *
 * @generated from message viam.app.data.v1.DeleteBinaryDataByIDsResponse
 */
export declare class DeleteBinaryDataByIDsResponse extends Message<DeleteBinaryDataByIDsResponse> {
  /**
   * @generated from field: uint64 deleted_count = 1;
   */
  deletedCount: bigint;

  constructor(data?: PartialMessage<DeleteBinaryDataByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.DeleteBinaryDataByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBinaryDataByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBinaryDataByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBinaryDataByIDsResponse;

  static equals(a: DeleteBinaryDataByIDsResponse | PlainMessage<DeleteBinaryDataByIDsResponse> | undefined, b: DeleteBinaryDataByIDsResponse | PlainMessage<DeleteBinaryDataByIDsResponse> | undefined): boolean;
}

/**
 * AddTagsToBinaryDataByIDsRequest requests adding all specified tags to each of the files when binary ids are provided.
 *
 * @generated from message viam.app.data.v1.AddTagsToBinaryDataByIDsRequest
 */
export declare class AddTagsToBinaryDataByIDsRequest extends Message<AddTagsToBinaryDataByIDsRequest> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 3;
   */
  binaryIds: BinaryID[];

  /**
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  constructor(data?: PartialMessage<AddTagsToBinaryDataByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddTagsToBinaryDataByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagsToBinaryDataByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByIDsRequest;

  static equals(a: AddTagsToBinaryDataByIDsRequest | PlainMessage<AddTagsToBinaryDataByIDsRequest> | undefined, b: AddTagsToBinaryDataByIDsRequest | PlainMessage<AddTagsToBinaryDataByIDsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.AddTagsToBinaryDataByIDsResponse
 */
export declare class AddTagsToBinaryDataByIDsResponse extends Message<AddTagsToBinaryDataByIDsResponse> {
  constructor(data?: PartialMessage<AddTagsToBinaryDataByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddTagsToBinaryDataByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagsToBinaryDataByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByIDsResponse;

  static equals(a: AddTagsToBinaryDataByIDsResponse | PlainMessage<AddTagsToBinaryDataByIDsResponse> | undefined, b: AddTagsToBinaryDataByIDsResponse | PlainMessage<AddTagsToBinaryDataByIDsResponse> | undefined): boolean;
}

/**
 * AddTagsToBinaryDataByFilterRequest requests adding all specified tags to each of the files when a filter is provided.
 *
 * @generated from message viam.app.data.v1.AddTagsToBinaryDataByFilterRequest
 */
export declare class AddTagsToBinaryDataByFilterRequest extends Message<AddTagsToBinaryDataByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  /**
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  constructor(data?: PartialMessage<AddTagsToBinaryDataByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddTagsToBinaryDataByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagsToBinaryDataByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByFilterRequest;

  static equals(a: AddTagsToBinaryDataByFilterRequest | PlainMessage<AddTagsToBinaryDataByFilterRequest> | undefined, b: AddTagsToBinaryDataByFilterRequest | PlainMessage<AddTagsToBinaryDataByFilterRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.AddTagsToBinaryDataByFilterResponse
 */
export declare class AddTagsToBinaryDataByFilterResponse extends Message<AddTagsToBinaryDataByFilterResponse> {
  constructor(data?: PartialMessage<AddTagsToBinaryDataByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddTagsToBinaryDataByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagsToBinaryDataByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagsToBinaryDataByFilterResponse;

  static equals(a: AddTagsToBinaryDataByFilterResponse | PlainMessage<AddTagsToBinaryDataByFilterResponse> | undefined, b: AddTagsToBinaryDataByFilterResponse | PlainMessage<AddTagsToBinaryDataByFilterResponse> | undefined): boolean;
}

/**
 * RemoveTagsFromBinaryDataByIDsRequest requests removing the given tags value from each file when binary ids are provided.
 *
 * @generated from message viam.app.data.v1.RemoveTagsFromBinaryDataByIDsRequest
 */
export declare class RemoveTagsFromBinaryDataByIDsRequest extends Message<RemoveTagsFromBinaryDataByIDsRequest> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 3;
   */
  binaryIds: BinaryID[];

  /**
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  constructor(data?: PartialMessage<RemoveTagsFromBinaryDataByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveTagsFromBinaryDataByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTagsFromBinaryDataByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByIDsRequest;

  static equals(a: RemoveTagsFromBinaryDataByIDsRequest | PlainMessage<RemoveTagsFromBinaryDataByIDsRequest> | undefined, b: RemoveTagsFromBinaryDataByIDsRequest | PlainMessage<RemoveTagsFromBinaryDataByIDsRequest> | undefined): boolean;
}

/**
 * RemoveTagsFromBinaryDataByIDsResponse returns the number of binary files which had tags removed
 *
 * @generated from message viam.app.data.v1.RemoveTagsFromBinaryDataByIDsResponse
 */
export declare class RemoveTagsFromBinaryDataByIDsResponse extends Message<RemoveTagsFromBinaryDataByIDsResponse> {
  /**
   * @generated from field: uint64 deleted_count = 1;
   */
  deletedCount: bigint;

  constructor(data?: PartialMessage<RemoveTagsFromBinaryDataByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveTagsFromBinaryDataByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTagsFromBinaryDataByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByIDsResponse;

  static equals(a: RemoveTagsFromBinaryDataByIDsResponse | PlainMessage<RemoveTagsFromBinaryDataByIDsResponse> | undefined, b: RemoveTagsFromBinaryDataByIDsResponse | PlainMessage<RemoveTagsFromBinaryDataByIDsResponse> | undefined): boolean;
}

/**
 * RemoveTagsFromBinaryDataByFilterRequest requests removing the given tags value from each file when a filter is provided.
 *
 * @generated from message viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest
 */
export declare class RemoveTagsFromBinaryDataByFilterRequest extends Message<RemoveTagsFromBinaryDataByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  /**
   * @generated from field: repeated string tags = 2;
   */
  tags: string[];

  constructor(data?: PartialMessage<RemoveTagsFromBinaryDataByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveTagsFromBinaryDataByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTagsFromBinaryDataByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByFilterRequest;

  static equals(a: RemoveTagsFromBinaryDataByFilterRequest | PlainMessage<RemoveTagsFromBinaryDataByFilterRequest> | undefined, b: RemoveTagsFromBinaryDataByFilterRequest | PlainMessage<RemoveTagsFromBinaryDataByFilterRequest> | undefined): boolean;
}

/**
 * RemoveTagsFromBinaryDataByFilterResponse returns the number of binary files which had tags removed.
 *
 * @generated from message viam.app.data.v1.RemoveTagsFromBinaryDataByFilterResponse
 */
export declare class RemoveTagsFromBinaryDataByFilterResponse extends Message<RemoveTagsFromBinaryDataByFilterResponse> {
  /**
   * @generated from field: uint64 deleted_count = 1;
   */
  deletedCount: bigint;

  constructor(data?: PartialMessage<RemoveTagsFromBinaryDataByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveTagsFromBinaryDataByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTagsFromBinaryDataByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTagsFromBinaryDataByFilterResponse;

  static equals(a: RemoveTagsFromBinaryDataByFilterResponse | PlainMessage<RemoveTagsFromBinaryDataByFilterResponse> | undefined, b: RemoveTagsFromBinaryDataByFilterResponse | PlainMessage<RemoveTagsFromBinaryDataByFilterResponse> | undefined): boolean;
}

/**
 * TagsByFilterRequest requests the unique tags from data based on given filter.
 *
 * @generated from message viam.app.data.v1.TagsByFilterRequest
 */
export declare class TagsByFilterRequest extends Message<TagsByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  constructor(data?: PartialMessage<TagsByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TagsByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TagsByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TagsByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TagsByFilterRequest;

  static equals(a: TagsByFilterRequest | PlainMessage<TagsByFilterRequest> | undefined, b: TagsByFilterRequest | PlainMessage<TagsByFilterRequest> | undefined): boolean;
}

/**
 * TagsByFilterResponse returns the unique tags from data based on given filter.
 *
 * @generated from message viam.app.data.v1.TagsByFilterResponse
 */
export declare class TagsByFilterResponse extends Message<TagsByFilterResponse> {
  /**
   * @generated from field: repeated string tags = 1;
   */
  tags: string[];

  constructor(data?: PartialMessage<TagsByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.TagsByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TagsByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TagsByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TagsByFilterResponse;

  static equals(a: TagsByFilterResponse | PlainMessage<TagsByFilterResponse> | undefined, b: TagsByFilterResponse | PlainMessage<TagsByFilterResponse> | undefined): boolean;
}

/**
 * AddBoundingBoxToImageByIDRequest specifies the binary ID to which a bounding box
 * with the associated label and position in normalized coordinates will be added.
 *
 * @generated from message viam.app.data.v1.AddBoundingBoxToImageByIDRequest
 */
export declare class AddBoundingBoxToImageByIDRequest extends Message<AddBoundingBoxToImageByIDRequest> {
  /**
   * @generated from field: viam.app.data.v1.BinaryID binary_id = 7;
   */
  binaryId?: BinaryID;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: double x_min_normalized = 3;
   */
  xMinNormalized: number;

  /**
   * @generated from field: double y_min_normalized = 4;
   */
  yMinNormalized: number;

  /**
   * @generated from field: double x_max_normalized = 5;
   */
  xMaxNormalized: number;

  /**
   * @generated from field: double y_max_normalized = 6;
   */
  yMaxNormalized: number;

  constructor(data?: PartialMessage<AddBoundingBoxToImageByIDRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddBoundingBoxToImageByIDRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBoundingBoxToImageByIDRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBoundingBoxToImageByIDRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBoundingBoxToImageByIDRequest;

  static equals(a: AddBoundingBoxToImageByIDRequest | PlainMessage<AddBoundingBoxToImageByIDRequest> | undefined, b: AddBoundingBoxToImageByIDRequest | PlainMessage<AddBoundingBoxToImageByIDRequest> | undefined): boolean;
}

/**
 * AddBoundingBoxToImageByIDResponse returns the bounding box ID of the successfully added bounding box.
 *
 * @generated from message viam.app.data.v1.AddBoundingBoxToImageByIDResponse
 */
export declare class AddBoundingBoxToImageByIDResponse extends Message<AddBoundingBoxToImageByIDResponse> {
  /**
   * @generated from field: string bbox_id = 1;
   */
  bboxId: string;

  constructor(data?: PartialMessage<AddBoundingBoxToImageByIDResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddBoundingBoxToImageByIDResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBoundingBoxToImageByIDResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBoundingBoxToImageByIDResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBoundingBoxToImageByIDResponse;

  static equals(a: AddBoundingBoxToImageByIDResponse | PlainMessage<AddBoundingBoxToImageByIDResponse> | undefined, b: AddBoundingBoxToImageByIDResponse | PlainMessage<AddBoundingBoxToImageByIDResponse> | undefined): boolean;
}

/**
 * RemoveBoundingBoxFromImageByIDRequest removes the bounding box with specified bounding box ID for the file represented by the binary ID.
 *
 * @generated from message viam.app.data.v1.RemoveBoundingBoxFromImageByIDRequest
 */
export declare class RemoveBoundingBoxFromImageByIDRequest extends Message<RemoveBoundingBoxFromImageByIDRequest> {
  /**
   * @generated from field: viam.app.data.v1.BinaryID binary_id = 3;
   */
  binaryId?: BinaryID;

  /**
   * @generated from field: string bbox_id = 2;
   */
  bboxId: string;

  constructor(data?: PartialMessage<RemoveBoundingBoxFromImageByIDRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveBoundingBoxFromImageByIDRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveBoundingBoxFromImageByIDRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveBoundingBoxFromImageByIDRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveBoundingBoxFromImageByIDRequest;

  static equals(a: RemoveBoundingBoxFromImageByIDRequest | PlainMessage<RemoveBoundingBoxFromImageByIDRequest> | undefined, b: RemoveBoundingBoxFromImageByIDRequest | PlainMessage<RemoveBoundingBoxFromImageByIDRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.RemoveBoundingBoxFromImageByIDResponse
 */
export declare class RemoveBoundingBoxFromImageByIDResponse extends Message<RemoveBoundingBoxFromImageByIDResponse> {
  constructor(data?: PartialMessage<RemoveBoundingBoxFromImageByIDResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveBoundingBoxFromImageByIDResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveBoundingBoxFromImageByIDResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveBoundingBoxFromImageByIDResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveBoundingBoxFromImageByIDResponse;

  static equals(a: RemoveBoundingBoxFromImageByIDResponse | PlainMessage<RemoveBoundingBoxFromImageByIDResponse> | undefined, b: RemoveBoundingBoxFromImageByIDResponse | PlainMessage<RemoveBoundingBoxFromImageByIDResponse> | undefined): boolean;
}

/**
 * UpdateBoundingBoxRequest updates the bounding box with specified bounding box ID for the file represented by the binary ID.
 *
 * @generated from message viam.app.data.v1.UpdateBoundingBoxRequest
 */
export declare class UpdateBoundingBoxRequest extends Message<UpdateBoundingBoxRequest> {
  /**
   * @generated from field: viam.app.data.v1.BinaryID binary_id = 1;
   */
  binaryId?: BinaryID;

  /**
   * @generated from field: string bbox_id = 2;
   */
  bboxId: string;

  /**
   * @generated from field: optional string label = 3;
   */
  label?: string;

  /**
   * @generated from field: optional double x_min_normalized = 4;
   */
  xMinNormalized?: number;

  /**
   * @generated from field: optional double y_min_normalized = 5;
   */
  yMinNormalized?: number;

  /**
   * @generated from field: optional double x_max_normalized = 6;
   */
  xMaxNormalized?: number;

  /**
   * @generated from field: optional double y_max_normalized = 7;
   */
  yMaxNormalized?: number;

  constructor(data?: PartialMessage<UpdateBoundingBoxRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.UpdateBoundingBoxRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBoundingBoxRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBoundingBoxRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBoundingBoxRequest;

  static equals(a: UpdateBoundingBoxRequest | PlainMessage<UpdateBoundingBoxRequest> | undefined, b: UpdateBoundingBoxRequest | PlainMessage<UpdateBoundingBoxRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.UpdateBoundingBoxResponse
 */
export declare class UpdateBoundingBoxResponse extends Message<UpdateBoundingBoxResponse> {
  constructor(data?: PartialMessage<UpdateBoundingBoxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.UpdateBoundingBoxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBoundingBoxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBoundingBoxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBoundingBoxResponse;

  static equals(a: UpdateBoundingBoxResponse | PlainMessage<UpdateBoundingBoxResponse> | undefined, b: UpdateBoundingBoxResponse | PlainMessage<UpdateBoundingBoxResponse> | undefined): boolean;
}

/**
 * BoundingBoxLabelsByFilterRequest requests all the labels of the bounding boxes from files from a given filter.
 *
 * @generated from message viam.app.data.v1.BoundingBoxLabelsByFilterRequest
 */
export declare class BoundingBoxLabelsByFilterRequest extends Message<BoundingBoxLabelsByFilterRequest> {
  /**
   * @generated from field: viam.app.data.v1.Filter filter = 1;
   */
  filter?: Filter;

  constructor(data?: PartialMessage<BoundingBoxLabelsByFilterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BoundingBoxLabelsByFilterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoundingBoxLabelsByFilterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoundingBoxLabelsByFilterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoundingBoxLabelsByFilterRequest;

  static equals(a: BoundingBoxLabelsByFilterRequest | PlainMessage<BoundingBoxLabelsByFilterRequest> | undefined, b: BoundingBoxLabelsByFilterRequest | PlainMessage<BoundingBoxLabelsByFilterRequest> | undefined): boolean;
}

/**
 * BoundingBoxLabelsByFilterRequest returns all the labels of the bounding boxes from files from a given filter.
 *
 * @generated from message viam.app.data.v1.BoundingBoxLabelsByFilterResponse
 */
export declare class BoundingBoxLabelsByFilterResponse extends Message<BoundingBoxLabelsByFilterResponse> {
  /**
   * @generated from field: repeated string labels = 1;
   */
  labels: string[];

  constructor(data?: PartialMessage<BoundingBoxLabelsByFilterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.BoundingBoxLabelsByFilterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoundingBoxLabelsByFilterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoundingBoxLabelsByFilterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoundingBoxLabelsByFilterResponse;

  static equals(a: BoundingBoxLabelsByFilterResponse | PlainMessage<BoundingBoxLabelsByFilterResponse> | undefined, b: BoundingBoxLabelsByFilterResponse | PlainMessage<BoundingBoxLabelsByFilterResponse> | undefined): boolean;
}

/**
 * ConfigureDatabaseUserRequest accepts a Viam organization ID and a password for the database user
 * being configured. Viam uses gRPC over TLS, so the entire request will be encrypted while in
 * flight, including the password.
 *
 * @generated from message viam.app.data.v1.ConfigureDatabaseUserRequest
 */
export declare class ConfigureDatabaseUserRequest extends Message<ConfigureDatabaseUserRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<ConfigureDatabaseUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.ConfigureDatabaseUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureDatabaseUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureDatabaseUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureDatabaseUserRequest;

  static equals(a: ConfigureDatabaseUserRequest | PlainMessage<ConfigureDatabaseUserRequest> | undefined, b: ConfigureDatabaseUserRequest | PlainMessage<ConfigureDatabaseUserRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.ConfigureDatabaseUserResponse
 */
export declare class ConfigureDatabaseUserResponse extends Message<ConfigureDatabaseUserResponse> {
  constructor(data?: PartialMessage<ConfigureDatabaseUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.ConfigureDatabaseUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureDatabaseUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureDatabaseUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureDatabaseUserResponse;

  static equals(a: ConfigureDatabaseUserResponse | PlainMessage<ConfigureDatabaseUserResponse> | undefined, b: ConfigureDatabaseUserResponse | PlainMessage<ConfigureDatabaseUserResponse> | undefined): boolean;
}

/**
 * GetDatabaseConnectionRequest requests the database connection hostname.
 *
 * @generated from message viam.app.data.v1.GetDatabaseConnectionRequest
 */
export declare class GetDatabaseConnectionRequest extends Message<GetDatabaseConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  constructor(data?: PartialMessage<GetDatabaseConnectionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.GetDatabaseConnectionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseConnectionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseConnectionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseConnectionRequest;

  static equals(a: GetDatabaseConnectionRequest | PlainMessage<GetDatabaseConnectionRequest> | undefined, b: GetDatabaseConnectionRequest | PlainMessage<GetDatabaseConnectionRequest> | undefined): boolean;
}

/**
 * GetDatabaseConnectionResponse returns the database connection hostname endpoint. It also returns
 * a URI that can be used to connect to the database instance through MongoDB clients, as well as
 * information on whether the Viam organization has a database user configured.
 *
 * @generated from message viam.app.data.v1.GetDatabaseConnectionResponse
 */
export declare class GetDatabaseConnectionResponse extends Message<GetDatabaseConnectionResponse> {
  /**
   * @generated from field: string hostname = 1;
   */
  hostname: string;

  /**
   * @generated from field: string mongodb_uri = 2;
   */
  mongodbUri: string;

  /**
   * @generated from field: bool has_database_user = 3;
   */
  hasDatabaseUser: boolean;

  constructor(data?: PartialMessage<GetDatabaseConnectionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.GetDatabaseConnectionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDatabaseConnectionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDatabaseConnectionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDatabaseConnectionResponse;

  static equals(a: GetDatabaseConnectionResponse | PlainMessage<GetDatabaseConnectionResponse> | undefined, b: GetDatabaseConnectionResponse | PlainMessage<GetDatabaseConnectionResponse> | undefined): boolean;
}

/**
 * AddBinaryDataToDatasetByIDsRequest adds the binary data with the given binary IDs to a dataset with dataset_id.
 *
 * @generated from message viam.app.data.v1.AddBinaryDataToDatasetByIDsRequest
 */
export declare class AddBinaryDataToDatasetByIDsRequest extends Message<AddBinaryDataToDatasetByIDsRequest> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 1;
   */
  binaryIds: BinaryID[];

  /**
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  constructor(data?: PartialMessage<AddBinaryDataToDatasetByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddBinaryDataToDatasetByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBinaryDataToDatasetByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBinaryDataToDatasetByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBinaryDataToDatasetByIDsRequest;

  static equals(a: AddBinaryDataToDatasetByIDsRequest | PlainMessage<AddBinaryDataToDatasetByIDsRequest> | undefined, b: AddBinaryDataToDatasetByIDsRequest | PlainMessage<AddBinaryDataToDatasetByIDsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.AddBinaryDataToDatasetByIDsResponse
 */
export declare class AddBinaryDataToDatasetByIDsResponse extends Message<AddBinaryDataToDatasetByIDsResponse> {
  constructor(data?: PartialMessage<AddBinaryDataToDatasetByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.AddBinaryDataToDatasetByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBinaryDataToDatasetByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBinaryDataToDatasetByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBinaryDataToDatasetByIDsResponse;

  static equals(a: AddBinaryDataToDatasetByIDsResponse | PlainMessage<AddBinaryDataToDatasetByIDsResponse> | undefined, b: AddBinaryDataToDatasetByIDsResponse | PlainMessage<AddBinaryDataToDatasetByIDsResponse> | undefined): boolean;
}

/**
 * RemoveBinaryDataFromDatasetByIDsRequest removes the specified binary IDs from a dataset with dataset_id.
 *
 * @generated from message viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsRequest
 */
export declare class RemoveBinaryDataFromDatasetByIDsRequest extends Message<RemoveBinaryDataFromDatasetByIDsRequest> {
  /**
   * @generated from field: repeated viam.app.data.v1.BinaryID binary_ids = 1;
   */
  binaryIds: BinaryID[];

  /**
   * @generated from field: string dataset_id = 2;
   */
  datasetId: string;

  constructor(data?: PartialMessage<RemoveBinaryDataFromDatasetByIDsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveBinaryDataFromDatasetByIDsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveBinaryDataFromDatasetByIDsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveBinaryDataFromDatasetByIDsRequest;

  static equals(a: RemoveBinaryDataFromDatasetByIDsRequest | PlainMessage<RemoveBinaryDataFromDatasetByIDsRequest> | undefined, b: RemoveBinaryDataFromDatasetByIDsRequest | PlainMessage<RemoveBinaryDataFromDatasetByIDsRequest> | undefined): boolean;
}

/**
 * @generated from message viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsResponse
 */
export declare class RemoveBinaryDataFromDatasetByIDsResponse extends Message<RemoveBinaryDataFromDatasetByIDsResponse> {
  constructor(data?: PartialMessage<RemoveBinaryDataFromDatasetByIDsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "viam.app.data.v1.RemoveBinaryDataFromDatasetByIDsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveBinaryDataFromDatasetByIDsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveBinaryDataFromDatasetByIDsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveBinaryDataFromDatasetByIDsResponse;

  static equals(a: RemoveBinaryDataFromDatasetByIDsResponse | PlainMessage<RemoveBinaryDataFromDatasetByIDsResponse> | undefined, b: RemoveBinaryDataFromDatasetByIDsResponse | PlainMessage<RemoveBinaryDataFromDatasetByIDsResponse> | undefined): boolean;
}

