import { Struct, type JsonValue, type PartialMessage } from '@bufbuild/protobuf';
import type { CallOptions } from '@connectrpc/connect';
import { DoCommandRequest, DoCommandResponse } from './gen/common/v1/common_pb';
import type { Options } from './types';
export declare const clientHeaders: Headers;
type doCommand = (request: PartialMessage<DoCommandRequest>, options?: CallOptions) => Promise<DoCommandResponse>;
/** Send/Receive an arbitrary command using a resource client */
export declare const doCommandFromClient: (doCommander: doCommand, name: string, command: Struct, options?: Options, callOptions?: CallOptions) => Promise<JsonValue>;
export declare const enableDebugLogging: (key?: string, opts?: CallOptions) => CallOptions;
export declare const disableDebugLogging: (opts: CallOptions) => void;
export declare const addMetadata: (key: string, value: string, opts?: CallOptions) => CallOptions;
export declare const deleteMetadata: (opts: CallOptions, key: string) => void;
export {};
