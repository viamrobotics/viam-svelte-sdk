import { type Transport } from '@connectrpc/connect';
import type { CloudConfig } from '../gen/provisioning/v1/provisioning_pb';
export declare class ProvisioningClient {
    private client;
    constructor(transport: Transport);
    /**
     * Get the status of the Smart Machine.
     *
     * @returns The Smart Machine status
     */
    getSmartMachineStatus(): Promise<import("../gen/provisioning/v1/provisioning_pb").GetSmartMachineStatusResponse>;
    /**
     * Set the network credentials of the Smart Machine, so it can connect to the
     * internet.
     *
     * @param type - The type of network
     * @param ssid - The SSID of the network
     * @param psk - The network's passkey
     */
    setNetworkCredentials(type: string, ssid: string, psk: string): Promise<void>;
    /**
     * Set the Viam credentials of the smart machine credentials, so it connect to
     * the Cloud.
     *
     * @param cloud - The configuration of the Cloud
     */
    setSmartMachineCredentials(cloud?: CloudConfig): Promise<void>;
    /**
     * Get the networks that are visible to the Smart Machine.
     *
     * @returns A list of networks
     */
    getNetworkList(): Promise<import("../gen/provisioning/v1/provisioning_pb").NetworkInfo[]>;
}
export { CloudConfig } from '../gen/provisioning/v1/provisioning_pb';
