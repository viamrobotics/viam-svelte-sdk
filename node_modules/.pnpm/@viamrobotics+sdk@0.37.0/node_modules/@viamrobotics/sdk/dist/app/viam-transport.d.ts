import type { Transport } from '@connectrpc/connect';
/**
 * Credentials are either used to obtain an access token or provide an existing
 * one
 */
export type Credentials = Credential | AccessToken;
/** A credential that can be exchanged to obtain an access token */
export interface Credential {
    authEntity: string;
    type: CredentialType;
    payload: string;
}
export type CredentialType = 'robot-location-secret' | 'api-key' | 'robot-secret';
/** An access token used to access protected resources. */
export interface AccessToken {
    type: 'access-token';
    payload: string;
}
export declare const isCredential: (object: Credentials | undefined) => object is Credential;
/** Initialize an authenticated transport that can access protected resources. */
export declare const createViamTransport: (serviceHost: string, credential: Credential | AccessToken) => Promise<Transport>;
