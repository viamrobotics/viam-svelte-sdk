import { Struct, type JsonValue } from '@bufbuild/protobuf';
import type { CallOptions } from '@connectrpc/connect';
import type { RobotClient } from '../../robot';
import type { Options } from '../../types';
import type { Gripper } from './gripper';
/**
 * A gRPC-web client for the Gripper component.
 *
 * @group Clients
 */
export declare class GripperClient implements Gripper {
    private client;
    readonly name: string;
    private readonly options;
    callOptions: CallOptions;
    constructor(client: RobotClient, name: string, options?: Options);
    getGeometries(extra?: {}, callOptions?: CallOptions): Promise<import("../../gen/common/v1/common_pb").Geometry[]>;
    open(extra?: {}, callOptions?: CallOptions): Promise<void>;
    grab(extra?: {}, callOptions?: CallOptions): Promise<void>;
    stop(extra?: {}, callOptions?: CallOptions): Promise<void>;
    isMoving(callOptions?: CallOptions): Promise<boolean>;
    doCommand(command: Struct, callOptions?: CallOptions): Promise<JsonValue>;
}
