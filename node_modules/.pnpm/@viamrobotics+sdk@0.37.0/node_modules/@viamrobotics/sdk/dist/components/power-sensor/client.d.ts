import { Struct, type JsonValue } from '@bufbuild/protobuf';
import type { CallOptions } from '@connectrpc/connect';
import type { RobotClient } from '../../robot';
import type { Options } from '../../types';
import type { PowerSensor } from './power-sensor';
/**
 * A gRPC-web client for the PowerSensor component.
 *
 * @group Clients
 */
export declare class PowerSensorClient implements PowerSensor {
    private client;
    readonly name: string;
    private readonly options;
    callOptions: CallOptions;
    constructor(client: RobotClient, name: string, options?: Options);
    getVoltage(extra?: {}, callOptions?: CallOptions): Promise<readonly [number, boolean]>;
    getCurrent(extra?: {}, callOptions?: CallOptions): Promise<readonly [number, boolean]>;
    getPower(extra?: {}, callOptions?: CallOptions): Promise<number>;
    getReadings(extra?: {}, callOptions?: CallOptions): Promise<Record<string, JsonValue>>;
    doCommand(command: Struct, callOptions?: CallOptions): Promise<JsonValue>;
}
