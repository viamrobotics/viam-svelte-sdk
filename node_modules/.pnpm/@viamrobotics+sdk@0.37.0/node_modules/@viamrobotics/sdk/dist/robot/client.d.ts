import { type ServiceType } from '@bufbuild/protobuf';
import { type PromiseClient } from '@connectrpc/connect';
import { type Credentials } from '../app/viam-transport';
import { EventDispatcher } from '../events';
import type { PoseInFrame, Transform } from '../gen/common/v1/common_pb';
import { DiscoveryQuery, GetModelsFromModulesRequest, RestartModuleRequest, TransformPCDRequest, TransformPoseRequest } from '../gen/robot/v1/robot_pb';
import type { Robot } from './robot';
interface WebRTCOptions {
    enabled: boolean;
    host: string;
    signalingAddress: string;
    rtcConfig: RTCConfiguration | undefined;
    noReconnect?: boolean;
    reconnectMaxAttempts?: number;
    reconnectMaxWait?: number;
}
interface DirectOptions {
    noReconnect?: boolean;
    reconnectMaxAttempts?: number;
    reconnectMaxWait?: number;
}
interface SessionOptions {
    disabled: boolean;
}
export interface ConnectOptions {
    creds?: Credentials;
    priority?: number;
    dialTimeout?: number;
}
/**
 * A gRPC-web client for a Robot.
 *
 * @group Clients
 */
export declare class RobotClient extends EventDispatcher implements Robot {
    private readonly serviceHost;
    private readonly webrtcOptions;
    private readonly directOptions;
    private readonly sessionOptions;
    private gRPCConnectionManager;
    private sessionManager;
    private peerConn;
    private transport;
    private connecting;
    private connectResolve;
    private savedCreds;
    private closed;
    private robotServiceClient;
    private armServiceClient;
    private baseServiceClient;
    private boardServiceClient;
    private encoderServiceClient;
    private gantryServiceClient;
    private genericServiceClient;
    private gripperServiceClient;
    private movementSensorServiceClient;
    private powerSensorServiceClient;
    private inputControllerServiceClient;
    private motorServiceClient;
    private navigationServiceClient;
    private discoveryServiceClient;
    private motionServiceClient;
    private visionServiceClient;
    private servoServiceClient;
    private slamServiceClient;
    constructor(serviceHost: string, webrtcOptions?: WebRTCOptions, sessionOptions?: SessionOptions, directOptions?: DirectOptions);
    private onDisconnect;
    private get noReconnect();
    private get reconnectMaxAttempts();
    private get reconnectMaxWait();
    get sessionId(): string;
    private static readonly notConnectedYetStr;
    get robotService(): PromiseClient<{
        readonly typeName: "viam.robot.v1.RobotService";
        readonly methods: {
            readonly getOperations: {
                readonly name: "GetOperations";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetOperationsRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetOperationsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getSessions: {
                readonly name: "GetSessions";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetSessionsRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetSessionsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly resourceNames: {
                readonly name: "ResourceNames";
                readonly I: typeof import("../gen/robot/v1/robot_pb").ResourceNamesRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").ResourceNamesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly resourceRPCSubtypes: {
                readonly name: "ResourceRPCSubtypes";
                readonly I: typeof import("../gen/robot/v1/robot_pb").ResourceRPCSubtypesRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").ResourceRPCSubtypesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly cancelOperation: {
                readonly name: "CancelOperation";
                readonly I: typeof import("../gen/robot/v1/robot_pb").CancelOperationRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").CancelOperationResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly blockForOperation: {
                readonly name: "BlockForOperation";
                readonly I: typeof import("../gen/robot/v1/robot_pb").BlockForOperationRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").BlockForOperationResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getModelsFromModules: {
                readonly name: "GetModelsFromModules";
                readonly I: typeof GetModelsFromModulesRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetModelsFromModulesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly discoverComponents: {
                readonly name: "DiscoverComponents";
                readonly I: typeof import("../gen/robot/v1/robot_pb").DiscoverComponentsRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").DiscoverComponentsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly frameSystemConfig: {
                readonly name: "FrameSystemConfig";
                readonly I: typeof import("../gen/robot/v1/robot_pb").FrameSystemConfigRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").FrameSystemConfigResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly transformPose: {
                readonly name: "TransformPose";
                readonly I: typeof TransformPoseRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").TransformPoseResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly transformPCD: {
                readonly name: "TransformPCD";
                readonly I: typeof TransformPCDRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").TransformPCDResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getStatus: {
                readonly name: "GetStatus";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetStatusRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetStatusResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly streamStatus: {
                readonly name: "StreamStatus";
                readonly I: typeof import("../gen/robot/v1/robot_pb").StreamStatusRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").StreamStatusResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.ServerStreaming;
            };
            readonly stopAll: {
                readonly name: "StopAll";
                readonly I: typeof import("../gen/robot/v1/robot_pb").StopAllRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").StopAllResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly startSession: {
                readonly name: "StartSession";
                readonly I: typeof import("../gen/robot/v1/robot_pb").StartSessionRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").StartSessionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly sendSessionHeartbeat: {
                readonly name: "SendSessionHeartbeat";
                readonly I: typeof import("../gen/robot/v1/robot_pb").SendSessionHeartbeatRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").SendSessionHeartbeatResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly log: {
                readonly name: "Log";
                readonly I: typeof import("../gen/robot/v1/robot_pb").LogRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").LogResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getCloudMetadata: {
                readonly name: "GetCloudMetadata";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetCloudMetadataRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetCloudMetadataResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly restartModule: {
                readonly name: "RestartModule";
                readonly I: typeof RestartModuleRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").RestartModuleResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly shutdown: {
                readonly name: "Shutdown";
                readonly I: typeof import("../gen/robot/v1/robot_pb").ShutdownRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").ShutdownResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getMachineStatus: {
                readonly name: "GetMachineStatus";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetMachineStatusRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetMachineStatusResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getVersion: {
                readonly name: "GetVersion";
                readonly I: typeof import("../gen/robot/v1/robot_pb").GetVersionRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").GetVersionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly tunnel: {
                readonly name: "Tunnel";
                readonly I: typeof import("../gen/robot/v1/robot_pb").TunnelRequest;
                readonly O: typeof import("../gen/robot/v1/robot_pb").TunnelResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.BiDiStreaming;
            };
        };
    }>;
    get armService(): PromiseClient<{
        readonly typeName: "viam.component.arm.v1.ArmService";
        readonly methods: {
            readonly getEndPosition: {
                readonly name: "GetEndPosition";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").GetEndPositionRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").GetEndPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveToPosition: {
                readonly name: "MoveToPosition";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").MoveToPositionRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").MoveToPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getJointPositions: {
                readonly name: "GetJointPositions";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").GetJointPositionsRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").GetJointPositionsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveToJointPositions: {
                readonly name: "MoveToJointPositions";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").MoveToJointPositionsRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").MoveToJointPositionsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveThroughJointPositions: {
                readonly name: "MoveThroughJointPositions";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").MoveThroughJointPositionsRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").MoveThroughJointPositionsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").StopRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/arm/v1/arm_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/arm/v1/arm_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getKinematics: {
                readonly name: "GetKinematics";
                readonly I: typeof import("../gen/common/v1/common_pb").GetKinematicsRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetKinematicsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get baseService(): PromiseClient<{
        readonly typeName: "viam.component.base.v1.BaseService";
        readonly methods: {
            readonly moveStraight: {
                readonly name: "MoveStraight";
                readonly I: typeof import("../gen/component/base/v1/base_pb").MoveStraightRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").MoveStraightResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly spin: {
                readonly name: "Spin";
                readonly I: typeof import("../gen/component/base/v1/base_pb").SpinRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").SpinResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setPower: {
                readonly name: "SetPower";
                readonly I: typeof import("../gen/component/base/v1/base_pb").SetPowerRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").SetPowerResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setVelocity: {
                readonly name: "SetVelocity";
                readonly I: typeof import("../gen/component/base/v1/base_pb").SetVelocityRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").SetVelocityResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/base/v1/base_pb").StopRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/base/v1/base_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/component/base/v1/base_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/component/base/v1/base_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get boardService(): PromiseClient<{
        readonly typeName: "viam.component.board.v1.BoardService";
        readonly methods: {
            readonly setGPIO: {
                readonly name: "SetGPIO";
                readonly I: typeof import("../gen/component/board/v1/board_pb").SetGPIORequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").SetGPIOResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGPIO: {
                readonly name: "GetGPIO";
                readonly I: typeof import("../gen/component/board/v1/board_pb").GetGPIORequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").GetGPIOResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly pWM: {
                readonly name: "PWM";
                readonly I: typeof import("../gen/component/board/v1/board_pb").PWMRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").PWMResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setPWM: {
                readonly name: "SetPWM";
                readonly I: typeof import("../gen/component/board/v1/board_pb").SetPWMRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").SetPWMResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly pWMFrequency: {
                readonly name: "PWMFrequency";
                readonly I: typeof import("../gen/component/board/v1/board_pb").PWMFrequencyRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").PWMFrequencyResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setPWMFrequency: {
                readonly name: "SetPWMFrequency";
                readonly I: typeof import("../gen/component/board/v1/board_pb").SetPWMFrequencyRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").SetPWMFrequencyResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly readAnalogReader: {
                readonly name: "ReadAnalogReader";
                readonly I: typeof import("../gen/component/board/v1/board_pb").ReadAnalogReaderRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").ReadAnalogReaderResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly writeAnalog: {
                readonly name: "WriteAnalog";
                readonly I: typeof import("../gen/component/board/v1/board_pb").WriteAnalogRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").WriteAnalogResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getDigitalInterruptValue: {
                readonly name: "GetDigitalInterruptValue";
                readonly I: typeof import("../gen/component/board/v1/board_pb").GetDigitalInterruptValueRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").GetDigitalInterruptValueResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly streamTicks: {
                readonly name: "StreamTicks";
                readonly I: typeof import("../gen/component/board/v1/board_pb").StreamTicksRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").StreamTicksResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.ServerStreaming;
            };
            readonly setPowerMode: {
                readonly name: "SetPowerMode";
                readonly I: typeof import("../gen/component/board/v1/board_pb").SetPowerModeRequest;
                readonly O: typeof import("../gen/component/board/v1/board_pb").SetPowerModeResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get encoderService(): PromiseClient<{
        readonly typeName: "viam.component.encoder.v1.EncoderService";
        readonly methods: {
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/component/encoder/v1/encoder_pb").GetPositionRequest;
                readonly O: typeof import("../gen/component/encoder/v1/encoder_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly resetPosition: {
                readonly name: "ResetPosition";
                readonly I: typeof import("../gen/component/encoder/v1/encoder_pb").ResetPositionRequest;
                readonly O: typeof import("../gen/component/encoder/v1/encoder_pb").ResetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/component/encoder/v1/encoder_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/component/encoder/v1/encoder_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get gantryService(): PromiseClient<{
        readonly typeName: "viam.component.gantry.v1.GantryService";
        readonly methods: {
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").GetPositionRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveToPosition: {
                readonly name: "MoveToPosition";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").MoveToPositionRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").MoveToPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly home: {
                readonly name: "Home";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").HomeRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").HomeResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getLengths: {
                readonly name: "GetLengths";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").GetLengthsRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").GetLengthsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").StopRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/gantry/v1/gantry_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/gantry/v1/gantry_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get genericService(): PromiseClient<{
        readonly typeName: "viam.component.generic.v1.GenericService";
        readonly methods: {
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get gripperService(): PromiseClient<{
        readonly typeName: "viam.component.gripper.v1.GripperService";
        readonly methods: {
            readonly open: {
                readonly name: "Open";
                readonly I: typeof import("../gen/component/gripper/v1/gripper_pb").OpenRequest;
                readonly O: typeof import("../gen/component/gripper/v1/gripper_pb").OpenResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly grab: {
                readonly name: "Grab";
                readonly I: typeof import("../gen/component/gripper/v1/gripper_pb").GrabRequest;
                readonly O: typeof import("../gen/component/gripper/v1/gripper_pb").GrabResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/gripper/v1/gripper_pb").StopRequest;
                readonly O: typeof import("../gen/component/gripper/v1/gripper_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/gripper/v1/gripper_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/gripper/v1/gripper_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get movementSensorService(): PromiseClient<{
        readonly typeName: "viam.component.movementsensor.v1.MovementSensorService";
        readonly methods: {
            readonly getLinearVelocity: {
                readonly name: "GetLinearVelocity";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetLinearVelocityRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetLinearVelocityResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getAngularVelocity: {
                readonly name: "GetAngularVelocity";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetAngularVelocityRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetAngularVelocityResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getCompassHeading: {
                readonly name: "GetCompassHeading";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetCompassHeadingRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetCompassHeadingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getOrientation: {
                readonly name: "GetOrientation";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetOrientationRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetOrientationResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetPositionRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getAccuracy: {
                readonly name: "GetAccuracy";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetAccuracyRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetAccuracyResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getLinearAcceleration: {
                readonly name: "GetLinearAcceleration";
                readonly I: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetLinearAccelerationRequest;
                readonly O: typeof import("../gen/component/movementsensor/v1/movementsensor_pb").GetLinearAccelerationResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getReadings: {
                readonly name: "GetReadings";
                readonly I: typeof import("../gen/common/v1/common_pb").GetReadingsRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetReadingsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get powerSensorService(): PromiseClient<{
        readonly typeName: "viam.component.powersensor.v1.PowerSensorService";
        readonly methods: {
            readonly getVoltage: {
                readonly name: "GetVoltage";
                readonly I: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetVoltageRequest;
                readonly O: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetVoltageResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getCurrent: {
                readonly name: "GetCurrent";
                readonly I: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetCurrentRequest;
                readonly O: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetCurrentResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPower: {
                readonly name: "GetPower";
                readonly I: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetPowerRequest;
                readonly O: typeof import("../gen/component/powersensor/v1/powersensor_pb").GetPowerResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getReadings: {
                readonly name: "GetReadings";
                readonly I: typeof import("../gen/common/v1/common_pb").GetReadingsRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetReadingsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get inputControllerService(): PromiseClient<{
        readonly typeName: "viam.component.inputcontroller.v1.InputControllerService";
        readonly methods: {
            readonly getControls: {
                readonly name: "GetControls";
                readonly I: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").GetControlsRequest;
                readonly O: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").GetControlsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getEvents: {
                readonly name: "GetEvents";
                readonly I: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").GetEventsRequest;
                readonly O: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").GetEventsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly streamEvents: {
                readonly name: "StreamEvents";
                readonly I: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").StreamEventsRequest;
                readonly O: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").StreamEventsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.ServerStreaming;
            };
            readonly triggerEvent: {
                readonly name: "TriggerEvent";
                readonly I: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").TriggerEventRequest;
                readonly O: typeof import("../gen/component/inputcontroller/v1/input_controller_pb").TriggerEventResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get motorService(): PromiseClient<{
        readonly typeName: "viam.component.motor.v1.MotorService";
        readonly methods: {
            readonly setPower: {
                readonly name: "SetPower";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").SetPowerRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").SetPowerResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly goFor: {
                readonly name: "GoFor";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").GoForRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").GoForResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly goTo: {
                readonly name: "GoTo";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").GoToRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").GoToResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setRPM: {
                readonly name: "SetRPM";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").SetRPMRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").SetRPMResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly resetZeroPosition: {
                readonly name: "ResetZeroPosition";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").ResetZeroPositionRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").ResetZeroPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").GetPositionRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").StopRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isPowered: {
                readonly name: "IsPowered";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").IsPoweredRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").IsPoweredResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/motor/v1/motor_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/motor/v1/motor_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get navigationService(): PromiseClient<{
        readonly typeName: "viam.service.navigation.v1.NavigationService";
        readonly methods: {
            readonly getMode: {
                readonly name: "GetMode";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetModeRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetModeResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly setMode: {
                readonly name: "SetMode";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").SetModeRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").SetModeResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getLocation: {
                readonly name: "GetLocation";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetLocationRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetLocationResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getWaypoints: {
                readonly name: "GetWaypoints";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetWaypointsRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetWaypointsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly addWaypoint: {
                readonly name: "AddWaypoint";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").AddWaypointRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").AddWaypointResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly removeWaypoint: {
                readonly name: "RemoveWaypoint";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").RemoveWaypointRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").RemoveWaypointResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getObstacles: {
                readonly name: "GetObstacles";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetObstaclesRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetObstaclesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPaths: {
                readonly name: "GetPaths";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetPathsRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetPathsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/service/navigation/v1/navigation_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/service/navigation/v1/navigation_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get discoveryService(): PromiseClient<{
        readonly typeName: "viam.service.discovery.v1.DiscoveryService";
        readonly methods: {
            readonly discoverResources: {
                readonly name: "DiscoverResources";
                readonly I: typeof import("../gen/service/discovery/v1/discovery_pb").DiscoverResourcesRequest;
                readonly O: typeof import("../gen/service/discovery/v1/discovery_pb").DiscoverResourcesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get motionService(): PromiseClient<{
        readonly typeName: "viam.service.motion.v1.MotionService";
        readonly methods: {
            readonly move: {
                readonly name: "Move";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").MoveRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").MoveResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveOnMap: {
                readonly name: "MoveOnMap";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").MoveOnMapRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").MoveOnMapResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly moveOnGlobe: {
                readonly name: "MoveOnGlobe";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").MoveOnGlobeRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").MoveOnGlobeResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPose: {
                readonly name: "GetPose";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").GetPoseRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").GetPoseResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stopPlan: {
                readonly name: "StopPlan";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").StopPlanRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").StopPlanResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly listPlanStatuses: {
                readonly name: "ListPlanStatuses";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").ListPlanStatusesRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").ListPlanStatusesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPlan: {
                readonly name: "GetPlan";
                readonly I: typeof import("../gen/service/motion/v1/motion_pb").GetPlanRequest;
                readonly O: typeof import("../gen/service/motion/v1/motion_pb").GetPlanResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get visionService(): PromiseClient<{
        readonly typeName: "viam.service.vision.v1.VisionService";
        readonly methods: {
            readonly getDetectionsFromCamera: {
                readonly name: "GetDetectionsFromCamera";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetDetectionsFromCameraRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetDetectionsFromCameraResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getDetections: {
                readonly name: "GetDetections";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetDetectionsRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetDetectionsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getClassificationsFromCamera: {
                readonly name: "GetClassificationsFromCamera";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetClassificationsFromCameraRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetClassificationsFromCameraResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getClassifications: {
                readonly name: "GetClassifications";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetClassificationsRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetClassificationsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getObjectPointClouds: {
                readonly name: "GetObjectPointClouds";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetObjectPointCloudsRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetObjectPointCloudsResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly captureAllFromCamera: {
                readonly name: "CaptureAllFromCamera";
                readonly I: typeof import("../gen/service/vision/v1/vision_pb").CaptureAllFromCameraRequest;
                readonly O: typeof import("../gen/service/vision/v1/vision_pb").CaptureAllFromCameraResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get servoService(): PromiseClient<{
        readonly typeName: "viam.component.servo.v1.ServoService";
        readonly methods: {
            readonly move: {
                readonly name: "Move";
                readonly I: typeof import("../gen/component/servo/v1/servo_pb").MoveRequest;
                readonly O: typeof import("../gen/component/servo/v1/servo_pb").MoveResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/component/servo/v1/servo_pb").GetPositionRequest;
                readonly O: typeof import("../gen/component/servo/v1/servo_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly stop: {
                readonly name: "Stop";
                readonly I: typeof import("../gen/component/servo/v1/servo_pb").StopRequest;
                readonly O: typeof import("../gen/component/servo/v1/servo_pb").StopResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly isMoving: {
                readonly name: "IsMoving";
                readonly I: typeof import("../gen/component/servo/v1/servo_pb").IsMovingRequest;
                readonly O: typeof import("../gen/component/servo/v1/servo_pb").IsMovingResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getGeometries: {
                readonly name: "GetGeometries";
                readonly I: typeof import("../gen/common/v1/common_pb").GetGeometriesRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").GetGeometriesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    get slamService(): PromiseClient<{
        readonly typeName: "viam.service.slam.v1.SLAMService";
        readonly methods: {
            readonly getPosition: {
                readonly name: "GetPosition";
                readonly I: typeof import("../gen/service/slam/v1/slam_pb").GetPositionRequest;
                readonly O: typeof import("../gen/service/slam/v1/slam_pb").GetPositionResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly getPointCloudMap: {
                readonly name: "GetPointCloudMap";
                readonly I: typeof import("../gen/service/slam/v1/slam_pb").GetPointCloudMapRequest;
                readonly O: typeof import("../gen/service/slam/v1/slam_pb").GetPointCloudMapResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.ServerStreaming;
            };
            readonly getInternalState: {
                readonly name: "GetInternalState";
                readonly I: typeof import("../gen/service/slam/v1/slam_pb").GetInternalStateRequest;
                readonly O: typeof import("../gen/service/slam/v1/slam_pb").GetInternalStateResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.ServerStreaming;
            };
            readonly getProperties: {
                readonly name: "GetProperties";
                readonly I: typeof import("../gen/service/slam/v1/slam_pb").GetPropertiesRequest;
                readonly O: typeof import("../gen/service/slam/v1/slam_pb").GetPropertiesResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
            readonly doCommand: {
                readonly name: "DoCommand";
                readonly I: typeof import("../gen/common/v1/common_pb").DoCommandRequest;
                readonly O: typeof import("../gen/common/v1/common_pb").DoCommandResponse;
                readonly kind: import("@bufbuild/protobuf").MethodKind.Unary;
            };
        };
    }>;
    createServiceClient<T extends ServiceType>(svcType: T): PromiseClient<T>;
    get peerConnection(): RTCPeerConnection | undefined;
    disconnect(): Promise<void>;
    isConnected(): boolean;
    connect({ creds, priority, dialTimeout, }?: ConnectOptions): Promise<void>;
    getSessions(): Promise<import("../gen/robot/v1/robot_pb").Session[]>;
    getOperations(): Promise<import("../gen/robot/v1/robot_pb").Operation[]>;
    cancelOperation(id: string): Promise<void>;
    blockForOperation(id: string): Promise<void>;
    stopAll(): Promise<void>;
    frameSystemConfig(transforms: Transform[]): Promise<import("../gen/robot/v1/robot_pb").FrameSystemConfig[]>;
    transformPose(source: PoseInFrame, destination: string, supplementalTransforms: Transform[]): Promise<PoseInFrame>;
    transformPCD(pointCloudPCD: Uint8Array, source: string, destination: string): Promise<Uint8Array>;
    discoverComponents(queries: DiscoveryQuery[]): Promise<import("../gen/robot/v1/robot_pb").Discovery[]>;
    getModelsFromModules(): Promise<import("../gen/robot/v1/robot_pb").ModuleModel[]>;
    getCloudMetadata(): Promise<import("../gen/robot/v1/robot_pb").GetCloudMetadataResponse>;
    resourceNames(): Promise<import("../gen/common/v1/common_pb").ResourceName[]>;
    resourceRPCSubtypes(): Promise<import("../gen/robot/v1/robot_pb").ResourceRPCSubtype[]>;
    getMachineStatus(): Promise<import("../gen/robot/v1/robot_pb").GetMachineStatusResponse>;
    getVersion(): Promise<import("../gen/robot/v1/robot_pb").GetVersionResponse>;
    restartModule(moduleId?: string, moduleName?: string): Promise<void>;
}
export {};
